// Generated by Haxe 3.4.3
(function ($global) { "use strict";
var $hxClasses = {},$estr = function() { return js_Boot.__string_rec(this,''); };
function $extend(from, fields) {
	function Inherit() {} Inherit.prototype = from; var proto = new Inherit();
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var EReg = function(r,opt) {
	this.r = new RegExp(r,opt.split("u").join(""));
};
$hxClasses["EReg"] = EReg;
EReg.__name__ = ["EReg"];
EReg.prototype = {
	r: null
	,match: function(s) {
		if(this.r.global) {
			this.r.lastIndex = 0;
		}
		this.r.m = this.r.exec(s);
		this.r.s = s;
		return this.r.m != null;
	}
	,matched: function(n) {
		if(this.r.m != null && n >= 0 && n < this.r.m.length) {
			return this.r.m[n];
		} else {
			throw new js__$Boot_HaxeError("EReg::matched");
		}
	}
	,matchedLeft: function() {
		if(this.r.m == null) {
			throw new js__$Boot_HaxeError("No string matched");
		}
		return HxOverrides.substr(this.r.s,0,this.r.m.index);
	}
	,matchedRight: function() {
		if(this.r.m == null) {
			throw new js__$Boot_HaxeError("No string matched");
		}
		var sz = this.r.m.index + this.r.m[0].length;
		return HxOverrides.substr(this.r.s,sz,this.r.s.length - sz);
	}
	,matchedPos: function() {
		if(this.r.m == null) {
			throw new js__$Boot_HaxeError("No string matched");
		}
		return { pos : this.r.m.index, len : this.r.m[0].length};
	}
	,matchSub: function(s,pos,len) {
		if(len == null) {
			len = -1;
		}
		if(this.r.global) {
			this.r.lastIndex = pos;
			var tmp = this.r;
			var tmp1 = len < 0 ? s : HxOverrides.substr(s,0,pos + len);
			this.r.m = tmp.exec(tmp1);
			var b = this.r.m != null;
			if(b) {
				this.r.s = s;
			}
			return b;
		} else {
			var b1 = this.match(len < 0 ? HxOverrides.substr(s,pos,null) : HxOverrides.substr(s,pos,len));
			if(b1) {
				this.r.s = s;
				this.r.m.index += pos;
			}
			return b1;
		}
	}
	,split: function(s) {
		var d = "#__delim__#";
		return s.replace(this.r,d).split(d);
	}
	,replace: function(s,by) {
		return s.replace(this.r,by);
	}
	,map: function(s,f) {
		var offset = 0;
		var buf_b = "";
		while(true) {
			if(offset >= s.length) {
				break;
			} else if(!this.matchSub(s,offset)) {
				buf_b += Std.string(HxOverrides.substr(s,offset,null));
				break;
			}
			var p = this.matchedPos();
			buf_b += Std.string(HxOverrides.substr(s,offset,p.pos - offset));
			buf_b += Std.string(f(this));
			if(p.len == 0) {
				buf_b += Std.string(HxOverrides.substr(s,p.pos,1));
				offset = p.pos + 1;
			} else {
				offset = p.pos + p.len;
			}
			if(!this.r.global) {
				break;
			}
		}
		if(!this.r.global && offset > 0 && offset < s.length) {
			buf_b += Std.string(HxOverrides.substr(s,offset,null));
		}
		return buf_b;
	}
	,__class__: EReg
};
var HxOverrides = function() { };
$hxClasses["HxOverrides"] = HxOverrides;
HxOverrides.__name__ = ["HxOverrides"];
HxOverrides.dateStr = function(date) {
	var m = date.getMonth() + 1;
	var d = date.getDate();
	var h = date.getHours();
	var mi = date.getMinutes();
	var s = date.getSeconds();
	return date.getFullYear() + "-" + (m < 10 ? "0" + m : "" + m) + "-" + (d < 10 ? "0" + d : "" + d) + " " + (h < 10 ? "0" + h : "" + h) + ":" + (mi < 10 ? "0" + mi : "" + mi) + ":" + (s < 10 ? "0" + s : "" + s);
};
HxOverrides.strDate = function(s) {
	var _g = s.length;
	switch(_g) {
	case 8:
		var k = s.split(":");
		var d = new Date();
		d["setTime"](0);
		d["setUTCHours"](k[0]);
		d["setUTCMinutes"](k[1]);
		d["setUTCSeconds"](k[2]);
		return d;
	case 10:
		var k1 = s.split("-");
		return new Date(k1[0],k1[1] - 1,k1[2],0,0,0);
	case 19:
		var k2 = s.split(" ");
		var y = k2[0].split("-");
		var t = k2[1].split(":");
		return new Date(y[0],y[1] - 1,y[2],t[0],t[1],t[2]);
	default:
		throw new js__$Boot_HaxeError("Invalid date format : " + s);
	}
};
HxOverrides.cca = function(s,index) {
	var x = s.charCodeAt(index);
	if(x != x) {
		return undefined;
	}
	return x;
};
HxOverrides.substr = function(s,pos,len) {
	if(len == null) {
		len = s.length;
	} else if(len < 0) {
		if(pos == 0) {
			len = s.length + len;
		} else {
			return "";
		}
	}
	return s.substr(pos,len);
};
HxOverrides.indexOf = function(a,obj,i) {
	var len = a.length;
	if(i < 0) {
		i += len;
		if(i < 0) {
			i = 0;
		}
	}
	while(i < len) {
		if(a[i] === obj) {
			return i;
		}
		++i;
	}
	return -1;
};
HxOverrides.lastIndexOf = function(a,obj,i) {
	var len = a.length;
	if(i >= len) {
		i = len - 1;
	} else if(i < 0) {
		i += len;
	}
	while(i >= 0) {
		if(a[i] === obj) {
			return i;
		}
		--i;
	}
	return -1;
};
HxOverrides.remove = function(a,obj) {
	var i = a.indexOf(obj);
	if(i == -1) {
		return false;
	}
	a.splice(i,1);
	return true;
};
HxOverrides.iter = function(a) {
	return { cur : 0, arr : a, hasNext : function() {
		return this.cur < this.arr.length;
	}, next : function() {
		return this.arr[this.cur++];
	}};
};
var IntIterator = function(min,max) {
	this.min = min;
	this.max = max;
};
$hxClasses["IntIterator"] = IntIterator;
IntIterator.__name__ = ["IntIterator"];
IntIterator.prototype = {
	min: null
	,max: null
	,hasNext: function() {
		return this.min < this.max;
	}
	,next: function() {
		return this.min++;
	}
	,__class__: IntIterator
};
var Lambda = function() { };
$hxClasses["Lambda"] = Lambda;
Lambda.__name__ = ["Lambda"];
Lambda.array = function(it) {
	var a = [];
	var i = $iterator(it)();
	while(i.hasNext()) {
		var i1 = i.next();
		a.push(i1);
	}
	return a;
};
Lambda.list = function(it) {
	var l = new List();
	var i = $iterator(it)();
	while(i.hasNext()) {
		var i1 = i.next();
		l.add(i1);
	}
	return l;
};
Lambda.map = function(it,f) {
	var l = new List();
	var x = $iterator(it)();
	while(x.hasNext()) {
		var x1 = x.next();
		l.add(f(x1));
	}
	return l;
};
Lambda.mapi = function(it,f) {
	var l = new List();
	var i = 0;
	var x = $iterator(it)();
	while(x.hasNext()) {
		var x1 = x.next();
		l.add(f(i++,x1));
	}
	return l;
};
Lambda.flatten = function(it) {
	var l = new List();
	var e = $iterator(it)();
	while(e.hasNext()) {
		var e1 = e.next();
		var x = $iterator(e1)();
		while(x.hasNext()) {
			var x1 = x.next();
			l.add(x1);
		}
	}
	return l;
};
Lambda.flatMap = function(it,f) {
	return Lambda.flatten(Lambda.map(it,f));
};
Lambda.has = function(it,elt) {
	var x = $iterator(it)();
	while(x.hasNext()) {
		var x1 = x.next();
		if(x1 == elt) {
			return true;
		}
	}
	return false;
};
Lambda.exists = function(it,f) {
	var x = $iterator(it)();
	while(x.hasNext()) {
		var x1 = x.next();
		if(f(x1)) {
			return true;
		}
	}
	return false;
};
Lambda.foreach = function(it,f) {
	var x = $iterator(it)();
	while(x.hasNext()) {
		var x1 = x.next();
		if(!f(x1)) {
			return false;
		}
	}
	return true;
};
Lambda.iter = function(it,f) {
	var x = $iterator(it)();
	while(x.hasNext()) {
		var x1 = x.next();
		f(x1);
	}
};
Lambda.filter = function(it,f) {
	var l = new List();
	var x = $iterator(it)();
	while(x.hasNext()) {
		var x1 = x.next();
		if(f(x1)) {
			l.add(x1);
		}
	}
	return l;
};
Lambda.fold = function(it,f,first) {
	var x = $iterator(it)();
	while(x.hasNext()) {
		var x1 = x.next();
		first = f(x1,first);
	}
	return first;
};
Lambda.count = function(it,pred) {
	var n = 0;
	if(pred == null) {
		var _ = $iterator(it)();
		while(_.hasNext()) {
			var _1 = _.next();
			++n;
		}
	} else {
		var x = $iterator(it)();
		while(x.hasNext()) {
			var x1 = x.next();
			if(pred(x1)) {
				++n;
			}
		}
	}
	return n;
};
Lambda.empty = function(it) {
	return !$iterator(it)().hasNext();
};
Lambda.indexOf = function(it,v) {
	var i = 0;
	var v2 = $iterator(it)();
	while(v2.hasNext()) {
		var v21 = v2.next();
		if(v == v21) {
			return i;
		}
		++i;
	}
	return -1;
};
Lambda.find = function(it,f) {
	var v = $iterator(it)();
	while(v.hasNext()) {
		var v1 = v.next();
		if(f(v1)) {
			return v1;
		}
	}
	return null;
};
Lambda.concat = function(a,b) {
	var l = new List();
	var x = $iterator(a)();
	while(x.hasNext()) {
		var x1 = x.next();
		l.add(x1);
	}
	var x2 = $iterator(b)();
	while(x2.hasNext()) {
		var x3 = x2.next();
		l.add(x3);
	}
	return l;
};
var List = function() {
	this.length = 0;
};
$hxClasses["List"] = List;
List.__name__ = ["List"];
List.prototype = {
	h: null
	,q: null
	,length: null
	,add: function(item) {
		var x = new _$List_ListNode(item,null);
		if(this.h == null) {
			this.h = x;
		} else {
			this.q.next = x;
		}
		this.q = x;
		this.length++;
	}
	,push: function(item) {
		var x = new _$List_ListNode(item,this.h);
		this.h = x;
		if(this.q == null) {
			this.q = x;
		}
		this.length++;
	}
	,first: function() {
		if(this.h == null) {
			return null;
		} else {
			return this.h.item;
		}
	}
	,last: function() {
		if(this.q == null) {
			return null;
		} else {
			return this.q.item;
		}
	}
	,pop: function() {
		if(this.h == null) {
			return null;
		}
		var x = this.h.item;
		this.h = this.h.next;
		if(this.h == null) {
			this.q = null;
		}
		this.length--;
		return x;
	}
	,isEmpty: function() {
		return this.h == null;
	}
	,clear: function() {
		this.h = null;
		this.q = null;
		this.length = 0;
	}
	,remove: function(v) {
		var prev = null;
		var l = this.h;
		while(l != null) {
			if(l.item == v) {
				if(prev == null) {
					this.h = l.next;
				} else {
					prev.next = l.next;
				}
				if(this.q == l) {
					this.q = prev;
				}
				this.length--;
				return true;
			}
			prev = l;
			l = l.next;
		}
		return false;
	}
	,iterator: function() {
		return new _$List_ListIterator(this.h);
	}
	,toString: function() {
		var s_b = "";
		var first = true;
		var l = this.h;
		s_b += "{";
		while(l != null) {
			if(first) {
				first = false;
			} else {
				s_b += ", ";
			}
			s_b += Std.string(Std.string(l.item));
			l = l.next;
		}
		s_b += "}";
		return s_b;
	}
	,join: function(sep) {
		var s_b = "";
		var first = true;
		var l = this.h;
		while(l != null) {
			if(first) {
				first = false;
			} else {
				s_b += sep == null ? "null" : "" + sep;
			}
			s_b += Std.string(l.item);
			l = l.next;
		}
		return s_b;
	}
	,filter: function(f) {
		var l2 = new List();
		var l = this.h;
		while(l != null) {
			var v = l.item;
			l = l.next;
			if(f(v)) {
				l2.add(v);
			}
		}
		return l2;
	}
	,map: function(f) {
		var b = new List();
		var l = this.h;
		while(l != null) {
			var v = l.item;
			l = l.next;
			b.add(f(v));
		}
		return b;
	}
	,__class__: List
};
var _$List_ListNode = function(item,next) {
	this.item = item;
	this.next = next;
};
$hxClasses["_List.ListNode"] = _$List_ListNode;
_$List_ListNode.__name__ = ["_List","ListNode"];
_$List_ListNode.prototype = {
	item: null
	,next: null
	,__class__: _$List_ListNode
};
var _$List_ListIterator = function(head) {
	this.head = head;
};
$hxClasses["_List.ListIterator"] = _$List_ListIterator;
_$List_ListIterator.__name__ = ["_List","ListIterator"];
_$List_ListIterator.prototype = {
	head: null
	,hasNext: function() {
		return this.head != null;
	}
	,next: function() {
		var val = this.head.item;
		this.head = this.head.next;
		return val;
	}
	,__class__: _$List_ListIterator
};
var _$Map_Map_$Impl_$ = {};
$hxClasses["_Map.Map_Impl_"] = _$Map_Map_$Impl_$;
_$Map_Map_$Impl_$.__name__ = ["_Map","Map_Impl_"];
_$Map_Map_$Impl_$.set = function(this1,key,value) {
	this1.set(key,value);
};
_$Map_Map_$Impl_$.get = function(this1,key) {
	return this1.get(key);
};
_$Map_Map_$Impl_$.exists = function(this1,key) {
	return this1.exists(key);
};
_$Map_Map_$Impl_$.remove = function(this1,key) {
	return this1.remove(key);
};
_$Map_Map_$Impl_$.keys = function(this1) {
	return this1.keys();
};
_$Map_Map_$Impl_$.iterator = function(this1) {
	return this1.iterator();
};
_$Map_Map_$Impl_$.toString = function(this1) {
	return this1.toString();
};
_$Map_Map_$Impl_$.arrayWrite = function(this1,k,v) {
	this1.set(k,v);
	return v;
};
_$Map_Map_$Impl_$.toStringMap = function(t) {
	return new haxe_ds_StringMap();
};
_$Map_Map_$Impl_$.toIntMap = function(t) {
	return new haxe_ds_IntMap();
};
_$Map_Map_$Impl_$.toEnumValueMapMap = function(t) {
	return new haxe_ds_EnumValueMap();
};
_$Map_Map_$Impl_$.toObjectMap = function(t) {
	return new haxe_ds_ObjectMap();
};
_$Map_Map_$Impl_$.fromStringMap = function(map) {
	return map;
};
_$Map_Map_$Impl_$.fromIntMap = function(map) {
	return map;
};
_$Map_Map_$Impl_$.fromObjectMap = function(map) {
	return map;
};
Math.__name__ = ["Math"];
var Reflect = function() { };
$hxClasses["Reflect"] = Reflect;
Reflect.__name__ = ["Reflect"];
Reflect.hasField = function(o,field) {
	return Object.prototype.hasOwnProperty.call(o,field);
};
Reflect.field = function(o,field) {
	try {
		return o[field];
	} catch( e ) {
		return null;
	}
};
Reflect.setField = function(o,field,value) {
	o[field] = value;
};
Reflect.getProperty = function(o,field) {
	var tmp;
	if(o == null) {
		return null;
	} else {
		var tmp1;
		if(o.__properties__) {
			tmp = o.__properties__["get_" + field];
			tmp1 = tmp;
		} else {
			tmp1 = false;
		}
		if(tmp1) {
			return o[tmp]();
		} else {
			return o[field];
		}
	}
};
Reflect.setProperty = function(o,field,value) {
	var tmp;
	var tmp1;
	if(o.__properties__) {
		tmp = o.__properties__["set_" + field];
		tmp1 = tmp;
	} else {
		tmp1 = false;
	}
	if(tmp1) {
		o[tmp](value);
	} else {
		o[field] = value;
	}
};
Reflect.callMethod = function(o,func,args) {
	return func.apply(o,args);
};
Reflect.fields = function(o) {
	var a = [];
	if(o != null) {
		var hasOwnProperty = Object.prototype.hasOwnProperty;
		for( var f in o ) {
		if(f != "__id__" && f != "hx__closures__" && hasOwnProperty.call(o,f)) {
			a.push(f);
		}
		}
	}
	return a;
};
Reflect.isFunction = function(f) {
	if(typeof(f) == "function") {
		return !(f.__name__ || f.__ename__);
	} else {
		return false;
	}
};
Reflect.compare = function(a,b) {
	if(a == b) {
		return 0;
	} else if(a > b) {
		return 1;
	} else {
		return -1;
	}
};
Reflect.compareMethods = function(f1,f2) {
	if(f1 == f2) {
		return true;
	}
	if(!Reflect.isFunction(f1) || !Reflect.isFunction(f2)) {
		return false;
	}
	if(f1.scope == f2.scope && f1.method == f2.method) {
		return f1.method != null;
	} else {
		return false;
	}
};
Reflect.isObject = function(v) {
	if(v == null) {
		return false;
	}
	var t = typeof(v);
	if(!(t == "string" || t == "object" && v.__enum__ == null)) {
		if(t == "function") {
			return (v.__name__ || v.__ename__) != null;
		} else {
			return false;
		}
	} else {
		return true;
	}
};
Reflect.isEnumValue = function(v) {
	if(v != null) {
		return v.__enum__ != null;
	} else {
		return false;
	}
};
Reflect.deleteField = function(o,field) {
	if(!Object.prototype.hasOwnProperty.call(o,field)) {
		return false;
	}
	delete(o[field]);
	return true;
};
Reflect.copy = function(o) {
	var o2 = { };
	var _g = 0;
	var _g1 = Reflect.fields(o);
	while(_g < _g1.length) {
		var f = _g1[_g];
		++_g;
		o2[f] = Reflect.field(o,f);
	}
	return o2;
};
Reflect.makeVarArgs = function(f) {
	return function() {
		var a = Array.prototype.slice.call(arguments);
		return f(a);
	};
};
var Std = function() { };
$hxClasses["Std"] = Std;
Std.__name__ = ["Std"];
Std["is"] = function(v,t) {
	return js_Boot.__instanceof(v,t);
};
Std.instance = function(value,c) {
	if((value instanceof c)) {
		return value;
	} else {
		return null;
	}
};
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
Std["int"] = function(x) {
	return x | 0;
};
Std.parseInt = function(x) {
	var v = parseInt(x,10);
	if(v == 0 && (HxOverrides.cca(x,1) == 120 || HxOverrides.cca(x,1) == 88)) {
		v = parseInt(x);
	}
	if(isNaN(v)) {
		return null;
	}
	return v;
};
Std.parseFloat = function(x) {
	return parseFloat(x);
};
Std.random = function(x) {
	if(x <= 0) {
		return 0;
	} else {
		return Math.floor(Math.random() * x);
	}
};
var StringBuf = function() {
	this.b = "";
};
$hxClasses["StringBuf"] = StringBuf;
StringBuf.__name__ = ["StringBuf"];
StringBuf.prototype = {
	b: null
	,get_length: function() {
		return this.b.length;
	}
	,add: function(x) {
		this.b += Std.string(x);
	}
	,addChar: function(c) {
		this.b += String.fromCharCode(c);
	}
	,addSub: function(s,pos,len) {
		this.b += len == null ? HxOverrides.substr(s,pos,null) : HxOverrides.substr(s,pos,len);
	}
	,toString: function() {
		return this.b;
	}
	,__class__: StringBuf
	,__properties__: {get_length:"get_length"}
};
var StringTools = function() { };
$hxClasses["StringTools"] = StringTools;
StringTools.__name__ = ["StringTools"];
StringTools.urlEncode = function(s) {
	return encodeURIComponent(s);
};
StringTools.urlDecode = function(s) {
	return decodeURIComponent(s.split("+").join(" "));
};
StringTools.htmlEscape = function(s,quotes) {
	s = s.split("&").join("&amp;").split("<").join("&lt;").split(">").join("&gt;");
	if(quotes) {
		return s.split("\"").join("&quot;").split("'").join("&#039;");
	} else {
		return s;
	}
};
StringTools.htmlUnescape = function(s) {
	return s.split("&gt;").join(">").split("&lt;").join("<").split("&quot;").join("\"").split("&#039;").join("'").split("&amp;").join("&");
};
StringTools.startsWith = function(s,start) {
	if(s.length >= start.length) {
		return HxOverrides.substr(s,0,start.length) == start;
	} else {
		return false;
	}
};
StringTools.endsWith = function(s,end) {
	var elen = end.length;
	var slen = s.length;
	if(slen >= elen) {
		return HxOverrides.substr(s,slen - elen,elen) == end;
	} else {
		return false;
	}
};
StringTools.isSpace = function(s,pos) {
	var c = HxOverrides.cca(s,pos);
	if(!(c > 8 && c < 14)) {
		return c == 32;
	} else {
		return true;
	}
};
StringTools.ltrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,r)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,r,l - r);
	} else {
		return s;
	}
};
StringTools.rtrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,l - r - 1)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,0,l - r);
	} else {
		return s;
	}
};
StringTools.trim = function(s) {
	return StringTools.ltrim(StringTools.rtrim(s));
};
StringTools.lpad = function(s,c,l) {
	if(c.length <= 0) {
		return s;
	}
	while(s.length < l) s = c + s;
	return s;
};
StringTools.rpad = function(s,c,l) {
	if(c.length <= 0) {
		return s;
	}
	while(s.length < l) s += c;
	return s;
};
StringTools.replace = function(s,sub,by) {
	return s.split(sub).join(by);
};
StringTools.hex = function(n,digits) {
	var s = "";
	var hexChars = "0123456789ABCDEF";
	while(true) {
		s = hexChars.charAt(n & 15) + s;
		n >>>= 4;
		if(!(n > 0)) {
			break;
		}
	}
	if(digits != null) {
		while(s.length < digits) s = "0" + s;
	}
	return s;
};
StringTools.fastCodeAt = function(s,index) {
	return s.charCodeAt(index);
};
StringTools.isEof = function(c) {
	return c != c;
};
StringTools.quoteUnixArg = function(argument) {
	if(argument == "") {
		return "''";
	}
	if(!new EReg("[^a-zA-Z0-9_@%+=:,./-]","").match(argument)) {
		return argument;
	}
	return "'" + StringTools.replace(argument,"'","'\"'\"'") + "'";
};
StringTools.quoteWinArg = function(argument,escapeMetaCharacters) {
	if(!new EReg("^[^ \t\\\\\"]+$","").match(argument)) {
		var result_b = "";
		var needquote = argument.indexOf(" ") != -1 || argument.indexOf("\t") != -1 || argument == "";
		if(needquote) {
			result_b += "\"";
		}
		var bs_buf = new StringBuf();
		var _g1 = 0;
		var _g = argument.length;
		while(_g1 < _g) {
			var i = _g1++;
			var _g2 = HxOverrides.cca(argument,i);
			if(_g2 == null) {
				var c = _g2;
				if(bs_buf.b.length > 0) {
					result_b += Std.string(bs_buf.b);
					bs_buf = new StringBuf();
				}
				result_b += String.fromCharCode(c);
			} else {
				switch(_g2) {
				case 34:
					var bs = bs_buf.b;
					result_b += bs == null ? "null" : "" + bs;
					result_b += bs == null ? "null" : "" + bs;
					bs_buf = new StringBuf();
					result_b += "\\\"";
					break;
				case 92:
					bs_buf.b += "\\";
					break;
				default:
					var c1 = _g2;
					if(bs_buf.b.length > 0) {
						result_b += Std.string(bs_buf.b);
						bs_buf = new StringBuf();
					}
					result_b += String.fromCharCode(c1);
				}
			}
		}
		result_b += Std.string(bs_buf.b);
		if(needquote) {
			result_b += Std.string(bs_buf.b);
			result_b += "\"";
		}
		argument = result_b;
	}
	if(escapeMetaCharacters) {
		var result_b1 = "";
		var _g11 = 0;
		var _g3 = argument.length;
		while(_g11 < _g3) {
			var i1 = _g11++;
			var c2 = HxOverrides.cca(argument,i1);
			if(StringTools.winMetaCharacters.indexOf(c2) >= 0) {
				result_b1 += "^";
			}
			result_b1 += String.fromCharCode(c2);
		}
		return result_b1;
	} else {
		return argument;
	}
};
var Test = function() { };
$hxClasses["Test"] = Test;
Test.__name__ = ["Test"];
Test.main = function() {
	var folderState = new com_mun_controller_controllerState_FolderState();
};
var ValueType = $hxClasses["ValueType"] = { __ename__ : ["ValueType"], __constructs__ : ["TNull","TInt","TFloat","TBool","TObject","TFunction","TClass","TEnum","TUnknown"] };
ValueType.TNull = ["TNull",0];
ValueType.TNull.toString = $estr;
ValueType.TNull.__enum__ = ValueType;
ValueType.TInt = ["TInt",1];
ValueType.TInt.toString = $estr;
ValueType.TInt.__enum__ = ValueType;
ValueType.TFloat = ["TFloat",2];
ValueType.TFloat.toString = $estr;
ValueType.TFloat.__enum__ = ValueType;
ValueType.TBool = ["TBool",3];
ValueType.TBool.toString = $estr;
ValueType.TBool.__enum__ = ValueType;
ValueType.TObject = ["TObject",4];
ValueType.TObject.toString = $estr;
ValueType.TObject.__enum__ = ValueType;
ValueType.TFunction = ["TFunction",5];
ValueType.TFunction.toString = $estr;
ValueType.TFunction.__enum__ = ValueType;
ValueType.TClass = function(c) { var $x = ["TClass",6,c]; $x.__enum__ = ValueType; $x.toString = $estr; return $x; };
ValueType.TEnum = function(e) { var $x = ["TEnum",7,e]; $x.__enum__ = ValueType; $x.toString = $estr; return $x; };
ValueType.TUnknown = ["TUnknown",8];
ValueType.TUnknown.toString = $estr;
ValueType.TUnknown.__enum__ = ValueType;
ValueType.__empty_constructs__ = [ValueType.TNull,ValueType.TInt,ValueType.TFloat,ValueType.TBool,ValueType.TObject,ValueType.TFunction,ValueType.TUnknown];
var Type = function() { };
$hxClasses["Type"] = Type;
Type.__name__ = ["Type"];
Type.getClass = function(o) {
	if(o == null) {
		return null;
	} else {
		return js_Boot.getClass(o);
	}
};
Type.getEnum = function(o) {
	if(o == null) {
		return null;
	}
	return o.__enum__;
};
Type.getSuperClass = function(c) {
	return c.__super__;
};
Type.getClassName = function(c) {
	var a = c.__name__;
	if(a == null) {
		return null;
	}
	return a.join(".");
};
Type.getEnumName = function(e) {
	var a = e.__ename__;
	return a.join(".");
};
Type.resolveClass = function(name) {
	var cl = $hxClasses[name];
	if(cl == null || !cl.__name__) {
		return null;
	}
	return cl;
};
Type.resolveEnum = function(name) {
	var e = $hxClasses[name];
	if(e == null || !e.__ename__) {
		return null;
	}
	return e;
};
Type.createInstance = function(cl,args) {
	var _g = args.length;
	switch(_g) {
	case 0:
		return new cl();
	case 1:
		return new cl(args[0]);
	case 2:
		return new cl(args[0],args[1]);
	case 3:
		return new cl(args[0],args[1],args[2]);
	case 4:
		return new cl(args[0],args[1],args[2],args[3]);
	case 5:
		return new cl(args[0],args[1],args[2],args[3],args[4]);
	case 6:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5]);
	case 7:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6]);
	case 8:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7]);
	case 9:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8]);
	case 10:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9]);
	case 11:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9],args[10]);
	case 12:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9],args[10],args[11]);
	case 13:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9],args[10],args[11],args[12]);
	case 14:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9],args[10],args[11],args[12],args[13]);
	default:
		throw new js__$Boot_HaxeError("Too many arguments");
	}
};
Type.createEmptyInstance = function(cl) {
	function empty() {}; empty.prototype = cl.prototype;
	return new empty();
};
Type.createEnum = function(e,constr,params) {
	var f = Reflect.field(e,constr);
	if(f == null) {
		throw new js__$Boot_HaxeError("No such constructor " + constr);
	}
	if(Reflect.isFunction(f)) {
		if(params == null) {
			throw new js__$Boot_HaxeError("Constructor " + constr + " need parameters");
		}
		return f.apply(e,params);
	}
	if(params != null && params.length != 0) {
		throw new js__$Boot_HaxeError("Constructor " + constr + " does not need parameters");
	}
	return f;
};
Type.createEnumIndex = function(e,index,params) {
	var c = e.__constructs__[index];
	if(c == null) {
		throw new js__$Boot_HaxeError(index + " is not a valid enum constructor index");
	}
	return Type.createEnum(e,c,params);
};
Type.getInstanceFields = function(c) {
	var a = [];
	for(var i in c.prototype) a.push(i);
	HxOverrides.remove(a,"__class__");
	HxOverrides.remove(a,"__properties__");
	return a;
};
Type.getClassFields = function(c) {
	var a = Reflect.fields(c);
	HxOverrides.remove(a,"__name__");
	HxOverrides.remove(a,"__interfaces__");
	HxOverrides.remove(a,"__properties__");
	HxOverrides.remove(a,"__super__");
	HxOverrides.remove(a,"__meta__");
	HxOverrides.remove(a,"prototype");
	return a;
};
Type.getEnumConstructs = function(e) {
	return e.__constructs__.slice();
};
Type["typeof"] = function(v) {
	var _g = typeof(v);
	switch(_g) {
	case "boolean":
		return ValueType.TBool;
	case "function":
		if(v.__name__ || v.__ename__) {
			return ValueType.TObject;
		}
		return ValueType.TFunction;
	case "number":
		if(Math.ceil(v) == v % 2147483648.0) {
			return ValueType.TInt;
		}
		return ValueType.TFloat;
	case "object":
		if(v == null) {
			return ValueType.TNull;
		}
		var e = v.__enum__;
		if(e != null) {
			return ValueType.TEnum(e);
		}
		var c = js_Boot.getClass(v);
		if(c != null) {
			return ValueType.TClass(c);
		}
		return ValueType.TObject;
	case "string":
		return ValueType.TClass(String);
	case "undefined":
		return ValueType.TNull;
	default:
		return ValueType.TUnknown;
	}
};
Type.enumEq = function(a,b) {
	if(a == b) {
		return true;
	}
	try {
		if(a[0] != b[0]) {
			return false;
		}
		var _g1 = 2;
		var _g = a.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(!Type.enumEq(a[i],b[i])) {
				return false;
			}
		}
		var e = a.__enum__;
		if(e != b.__enum__ || e == null) {
			return false;
		}
	} catch( e1 ) {
		return false;
	}
	return true;
};
Type.enumConstructor = function(e) {
	return e[0];
};
Type.enumParameters = function(e) {
	return e.slice(2);
};
Type.enumIndex = function(e) {
	return e[1];
};
Type.allEnums = function(e) {
	return e.__empty_constructs__;
};
var com_dongxiguo_continuation_Async = function() { };
$hxClasses["com.dongxiguo.continuation.Async"] = com_dongxiguo_continuation_Async;
com_dongxiguo_continuation_Async.__name__ = ["com","dongxiguo","continuation","Async"];
var com_mun_assertions_Assert = function() { };
$hxClasses["com.mun.assertions.Assert"] = com_mun_assertions_Assert;
com_mun_assertions_Assert.__name__ = ["com","mun","assertions","Assert"];
var com_mun_assertions_AssertionFailure = function(message,parts) {
	this.message = message;
	this.parts = parts;
};
$hxClasses["com.mun.assertions.AssertionFailure"] = com_mun_assertions_AssertionFailure;
com_mun_assertions_AssertionFailure.__name__ = ["com","mun","assertions","AssertionFailure"];
com_mun_assertions_AssertionFailure.prototype = {
	message: null
	,parts: null
	,toString: function() {
		var buf_b = "";
		buf_b += Std.string("Assertion failure: " + this.message + ", where");
		var _g = 0;
		var _g1 = this.parts;
		while(_g < _g1.length) {
			var part = _g1[_g];
			++_g;
			buf_b += Std.string("\n\t" + part.expr + ": " + Std.string(part.value));
		}
		return buf_b;
	}
	,__class__: com_mun_assertions_AssertionFailure
};
var com_mun_controller_command_Command = function() { };
$hxClasses["com.mun.controller.command.Command"] = com_mun_controller_command_Command;
com_mun_controller_command_Command.__name__ = ["com","mun","controller","command","Command"];
com_mun_controller_command_Command.prototype = {
	undo: null
	,redo: null
	,execute: null
	,__class__: com_mun_controller_command_Command
};
var com_mun_controller_command_AddCommand = function(object,circuitDiagram) {
	this.link = object.get_link();
	this.component = object.get_component();
	this.circuitDiagram = circuitDiagram;
	this.linkAndComponentAndEndpointAndPortArray = new com_mun_type_LinkAndComponentAndEndpointAndPortArray();
};
$hxClasses["com.mun.controller.command.AddCommand"] = com_mun_controller_command_AddCommand;
com_mun_controller_command_AddCommand.__name__ = ["com","mun","controller","command","AddCommand"];
com_mun_controller_command_AddCommand.__interfaces__ = [com_mun_controller_command_Command];
com_mun_controller_command_AddCommand.prototype = {
	link: null
	,component: null
	,circuitDiagram: null
	,linkAndComponentAndEndpointAndPortArray: null
	,undo: function() {
		if(this.link != null) {
			this.circuitDiagram.removeLink(this.link);
			this.linkAndComponentAndEndpointAndPortArray.removeLink(this.link);
		}
		if(this.component != null) {
			this.circuitDiagram.removeComponent(this.component);
			this.linkAndComponentAndEndpointAndPortArray.removeComponent(this.component);
		}
		return this.linkAndComponentAndEndpointAndPortArray;
	}
	,redo: function() {
		this.execute();
		return this.linkAndComponentAndEndpointAndPortArray;
	}
	,execute: function() {
		if(this.link != null) {
			this.circuitDiagram.addLink(this.link);
			this.linkAndComponentAndEndpointAndPortArray.addLink(this.link);
		}
		if(this.component != null) {
			this.circuitDiagram.addComponent(this.component);
			this.linkAndComponentAndEndpointAndPortArray.addComponent(this.component);
		}
	}
	,__class__: com_mun_controller_command_AddCommand
};
var com_mun_controller_command_CommandManager = function() {
	this.recordFlag = false;
	this.redoStack = [];
	this.undoStack = [];
	this.linkAndComponentAndEndpointAndPortArray = new com_mun_type_LinkAndComponentAndEndpointAndPortArray();
};
$hxClasses["com.mun.controller.command.CommandManager"] = com_mun_controller_command_CommandManager;
com_mun_controller_command_CommandManager.__name__ = ["com","mun","controller","command","CommandManager"];
com_mun_controller_command_CommandManager.prototype = {
	undoStack: null
	,redoStack: null
	,linkAndComponentAndEndpointAndPortArray: null
	,recordFlag: null
	,execute: function(command) {
		command.execute();
		if(!this.recordFlag) {
			this.undoStack.push(command);
		}
		this.recordFlag = true;
		if(this.redoStack.length != 0) {
			var _g1 = 0;
			var _g = this.redoStack.length;
			while(_g1 < _g) {
				var i = _g1++;
				this.redoStack.pop();
			}
		}
	}
	,undo: function() {
		if(this.undoStack.length == 0) {
			return this.linkAndComponentAndEndpointAndPortArray;
		}
		var command = this.undoStack.pop();
		this.linkAndComponentAndEndpointAndPortArray = command.undo();
		this.redoStack.push(command);
		return this.linkAndComponentAndEndpointAndPortArray;
	}
	,redo: function() {
		if(this.redoStack.length == 0) {
			return this.linkAndComponentAndEndpointAndPortArray;
		}
		var command = this.redoStack.pop();
		this.linkAndComponentAndEndpointAndPortArray = command.redo();
		this.undoStack.push(command);
		return this.linkAndComponentAndEndpointAndPortArray;
	}
	,popUndoStack: function() {
		this.undoStack.pop();
	}
	,popRedoStack: function() {
		this.redoStack.pop();
	}
	,recordFlagRest: function() {
		this.recordFlag = false;
	}
	,recordFlagSetTrue: function() {
		this.recordFlag = true;
	}
	,getUndoStackSize: function() {
		return this.undoStack.length;
	}
	,getRedoStackSize: function() {
		return this.redoStack.length;
	}
	,__class__: com_mun_controller_command_CommandManager
};
var com_mun_controller_command_CopyCommand = function(linkAndComponentArray,circuitDiagram) {
	this.linkAndComponentAndEndpointAndPortArray = new com_mun_type_LinkAndComponentAndEndpointAndPortArray();
	this.circuitDiagram = circuitDiagram;
	this.linkAndComponentAndEndpointAndPortArray = linkAndComponentArray;
};
$hxClasses["com.mun.controller.command.CopyCommand"] = com_mun_controller_command_CopyCommand;
com_mun_controller_command_CopyCommand.__name__ = ["com","mun","controller","command","CopyCommand"];
com_mun_controller_command_CopyCommand.__interfaces__ = [com_mun_controller_command_Command];
com_mun_controller_command_CopyCommand.prototype = {
	circuitDiagram: null
	,linkAndComponentAndEndpointAndPortArray: null
	,undo: function() {
		this.circuitDiagram.getCopyStack().clearStack();
		return this.linkAndComponentAndEndpointAndPortArray;
	}
	,redo: function() {
		this.execute();
		return this.linkAndComponentAndEndpointAndPortArray;
	}
	,execute: function() {
		if(this.linkAndComponentAndEndpointAndPortArray.getLinkIteratorLength() != 0) {
			var i = this.linkAndComponentAndEndpointAndPortArray.get_linkIterator();
			while(i.hasNext()) {
				var i1 = i.next();
				this.circuitDiagram.getCopyStack().pushLink(i1);
			}
		}
		if(this.linkAndComponentAndEndpointAndPortArray.getComponentIteratorLength() != 0) {
			var i2 = this.linkAndComponentAndEndpointAndPortArray.get_componentIterator();
			while(i2.hasNext()) {
				var i3 = i2.next();
				this.circuitDiagram.getCopyStack().pushComponent(i3);
			}
		}
	}
	,__class__: com_mun_controller_command_CopyCommand
};
var com_mun_controller_command_DeleteCommand = function(linkAndComponentArray,circuitDiagram) {
	this.linkAndComponentAndEndpointAndPortArray = new com_mun_type_LinkAndComponentAndEndpointAndPortArray();
	this.linkAndComponentAndEndpointAndPortArray = linkAndComponentArray;
	this.circuitDiagram = circuitDiagram;
};
$hxClasses["com.mun.controller.command.DeleteCommand"] = com_mun_controller_command_DeleteCommand;
com_mun_controller_command_DeleteCommand.__name__ = ["com","mun","controller","command","DeleteCommand"];
com_mun_controller_command_DeleteCommand.__interfaces__ = [com_mun_controller_command_Command];
com_mun_controller_command_DeleteCommand.prototype = {
	circuitDiagram: null
	,linkAndComponentAndEndpointAndPortArray: null
	,undo: function() {
		if(this.linkAndComponentAndEndpointAndPortArray.getLinkIteratorLength() != 0) {
			var i = this.linkAndComponentAndEndpointAndPortArray.get_linkIterator();
			while(i.hasNext()) {
				var i1 = i.next();
				this.circuitDiagram.addLink(i1);
			}
		}
		if(this.linkAndComponentAndEndpointAndPortArray.getComponentIteratorLength() != 0) {
			var i2 = this.linkAndComponentAndEndpointAndPortArray.get_componentIterator();
			while(i2.hasNext()) {
				var i3 = i2.next();
				this.circuitDiagram.addComponent(i3);
			}
		}
		return this.linkAndComponentAndEndpointAndPortArray;
	}
	,redo: function() {
		this.execute();
		return this.linkAndComponentAndEndpointAndPortArray;
	}
	,execute: function() {
		var i = this.linkAndComponentAndEndpointAndPortArray.get_linkIterator();
		while(i.hasNext()) {
			var i1 = i.next();
			this.circuitDiagram.deleteLink(i1);
		}
		var i2 = this.linkAndComponentAndEndpointAndPortArray.get_componentIterator();
		while(i2.hasNext()) {
			var i3 = i2.next();
			this.circuitDiagram.deleteComponent(i3);
		}
	}
	,__class__: com_mun_controller_command_DeleteCommand
};
var com_mun_controller_command_MoveCommand = function(linkAndComponentAndEndpointArray,xDisplacement,yDisplacement,circuitDiagram) {
	this.linkAndComponentArray = new com_mun_type_LinkAndComponentAndEndpointAndPortArray();
	this.linkAndComponentAndEndpointArray = new com_mun_type_LinkAndComponentAndEndpointAndPortArray();
	this.oldEndpointYPositionArray = [];
	this.oldEndpointXPositionArray = [];
	this.oldLinkRightYpositionArray = [];
	this.oldLinkRightXpositionArray = [];
	this.oldLinkLeftYpositionArray = [];
	this.oldLinkLeftXpositionArray = [];
	this.oldComponentYpositionArray = [];
	this.oldComponentXpositionArray = [];
	this.recordEndpointYpositionBeforeUndoArray = [];
	this.recordEndpointXpositionBeforeUndoArray = [];
	this.recordRightEndpointYpositionBeforeUndoArray = [];
	this.recordRightEndpointXpositionBeforeUndoArray = [];
	this.recordLeftEndpointYpositionBeforeUndoArray = [];
	this.recordLeftEndpointXpositionBeforeUndoArray = [];
	this.recordComponentYpositionBeforeUndoArray = [];
	this.recordComponentXpositionBeforeUndoArray = [];
	var i = linkAndComponentAndEndpointArray.get_componentIterator();
	while(i.hasNext()) {
		var i1 = i.next();
		this.linkAndComponentAndEndpointArray.addComponent(i1);
		this.linkAndComponentArray.addComponent(i1);
	}
	var i2 = linkAndComponentAndEndpointArray.get_linkIterator();
	while(i2.hasNext()) {
		var i3 = i2.next();
		this.linkAndComponentAndEndpointArray.addLink(i3);
		this.linkAndComponentArray.addLink(i3);
	}
	var i4 = linkAndComponentAndEndpointArray.get_endpointIterator();
	while(i4.hasNext()) {
		var i5 = i4.next();
		this.linkAndComponentAndEndpointArray.addEndpoint(i5);
	}
	var i6 = 0;
	if(linkAndComponentAndEndpointArray.getComponentIteratorLength() != 0) {
		var j = linkAndComponentAndEndpointArray.get_componentIterator();
		while(j.hasNext()) {
			var j1 = j.next();
			this.oldComponentXpositionArray[i6] = j1.get_xPosition();
			this.oldComponentYpositionArray[i6] = j1.get_yPosition();
			++i6;
		}
	}
	i6 = 0;
	if(linkAndComponentAndEndpointArray.getLinkIteratorLength() != 0) {
		var j2 = linkAndComponentAndEndpointArray.get_linkIterator();
		while(j2.hasNext()) {
			var j3 = j2.next();
			this.oldLinkLeftXpositionArray[i6] = j3.get_leftEndpoint().get_xPosition();
			this.oldLinkLeftYpositionArray[i6] = j3.get_leftEndpoint().get_yPosition();
			this.oldLinkRightXpositionArray[i6] = j3.get_rightEndpoint().get_xPosition();
			this.oldLinkRightYpositionArray[i6] = j3.get_rightEndpoint().get_yPosition();
			++i6;
		}
	}
	i6 = 0;
	if(linkAndComponentAndEndpointArray.getEndppointIteratorLength() != 0) {
		var j4 = linkAndComponentAndEndpointArray.get_endpointIterator();
		while(j4.hasNext()) {
			var j5 = j4.next();
			this.oldEndpointXPositionArray[i6] = j5.get_xPosition();
			this.oldEndpointYPositionArray[i6] = j5.get_yPosition();
			++i6;
		}
	}
	this.xDisplacement = xDisplacement;
	this.yDisplacement = yDisplacement;
	this.circuitDiagram = circuitDiagram;
};
$hxClasses["com.mun.controller.command.MoveCommand"] = com_mun_controller_command_MoveCommand;
com_mun_controller_command_MoveCommand.__name__ = ["com","mun","controller","command","MoveCommand"];
com_mun_controller_command_MoveCommand.__interfaces__ = [com_mun_controller_command_Command];
com_mun_controller_command_MoveCommand.prototype = {
	xDisplacement: null
	,yDisplacement: null
	,circuitDiagram: null
	,recordComponentXpositionBeforeUndoArray: null
	,recordComponentYpositionBeforeUndoArray: null
	,recordLeftEndpointXpositionBeforeUndoArray: null
	,recordLeftEndpointYpositionBeforeUndoArray: null
	,recordRightEndpointXpositionBeforeUndoArray: null
	,recordRightEndpointYpositionBeforeUndoArray: null
	,recordEndpointXpositionBeforeUndoArray: null
	,recordEndpointYpositionBeforeUndoArray: null
	,oldComponentXpositionArray: null
	,oldComponentYpositionArray: null
	,oldLinkLeftXpositionArray: null
	,oldLinkLeftYpositionArray: null
	,oldLinkRightXpositionArray: null
	,oldLinkRightYpositionArray: null
	,oldEndpointXPositionArray: null
	,oldEndpointYPositionArray: null
	,linkAndComponentAndEndpointArray: null
	,linkAndComponentArray: null
	,undo: function() {
		var i = 0;
		if(this.linkAndComponentAndEndpointArray.getComponentIteratorLength() != 0) {
			var j = this.linkAndComponentAndEndpointArray.get_componentIterator();
			while(j.hasNext()) {
				var j1 = j.next();
				this.recordComponentXpositionBeforeUndoArray[i] = j1.get_xPosition();
				this.recordComponentYpositionBeforeUndoArray[i] = j1.get_yPosition();
				j1.set_xPosition(this.oldComponentXpositionArray[i]);
				j1.set_yPosition(this.oldComponentYpositionArray[i]);
				j1.updateMoveComponentPortPosition(this.oldComponentXpositionArray[i],this.oldComponentYpositionArray[i]);
				++i;
			}
			this.linkPositionUpdate();
		}
		i = 0;
		if(this.linkAndComponentAndEndpointArray.getLinkIteratorLength() != 0) {
			var j2 = this.linkAndComponentAndEndpointArray.get_linkIterator();
			while(j2.hasNext()) {
				var j3 = j2.next();
				this.recordLeftEndpointXpositionBeforeUndoArray[i] = j3.get_leftEndpoint().get_xPosition();
				this.recordLeftEndpointYpositionBeforeUndoArray[i] = j3.get_leftEndpoint().get_yPosition();
				this.recordRightEndpointXpositionBeforeUndoArray[i] = j3.get_rightEndpoint().get_xPosition();
				this.recordRightEndpointYpositionBeforeUndoArray[i] = j3.get_rightEndpoint().get_yPosition();
				j3.get_leftEndpoint().set_xPosition(this.oldLinkLeftXpositionArray[i]);
				j3.get_leftEndpoint().set_yPosition(this.oldLinkLeftYpositionArray[i]);
				j3.get_rightEndpoint().set_xPosition(this.oldLinkRightXpositionArray[i]);
				j3.get_rightEndpoint().set_yPosition(this.oldLinkRightYpositionArray[i]);
				this.linkMeetPortUpdate(j3);
				++i;
			}
		}
		i = 0;
		if(this.linkAndComponentAndEndpointArray.getEndppointIteratorLength() != 0) {
			var j4 = this.linkAndComponentAndEndpointArray.get_endpointIterator();
			while(j4.hasNext()) {
				var j5 = j4.next();
				this.recordEndpointXpositionBeforeUndoArray[i] = j5.get_xPosition();
				this.recordEndpointYpositionBeforeUndoArray[i] = j5.get_yPosition();
				j5.set_xPosition(this.oldEndpointXPositionArray[i]);
				j5.set_yPosition(this.oldEndpointYPositionArray[i]);
				this.endpointMeetPort(j5);
				++i;
			}
		}
		return this.linkAndComponentArray;
	}
	,redo: function() {
		var i = 0;
		if(this.linkAndComponentAndEndpointArray.getComponentIteratorLength() != 0) {
			var j = this.linkAndComponentAndEndpointArray.get_componentIterator();
			while(j.hasNext()) {
				var j1 = j.next();
				j1.set_xPosition(this.recordComponentXpositionBeforeUndoArray[i]);
				j1.set_yPosition(this.recordComponentYpositionBeforeUndoArray[i]);
				j1.updateMoveComponentPortPosition(this.recordComponentXpositionBeforeUndoArray[i],this.recordComponentYpositionBeforeUndoArray[i]);
				++i;
			}
			this.linkPositionUpdate();
		}
		i = 0;
		if(this.linkAndComponentAndEndpointArray.getLinkIteratorLength() != 0) {
			var j2 = this.linkAndComponentAndEndpointArray.get_linkIterator();
			while(j2.hasNext()) {
				var j3 = j2.next();
				j3.get_leftEndpoint().set_xPosition(this.recordLeftEndpointXpositionBeforeUndoArray[i]);
				j3.get_leftEndpoint().set_yPosition(this.recordLeftEndpointYpositionBeforeUndoArray[i]);
				j3.get_rightEndpoint().set_xPosition(this.recordRightEndpointXpositionBeforeUndoArray[i]);
				j3.get_rightEndpoint().set_yPosition(this.recordRightEndpointYpositionBeforeUndoArray[i]);
				this.linkPositionUpdate();
				++i;
			}
		}
		i = 0;
		if(this.linkAndComponentAndEndpointArray.getEndppointIteratorLength() != 0) {
			var j4 = this.linkAndComponentAndEndpointArray.get_endpointIterator();
			while(j4.hasNext()) {
				var j5 = j4.next();
				j5.set_xPosition(this.recordEndpointXpositionBeforeUndoArray[i]);
				j5.set_yPosition(this.recordEndpointYpositionBeforeUndoArray[i]);
				this.endpointMeetPort(j5);
				++i;
			}
		}
		return this.linkAndComponentArray;
	}
	,execute: function() {
		if(this.linkAndComponentAndEndpointArray.getComponentIteratorLength() != 0) {
			var i = this.linkAndComponentAndEndpointArray.get_componentIterator();
			while(i.hasNext()) {
				var i1 = i.next();
				i1.set_xPosition(i1.get_xPosition() + this.xDisplacement);
				i1.set_yPosition(i1.get_yPosition() + this.yDisplacement);
				i1.updateMoveComponentPortPosition(i1.get_xPosition(),i1.get_yPosition());
			}
			this.componentMeetEndpoint();
			this.linkPositionUpdate();
		}
		if(this.linkAndComponentAndEndpointArray.getLinkIteratorLength() != 0) {
			var i2 = this.linkAndComponentAndEndpointArray.get_linkIterator();
			while(i2.hasNext()) {
				var i3 = i2.next();
				if(i3.get_leftEndpoint().get_port() == null) {
					i3.get_leftEndpoint().set_xPosition(i3.get_leftEndpoint().get_xPosition() + this.xDisplacement);
					i3.get_leftEndpoint().set_yPosition(i3.get_leftEndpoint().get_yPosition() + this.yDisplacement);
				}
				if(i3.get_rightEndpoint().get_port() == null) {
					i3.get_rightEndpoint().set_xPosition(i3.get_rightEndpoint().get_xPosition() + this.xDisplacement);
					i3.get_rightEndpoint().set_yPosition(i3.get_rightEndpoint().get_yPosition() + this.yDisplacement);
				}
				this.linkMeetPortUpdate(i3);
			}
		}
		if(this.linkAndComponentAndEndpointArray.getEndppointIteratorLength() != 0) {
			var i4 = this.linkAndComponentAndEndpointArray.get_endpointIterator();
			while(i4.hasNext()) {
				var i5 = i4.next();
				i5.set_xPosition(i5.get_xPosition() + this.xDisplacement);
				i5.set_yPosition(i5.get_yPosition() + this.yDisplacement);
				this.endpointMeetPort(i5);
			}
		}
	}
	,componentMeetEndpoint: function() {
		var i = this.circuitDiagram.get_linkIterator();
		while(i.hasNext()) {
			var i1 = i.next();
			this.linkMeetPortUpdate(i1);
		}
	}
	,linkMeetPortUpdate: function(link) {
		var leftEndpointPort = link.get_leftEndpoint().get_port();
		if(leftEndpointPort == null) {
			var leftEndpointCoordinate = new com_mun_type_Coordinate(link.get_leftEndpoint().get_xPosition(),link.get_leftEndpoint().get_yPosition());
			var port_temp = this.isOnPort(leftEndpointCoordinate).get_port();
			if(port_temp != null && leftEndpointPort != port_temp) {
				link.get_leftEndpoint().set_port(port_temp);
			} else if(port_temp == null) {
				link.get_leftEndpoint().set_port(null);
			}
		}
		var rightEndpointPort = link.get_rightEndpoint().get_port();
		if(rightEndpointPort == null) {
			var rightEndpointCoordinate = new com_mun_type_Coordinate(link.get_rightEndpoint().get_xPosition(),link.get_rightEndpoint().get_yPosition());
			var port_temp1 = this.isOnPort(rightEndpointCoordinate).get_port();
			if(port_temp1 != null && rightEndpointPort != port_temp1) {
				link.get_rightEndpoint().set_port(port_temp1);
			} else if(port_temp1 == null) {
				link.get_rightEndpoint().set_port(null);
			}
		}
	}
	,endpointMeetPort: function(endpoint) {
		var coordinate = new com_mun_type_Coordinate(endpoint.get_xPosition(),endpoint.get_yPosition());
		var newPort = this.isOnPort(coordinate).get_port();
		if(newPort != null) {
			var i = this.circuitDiagram.get_linkIterator();
			while(i.hasNext()) {
				var i1 = i.next();
				var port = null;
				if(i1.get_leftEndpoint() == endpoint) {
					port = i1.get_rightEndpoint().get_port();
					if(newPort != port) {
						i1.get_leftEndpoint().set_port(newPort);
					} else {
						i1.get_leftEndpoint().set_port(null);
					}
					break;
				}
				if(i1.get_rightEndpoint() == endpoint) {
					port = i1.get_leftEndpoint().get_port();
					if(newPort != port) {
						i1.get_rightEndpoint().set_port(newPort);
					} else {
						i1.get_rightEndpoint().set_port(null);
					}
					break;
				}
			}
		} else {
			endpoint.set_port(null);
		}
	}
	,linkPositionUpdate: function() {
		var i = this.circuitDiagram.get_linkIterator();
		while(i.hasNext()) {
			var i1 = i.next();
			i1.get_leftEndpoint().updatePosition();
			i1.get_rightEndpoint().updatePosition();
		}
	}
	,isOnPort: function(cooridnate) {
		var object = new com_mun_type_Object();
		var i = this.circuitDiagram.get_componentIterator();
		while(i.hasNext()) {
			var i1 = i.next();
			var j = i1.get_inportIterator();
			while(j.hasNext()) {
				var j1 = j.next();
				if(this.isInCircle(cooridnate,j1.get_xPosition(),j1.get_yPosition())) {
					object.set_port(j1);
					var k = this.circuitDiagram.get_linkIterator();
					while(k.hasNext()) {
						var k1 = k.next();
						object.set_endPoint(this.isLinkOnPort(k1,j1));
						return object;
					}
				}
			}
			var j2 = i1.get_outportIterator();
			while(j2.hasNext()) {
				var j3 = j2.next();
				if(this.isInCircle(cooridnate,j3.get_xPosition(),j3.get_yPosition())) {
					object.set_port(j3);
					var k2 = this.circuitDiagram.get_linkIterator();
					while(k2.hasNext()) {
						var k3 = k2.next();
						object.set_endPoint(this.isLinkOnPort(k3,j3));
						return object;
					}
				}
			}
		}
		return object;
	}
	,isLinkOnPort: function(link,port) {
		var endpoint = null;
		if(this.isEndpointOnPort(link.get_leftEndpoint(),port)) {
			endpoint = link.get_leftEndpoint();
		}
		if(this.isEndpointOnPort(link.get_rightEndpoint(),port)) {
			endpoint = link.get_rightEndpoint();
		}
		return endpoint;
	}
	,isInCircle: function(coordinate,orignalXPosition,orignalYPosition) {
		if(Math.abs(coordinate.get_xPosition() - orignalXPosition) <= com_mun_global_Constant.portRadius && Math.abs(coordinate.get_yPosition() - orignalYPosition) <= com_mun_global_Constant.portRadius) {
			return true;
		} else {
			return false;
		}
	}
	,isEndpointOnPort: function(endpoint,port) {
		if(endpoint.get_xPosition() == port.get_xPosition() && endpoint.get_yPosition() == port.get_yPosition()) {
			return true;
		} else {
			return false;
		}
	}
	,__class__: com_mun_controller_command_MoveCommand
};
var com_mun_controller_command_OrientationCommand = function(componentArray,newOrientation,circuitDiagram) {
	this.oldOrientationArray = [];
	this.componentArray = [];
	this.linkAndComponentArray = new com_mun_type_LinkAndComponentAndEndpointAndPortArray();
	this.circuitDiagram = circuitDiagram;
	var _g = 0;
	while(_g < componentArray.length) {
		var i = componentArray[_g];
		++_g;
		this.componentArray.push(i);
	}
	this.newOrientation = newOrientation;
	this.linkAndComponentArray.clean();
	var _g1 = 0;
	var _g2 = componentArray.length;
	while(_g1 < _g2) {
		var i1 = _g1++;
		this.linkAndComponentArray.addComponent(componentArray[i1]);
		this.oldOrientationArray[i1] = componentArray[i1].get_orientation();
	}
};
$hxClasses["com.mun.controller.command.OrientationCommand"] = com_mun_controller_command_OrientationCommand;
com_mun_controller_command_OrientationCommand.__name__ = ["com","mun","controller","command","OrientationCommand"];
com_mun_controller_command_OrientationCommand.__interfaces__ = [com_mun_controller_command_Command];
com_mun_controller_command_OrientationCommand.prototype = {
	componentArray: null
	,newOrientation: null
	,oldOrientationArray: null
	,linkAndComponentArray: null
	,circuitDiagram: null
	,undo: function() {
		var _g1 = 0;
		var _g = this.componentArray.length;
		while(_g1 < _g) {
			var i = _g1++;
			this.componentArray[i].set_orientation(this.oldOrientationArray[i]);
			this.componentArray[i].updateMoveComponentPortPosition(this.componentArray[i].get_xPosition(),this.componentArray[i].get_yPosition());
		}
		this.linkPositionUpdate();
		return this.linkAndComponentArray;
	}
	,redo: function() {
		this.execute();
		return this.linkAndComponentArray;
	}
	,execute: function() {
		var _g = 0;
		var _g1 = this.componentArray;
		while(_g < _g1.length) {
			var i = _g1[_g];
			++_g;
			i.set_orientation(this.newOrientation);
			i.updateMoveComponentPortPosition(i.get_xPosition(),i.get_yPosition());
		}
		this.linkPositionUpdate();
	}
	,linkPositionUpdate: function() {
		var i = this.circuitDiagram.get_linkIterator();
		while(i.hasNext()) {
			var i1 = i.next();
			i1.get_leftEndpoint().updatePosition();
			i1.get_rightEndpoint().updatePosition();
		}
	}
	,__class__: com_mun_controller_command_OrientationCommand
};
var com_mun_controller_command_PasteCommand = function(xPosition,yPosition,circuitDiagram,copyToCircuitDiagram) {
	this.linkAndComponentArray = new com_mun_type_LinkAndComponentAndEndpointAndPortArray();
	this.copyToCircuitDiagram = copyToCircuitDiagram;
	this.copyStack = new com_mun_controller_command_Stack();
	var _g = 0;
	var _g1 = circuitDiagram.getCopyStack().getLinkArray();
	while(_g < _g1.length) {
		var i = _g1[_g];
		++_g;
		this.copyStack.pushLink(i);
	}
	var _g2 = 0;
	var _g11 = circuitDiagram.getCopyStack().getComponentArray();
	while(_g2 < _g11.length) {
		var i1 = _g11[_g2];
		++_g2;
		this.copyStack.pushComponent(i1);
	}
	this.xPosition = xPosition;
	this.yPosition = yPosition;
	this.circuitDiagram = circuitDiagram;
};
$hxClasses["com.mun.controller.command.PasteCommand"] = com_mun_controller_command_PasteCommand;
com_mun_controller_command_PasteCommand.__name__ = ["com","mun","controller","command","PasteCommand"];
com_mun_controller_command_PasteCommand.__interfaces__ = [com_mun_controller_command_Command];
com_mun_controller_command_PasteCommand.prototype = {
	copyStack: null
	,xPosition: null
	,yPosition: null
	,circuitDiagram: null
	,copyToCircuitDiagram: null
	,linkAndComponentArray: null
	,undo: function() {
		var i = this.linkAndComponentArray.get_linkIterator();
		while(i.hasNext()) {
			var i1 = i.next();
			this.copyToCircuitDiagram.removeLink(i1);
		}
		var i2 = this.linkAndComponentArray.get_componentIterator();
		while(i2.hasNext()) {
			var i3 = i2.next();
			this.copyToCircuitDiagram.removeComponent(i3);
		}
		var _g = 0;
		var _g1 = this.copyStack.getLinkArray();
		while(_g < _g1.length) {
			var i4 = _g1[_g];
			++_g;
			this.circuitDiagram.getCopyStack().pushLink(i4);
		}
		var _g2 = 0;
		var _g11 = this.copyStack.getComponentArray();
		while(_g2 < _g11.length) {
			var i5 = _g11[_g2];
			++_g2;
			this.circuitDiagram.getCopyStack().pushComponent(i5);
		}
		return this.linkAndComponentArray;
	}
	,redo: function() {
		var i = this.linkAndComponentArray.get_linkIterator();
		while(i.hasNext()) {
			var i1 = i.next();
			this.copyToCircuitDiagram.addLink(i1);
		}
		var i2 = this.linkAndComponentArray.get_componentIterator();
		while(i2.hasNext()) {
			var i3 = i2.next();
			this.copyToCircuitDiagram.addComponent(i3);
		}
		this.circuitDiagram.getCopyStack().clearStack();
		return this.linkAndComponentArray;
	}
	,execute: function() {
		var linkArray = this.copyStack.getLinkArray();
		var componentArray = this.copyStack.getComponentArray();
		var centerCoordinate = this.findTheCenterForCopyArrays(linkArray,componentArray);
		this.linkAndComponentArray.clean();
		var _g = 0;
		while(_g < linkArray.length) {
			var i = linkArray[_g];
			++_g;
			var offsetCoordinate = this.calculateEndpointOffsetCoordinate(i.get_rightEndpoint(),centerCoordinate.get_xPosition(),centerCoordinate.get_yPosition());
			i.get_rightEndpoint().set_xPosition(this.xPosition - offsetCoordinate.get_xPosition());
			i.get_rightEndpoint().set_yPosition(this.yPosition - offsetCoordinate.get_yPosition());
			offsetCoordinate = this.calculateEndpointOffsetCoordinate(i.get_leftEndpoint(),centerCoordinate.get_xPosition(),centerCoordinate.get_yPosition());
			i.get_leftEndpoint().set_xPosition(this.xPosition - offsetCoordinate.get_xPosition());
			i.get_leftEndpoint().set_yPosition(this.yPosition - offsetCoordinate.get_yPosition());
			this.linkAndComponentArray.addLink(i);
			this.copyToCircuitDiagram.addLink(i);
		}
		var _g1 = 0;
		while(_g1 < componentArray.length) {
			var i1 = componentArray[_g1];
			++_g1;
			var offsetCoordinate1 = this.calculateComponentOffsetCoordinate(i1,centerCoordinate.get_xPosition(),centerCoordinate.get_yPosition());
			i1.set_xPosition(this.xPosition + offsetCoordinate1.get_xPosition());
			i1.set_yPosition(this.yPosition + offsetCoordinate1.get_yPosition());
			this.linkAndComponentArray.addComponent(i1);
			this.copyToCircuitDiagram.addComponent(i1);
		}
	}
	,calculateComponentOffsetCoordinate: function(component,xPosition,yPosition) {
		return new com_mun_type_Coordinate(component.get_xPosition() - xPosition,component.get_yPosition() - yPosition);
	}
	,findTheCenterForCopyArrays: function(linkArray,componentArray) {
		var max_x = 0;
		var max_y = 0;
		var min_x = 99999;
		var min_y = 99999;
		var _g = 0;
		while(_g < linkArray.length) {
			var i = linkArray[_g];
			++_g;
			if(i.get_rightEndpoint().get_xPosition() > max_x) {
				max_x = i.get_rightEndpoint().get_xPosition();
			}
			if(i.get_rightEndpoint().get_xPosition() < min_x) {
				min_x = i.get_rightEndpoint().get_xPosition();
			}
			if(i.get_rightEndpoint().get_yPosition() > max_y) {
				max_y = i.get_rightEndpoint().get_yPosition();
			}
			if(i.get_rightEndpoint().get_yPosition() < min_y) {
				min_y = i.get_rightEndpoint().get_yPosition();
			}
			if(i.get_leftEndpoint().get_xPosition() > max_x) {
				max_x = i.get_leftEndpoint().get_xPosition();
			}
			if(i.get_leftEndpoint().get_xPosition() < min_x) {
				min_x = i.get_leftEndpoint().get_xPosition();
			}
			if(i.get_leftEndpoint().get_yPosition() > max_y) {
				max_y = i.get_leftEndpoint().get_yPosition();
			}
			if(i.get_leftEndpoint().get_yPosition() < min_y) {
				min_y = i.get_leftEndpoint().get_yPosition();
			}
		}
		var _g1 = 0;
		while(_g1 < componentArray.length) {
			var i1 = componentArray[_g1];
			++_g1;
			var maxPosition_x = i1.get_xPosition() + i1.get_width() / 2;
			var minPosition_x = i1.get_xPosition() - i1.get_width() / 2;
			var maxPosition_y = i1.get_yPosition() + i1.get_height() / 2;
			var minPosition_y = i1.get_yPosition() - i1.get_height() / 2;
			if(maxPosition_x > max_x) {
				max_x = maxPosition_x;
			}
			if(minPosition_x < min_x) {
				min_x = minPosition_x;
			}
			if(maxPosition_y > max_y) {
				max_y = maxPosition_y;
			}
			if(minPosition_y < min_y) {
				min_y = minPosition_y;
			}
		}
		return new com_mun_type_Coordinate((max_x - min_x) / 2 + min_x,(max_y - min_y) / 2 + min_y);
	}
	,calculateEndpointOffsetCoordinate: function(endpoint,xPosition,yPosition) {
		var xOffset = xPosition - endpoint.get_xPosition();
		var yOffset = yPosition - endpoint.get_yPosition();
		return new com_mun_type_Coordinate(xOffset,yOffset);
	}
	,__class__: com_mun_controller_command_PasteCommand
};
var com_mun_controller_command_Stack = function() {
	this.linkArray = [];
	this.componentArray = [];
};
$hxClasses["com.mun.controller.command.Stack"] = com_mun_controller_command_Stack;
com_mun_controller_command_Stack.__name__ = ["com","mun","controller","command","Stack"];
com_mun_controller_command_Stack.prototype = {
	linkArray: null
	,componentArray: null
	,getLinkArray: function() {
		return this.linkArray;
	}
	,getComponentArray: function() {
		return this.componentArray;
	}
	,pushLink: function(link) {
		this.linkArray.push(link);
	}
	,pushComponent: function(component) {
		this.componentArray.push(component);
	}
	,clearStack: function() {
		this.linkArray = [];
		this.componentArray = [];
	}
	,isStackEmpty: function() {
		if(this.linkArray.length == 0 && this.componentArray.length == 0) {
			return true;
		} else {
			return false;
		}
	}
	,__class__: com_mun_controller_command_Stack
};
var com_mun_controller_componentUpdate_UpdateCanvas = function(circuitDiagram,canvas,context) {
	this.circuitDiagram = circuitDiagram;
	this.transform = com_mun_view_drawingImpl_Transform.identity();
	this.canvas = canvas;
	this.context = context;
	this.bindEventListener();
};
$hxClasses["com.mun.controller.componentUpdate.UpdateCanvas"] = com_mun_controller_componentUpdate_UpdateCanvas;
com_mun_controller_componentUpdate_UpdateCanvas.__name__ = ["com","mun","controller","componentUpdate","UpdateCanvas"];
com_mun_controller_componentUpdate_UpdateCanvas.prototype = {
	circuitDiagram: null
	,transform: null
	,canvas: null
	,context: null
	,getTransform: function() {
		return this.transform;
	}
	,update: function(linkAndComponentArray) {
		this.canvas.width = this.canvas.width;
		this.circuitDiagram.draw(new com_mun_view_drawingImpl_DrawingAdapter(this.transform,this.context),linkAndComponentArray);
	}
	,bindEventListener: function() {
		window.document.getElementById("left").onmousedown = $bind(this,this.left);
		window.document.getElementById("right").onmousedown = $bind(this,this.right);
		window.document.getElementById("up").onmousedown = $bind(this,this.up);
		window.document.getElementById("down").onmousedown = $bind(this,this.down);
		window.document.getElementById("zoom_in").onmousedown = $bind(this,this.zoomIn);
		window.document.getElementById("zoom_out").onmousedown = $bind(this,this.zoomOut);
		window.document.getElementById("o").onmousedown = $bind(this,this.o);
		window.document.getElementById("f").onmousedown = $bind(this,this.f);
	}
	,unbindEventListener: function() {
		window.document.getElementById("left").removeEventListener("mousedown",$bind(this,this.left));
		window.document.getElementById("right").removeEventListener("mousedown",$bind(this,this.right));
		window.document.getElementById("up").removeEventListener("mousedown",$bind(this,this.up));
		window.document.getElementById("down").removeEventListener("mousedown",$bind(this,this.down));
		window.document.getElementById("zoom_in").removeEventListener("mousedown",$bind(this,this.zoomIn));
		window.document.getElementById("zoom_out").removeEventListener("mousedown",$bind(this,this.zoomOut));
		window.document.getElementById("o").removeEventListener("mousedown",$bind(this,this.o));
		window.document.getElementById("f").removeEventListener("mousedown",$bind(this,this.f));
	}
	,left: function() {
		this.transform = this.transform.compose(com_mun_view_drawingImpl_Transform.identity().translate(-com_mun_global_Constant.TRANSFORM_X_DELTA,0));
		this.update();
	}
	,right: function() {
		this.transform = this.transform.compose(com_mun_view_drawingImpl_Transform.identity().translate(com_mun_global_Constant.TRANSFORM_X_DELTA,0));
		this.update();
	}
	,up: function() {
		this.transform = this.transform.compose(com_mun_view_drawingImpl_Transform.identity().translate(0,-com_mun_global_Constant.TRANSFORM_Y_DELTA));
		this.update();
	}
	,down: function() {
		this.transform = this.transform.compose(com_mun_view_drawingImpl_Transform.identity().translate(0,com_mun_global_Constant.TRANSFORM_Y_DELTA));
		this.update();
	}
	,zoomIn: function() {
		this.transform = this.transform.compose(com_mun_view_drawingImpl_Transform.identity().scale(com_mun_global_Constant.TRANSFORM_ZOOM_IN_RATE,com_mun_global_Constant.TRANSFORM_ZOOM_IN_RATE));
		this.update();
	}
	,zoomOut: function() {
		this.transform = this.transform.compose(com_mun_view_drawingImpl_Transform.identity().scale(com_mun_global_Constant.TRANSFORM_ZOOM_OUT_RATE,com_mun_global_Constant.TRANSFORM_ZOOM_OUT_RATE));
		this.update();
	}
	,o: function() {
		this.transform = com_mun_view_drawingImpl_Transform.identity();
		this.update();
	}
	,f: function() {
		var canvasElement = window.document.getElementById("canvas-" + this.circuitDiagram.get_name());
		var styleWidth = canvasElement.style.width;
		styleWidth = styleWidth.substring(0,styleWidth.indexOf("p"));
		var styleHeight = canvasElement.style.height;
		styleHeight = styleHeight.substring(0,styleHeight.indexOf("p"));
		var width = styleWidth;
		var height = styleHeight;
		var centerViewCoordinateOfCanvasElement = new com_mun_type_Coordinate(width / 2,height / 2);
		var circuitDiagramCenterWorldCoordinate = this.circuitDiagram.getComponentAndLinkCenterCoordinate();
		var circuitDiagramWidth = this.circuitDiagram.get_diagramWidth();
		var circuitDiagramHeight = this.circuitDiagram.get_diagramHeight();
		var xRation = 1;
		var yRation = 1;
		var screenSize = width > height ? width : height;
		var circuitDiagramSize = circuitDiagramWidth > circuitDiagramHeight ? circuitDiagramWidth : circuitDiagramHeight;
		var scareRation = circuitDiagramSize / screenSize < 1 ? circuitDiagramSize / screenSize : screenSize / circuitDiagramSize;
		this.transform = com_mun_view_drawingImpl_Transform.identity().scale(scareRation,scareRation);
		var circuitDiagramCenterViewCoordinate = this.transform.pointConvert(circuitDiagramCenterWorldCoordinate);
		var xOffset = centerViewCoordinateOfCanvasElement.get_xPosition() - circuitDiagramCenterViewCoordinate.get_xPosition();
		var yOffset = centerViewCoordinateOfCanvasElement.get_yPosition() - circuitDiagramCenterViewCoordinate.get_yPosition();
		this.transform = this.transform.translate(xOffset,yOffset);
		this.update();
	}
	,__class__: com_mun_controller_componentUpdate_UpdateCanvas
};
var com_mun_controller_componentUpdate_UpdateCircuitDiagram = function(circuitDiagram,folder) {
	this.linkAndComponentArray = new com_mun_type_LinkAndComponentAndEndpointAndPortArray();
	this.folder = folder;
	this.circuitDiagram = circuitDiagram;
	this.commandManager = new com_mun_controller_command_CommandManager();
};
$hxClasses["com.mun.controller.componentUpdate.UpdateCircuitDiagram"] = com_mun_controller_componentUpdate_UpdateCircuitDiagram;
com_mun_controller_componentUpdate_UpdateCircuitDiagram.__name__ = ["com","mun","controller","componentUpdate","UpdateCircuitDiagram"];
com_mun_controller_componentUpdate_UpdateCircuitDiagram.prototype = {
	circuitDiagram: null
	,updateCanvas: null
	,commandManager: null
	,updateToolBar: null
	,folder: null
	,linkAndComponentArray: null
	,get_commandManager: function() {
		return this.commandManager;
	}
	,setUpdateCanvas: function(updateCanvas) {
		this.updateCanvas = updateCanvas;
	}
	,setUpdateToolBar: function(updateToolBar) {
		this.updateToolBar = updateToolBar;
	}
	,createComponentByCommand: function(component,createToCircuitDiagram) {
		var object = new com_mun_type_Object();
		object.set_component(component);
		var command = new com_mun_controller_command_AddCommand(object,createToCircuitDiagram);
		this.commandManager.execute(command);
		this.linkAndComponentArrayReset();
		createToCircuitDiagram.computeDiagramSize();
	}
	,createComponent: function(name,xPosition,yPosition,width,height,orientation,inportNum) {
		var componentkind_ = Type.createInstance(Type.resolveClass("com.mun.model.gates." + name),[]);
		var component_ = new com_mun_model_component_Component(xPosition,yPosition,height,width,orientation,componentkind_,inportNum);
		component_.setNameOfTheComponentKind(name);
		if(component_.getNameOfTheComponentKind() == "Input" || component_.getNameOfTheComponentKind() == "Output") {
			var idString = new Date().getFullYear() + "";
			idString += new Date().getMonth() + "";
			idString += new Date().getDay() + "";
			idString += new Date().getHours() + "";
			idString += new Date().getMinutes() + "";
			idString += new Date().getSeconds() + "";
			idString += Std.random(1000) + "";
			var id = idString;
			componentkind_.set_sequence(id);
		}
		return component_;
	}
	,createCompoundComponent: function(name,xPosition,yPosition,width,height,orientation,inportNum,circuitDiagram) {
		var componentkind_ = new com_mun_model_gates_CompoundComponent(circuitDiagram);
		var component_ = new com_mun_model_component_Component(xPosition,yPosition,height,width,orientation,componentkind_,inportNum);
		component_.setNameOfTheComponentKind("CC");
		component_.set_name(name);
		return component_;
	}
	,addLink: function(coordinateFrom,coordinateTo,hitCircuitDiagram) {
		var object = new com_mun_type_Object();
		object = this.isOnPort(coordinateFrom);
		if(object.get_port() != null) {
			var leftEndpoint = new com_mun_model_component_Endpoint(object.get_port().get_xPosition(),object.get_port().get_yPosition());
			var rightEndpoint = new com_mun_model_component_Endpoint(object.get_port().get_xPosition(),object.get_port().get_yPosition());
			var link = new com_mun_model_component_Link(leftEndpoint,rightEndpoint);
			link.get_leftEndpoint().set_port(object.get_port());
			link.get_rightEndpoint().set_port(null);
			object.set_link(link);
			object.set_endPoint(null);
		} else {
			var leftEndpoint1 = new com_mun_model_component_Endpoint(coordinateFrom.get_xPosition(),coordinateFrom.get_yPosition());
			var rightEndpoint1 = new com_mun_model_component_Endpoint(coordinateTo.get_xPosition(),coordinateTo.get_yPosition());
			var link1 = new com_mun_model_component_Link(leftEndpoint1,rightEndpoint1);
			object.set_link(link1);
		}
		var command = new com_mun_controller_command_AddCommand(object,hitCircuitDiagram);
		this.commandManager.execute(command);
		this.linkAndComponentArrayReset();
		this.linkAndComponentArray.addLink(object.get_link());
		this.updateToolBar.update(this.linkAndComponentArray);
		this.hightLightObject(this.linkAndComponentArray);
		hitCircuitDiagram.computeDiagramSize();
		return object.get_link();
	}
	,copyLink: function(link,linkandComponentArray,newCreated) {
		var leftEndpoint;
		var rightEndpoint;
		if(link.get_leftEndpoint().get_port() == null) {
			leftEndpoint = new com_mun_model_component_Endpoint(link.get_leftEndpoint().get_xPosition(),link.get_leftEndpoint().get_yPosition());
		} else {
			leftEndpoint = new com_mun_model_component_Endpoint(link.get_leftEndpoint().get_xPosition(),link.get_leftEndpoint().get_yPosition());
			leftEndpoint.set_port(this.checkEndpointOnPort(leftEndpoint,newCreated.get_componentIterator()));
		}
		if(link.get_rightEndpoint().get_port() == null) {
			rightEndpoint = new com_mun_model_component_Endpoint(link.get_rightEndpoint().get_xPosition(),link.get_rightEndpoint().get_yPosition());
		} else {
			rightEndpoint = new com_mun_model_component_Endpoint(link.get_rightEndpoint().get_xPosition(),link.get_rightEndpoint().get_yPosition());
			rightEndpoint.set_port(this.checkEndpointOnPort(rightEndpoint,newCreated.get_componentIterator()));
		}
		return new com_mun_model_component_Link(leftEndpoint,rightEndpoint);
	}
	,checkEndpointOnPort: function(endpoint,componentIterator) {
		var i = componentIterator;
		while(i.hasNext()) {
			var i1 = i.next();
			var j = i1.get_inportIterator();
			while(j.hasNext()) {
				var j1 = j.next();
				if(this.isEndpointOnPort(endpoint,j1)) {
					return j1;
				}
			}
			var j2 = i1.get_outportIterator();
			while(j2.hasNext()) {
				var j3 = j2.next();
				if(this.isEndpointOnPort(endpoint,j3)) {
					return j3;
				}
			}
		}
		return null;
	}
	,copy: function(linkandComponentArray) {
		var result = new com_mun_type_LinkAndComponentAndEndpointAndPortArray();
		var i = linkandComponentArray.get_componentIterator();
		while(i.hasNext()) {
			var i1 = i.next();
			var component = this.createComponent(i1.getNameOfTheComponentKind(),i1.get_xPosition(),i1.get_yPosition(),i1.get_width(),i1.get_height(),i1.get_orientation(),i1.get_inportsNum());
			result.addComponent(component);
		}
		var i2 = linkandComponentArray.get_linkIterator();
		while(i2.hasNext()) {
			var i3 = i2.next();
			var link = this.copyLink(i3,linkandComponentArray,result);
			result.addLink(link);
		}
		var command = new com_mun_controller_command_CopyCommand(result,this.circuitDiagram);
		this.commandManager.execute(command);
		return result;
	}
	,paste: function(mouseLocation,copyToCircuitDiagram) {
		var linkandComponentArray = new com_mun_type_LinkAndComponentAndEndpointAndPortArray();
		var command = new com_mun_controller_command_PasteCommand(mouseLocation.get_xPosition(),mouseLocation.get_yPosition(),this.circuitDiagram,copyToCircuitDiagram);
		this.commandManager.execute(command);
		var _g = 0;
		var _g1 = this.circuitDiagram.getCopyStack().getLinkArray();
		while(_g < _g1.length) {
			var i = _g1[_g];
			++_g;
			linkandComponentArray.addLink(i);
		}
		var _g2 = 0;
		var _g11 = this.circuitDiagram.getCopyStack().getComponentArray();
		while(_g2 < _g11.length) {
			var i1 = _g11[_g2];
			++_g2;
			linkandComponentArray.addComponent(i1);
		}
		this.circuitDiagram.getCopyStack().clearStack();
		return linkandComponentArray;
	}
	,isCopyStackEmpty: function() {
		if(this.circuitDiagram.getCopyStack().isStackEmpty()) {
			return true;
		} else {
			return false;
		}
	}
	,findObjectInWhichCircuitDiagram: function(object) {
		return this.folder.findObjectBelongsToWhichCircuitDiagram(object);
	}
	,getTheOperateCircuitDiagram: function(linkAndComponentAndEndpointArray) {
		var object = new com_mun_type_Object();
		var i = linkAndComponentAndEndpointArray.get_componentIterator();
		while(i.hasNext()) {
			var i1 = i.next();
			object.set_component(i1);
			break;
		}
		var i2 = linkAndComponentAndEndpointArray.get_linkIterator();
		while(i2.hasNext()) {
			var i3 = i2.next();
			object.set_link(i3);
			break;
		}
		var i4 = linkAndComponentAndEndpointArray.get_endpointIterator();
		while(i4.hasNext()) {
			var i5 = i4.next();
			object.set_endPoint(i5);
			break;
		}
		return this.folder.findObjectBelongsToWhichCircuitDiagram(object);
	}
	,moveSelectedObjects: function(linkAndComponentAndEndpointArray,currentMouseLocation,mouseDownLocation,mouseLocationFlag) {
		var xMoveDistance = currentMouseLocation.get_xPosition() - mouseDownLocation.get_xPosition();
		var yMoveDistance = currentMouseLocation.get_yPosition() - mouseDownLocation.get_yPosition();
		var linkArray = [];
		var componentArray = [];
		var i = linkAndComponentAndEndpointArray.get_linkIterator();
		while(i.hasNext()) {
			var i1 = i.next();
			linkArray.push(i1);
		}
		var i2 = linkAndComponentAndEndpointArray.get_componentIterator();
		while(i2.hasNext()) {
			var i3 = i2.next();
			componentArray.push(i3);
		}
		var centerCoordinate = this.findTheCenterMoveArrays(linkArray,componentArray);
		if(mouseLocationFlag && linkAndComponentAndEndpointArray.getComponentIteratorLength() != 0) {
			var i4 = linkAndComponentAndEndpointArray.get_componentIterator();
			while(i4.hasNext()) {
				var i5 = i4.next();
				i5.set_xPosition(currentMouseLocation.get_xPosition() + (i5.get_xPosition() - centerCoordinate.get_xPosition()));
				i5.set_yPosition(currentMouseLocation.get_yPosition() + (i5.get_yPosition() - centerCoordinate.get_yPosition()));
			}
		}
		if(mouseLocationFlag && linkAndComponentAndEndpointArray.getLinkIteratorLength() != 0) {
			var i6 = linkAndComponentAndEndpointArray.get_linkIterator();
			while(i6.hasNext()) {
				var i7 = i6.next();
				var offsetCoordinate = this.calculateEndpointOffsetCoordinate(i7.get_rightEndpoint(),centerCoordinate.get_xPosition(),centerCoordinate.get_yPosition());
				i7.get_rightEndpoint().set_xPosition(currentMouseLocation.get_xPosition() - offsetCoordinate.get_xPosition());
				i7.get_rightEndpoint().set_yPosition(currentMouseLocation.get_yPosition() - offsetCoordinate.get_yPosition());
				offsetCoordinate = this.calculateEndpointOffsetCoordinate(i7.get_leftEndpoint(),centerCoordinate.get_xPosition(),centerCoordinate.get_yPosition());
				i7.get_leftEndpoint().set_xPosition(currentMouseLocation.get_xPosition() - offsetCoordinate.get_xPosition());
				i7.get_leftEndpoint().set_yPosition(currentMouseLocation.get_yPosition() - offsetCoordinate.get_yPosition());
			}
		}
		var moveCircuit = this.getTheOperateCircuitDiagram(linkAndComponentAndEndpointArray);
		var command = new com_mun_controller_command_MoveCommand(linkAndComponentAndEndpointArray,xMoveDistance,yMoveDistance,moveCircuit);
		this.commandManager.execute(command);
		this.linkAndComponentArray.clean();
		var i8 = linkAndComponentAndEndpointArray.get_linkIterator();
		while(i8.hasNext()) {
			var i9 = i8.next();
			this.linkAndComponentArray.addLink(i9);
		}
		var i10 = linkAndComponentAndEndpointArray.get_componentIterator();
		while(i10.hasNext()) {
			var i11 = i10.next();
			this.linkAndComponentArray.addComponent(i11);
		}
		if(linkAndComponentAndEndpointArray.getEndppointIteratorLength() != 0) {
			var i12 = this.circuitDiagram.get_linkIterator();
			while(i12.hasNext()) {
				var i13 = i12.next();
				if(i13.get_leftEndpoint() == linkAndComponentAndEndpointArray.getEndpointFromIndex(0) || i13.get_rightEndpoint() == linkAndComponentAndEndpointArray.getEndpointFromIndex(0)) {
					this.linkAndComponentArray.addLink(i13);
					break;
				}
			}
		}
		this.updateToolBar.update(this.linkAndComponentArray);
		this.hightLightObject(this.linkAndComponentArray);
		this.circuitDiagram.computeDiagramSize();
	}
	,calculateEndpointOffsetCoordinate: function(endpoint,xPosition,yPosition) {
		var xOffset = xPosition - endpoint.get_xPosition();
		var yOffset = yPosition - endpoint.get_yPosition();
		return new com_mun_type_Coordinate(xOffset,yOffset);
	}
	,findTheCenterMoveArrays: function(linkArray,componentArray) {
		var max_x = 0;
		var max_y = 0;
		var min_x = 99999;
		var min_y = 99999;
		var _g = 0;
		while(_g < linkArray.length) {
			var i = linkArray[_g];
			++_g;
			if(i.get_rightEndpoint().get_xPosition() > max_x) {
				max_x = i.get_rightEndpoint().get_xPosition();
			}
			if(i.get_rightEndpoint().get_xPosition() < min_x) {
				min_x = i.get_rightEndpoint().get_xPosition();
			}
			if(i.get_rightEndpoint().get_yPosition() > max_y) {
				max_y = i.get_rightEndpoint().get_yPosition();
			}
			if(i.get_rightEndpoint().get_yPosition() < min_y) {
				min_y = i.get_rightEndpoint().get_yPosition();
			}
			if(i.get_leftEndpoint().get_xPosition() > max_x) {
				max_x = i.get_leftEndpoint().get_xPosition();
			}
			if(i.get_leftEndpoint().get_xPosition() < min_x) {
				min_x = i.get_leftEndpoint().get_xPosition();
			}
			if(i.get_leftEndpoint().get_yPosition() > max_y) {
				max_y = i.get_leftEndpoint().get_yPosition();
			}
			if(i.get_leftEndpoint().get_yPosition() < min_y) {
				min_y = i.get_leftEndpoint().get_yPosition();
			}
		}
		var _g1 = 0;
		while(_g1 < componentArray.length) {
			var i1 = componentArray[_g1];
			++_g1;
			var maxPosition_x = i1.get_xPosition() + i1.get_width() / 2;
			var minPosition_x = i1.get_xPosition() - i1.get_width() / 2;
			var maxPosition_y = i1.get_yPosition() + i1.get_height() / 2;
			var minPosition_y = i1.get_yPosition() - i1.get_height() / 2;
			if(maxPosition_x > max_x) {
				max_x = maxPosition_x;
			}
			if(minPosition_x < min_x) {
				min_x = minPosition_x;
			}
			if(maxPosition_y > max_y) {
				max_y = maxPosition_y;
			}
			if(minPosition_y < min_y) {
				min_y = minPosition_y;
			}
		}
		return new com_mun_type_Coordinate((max_x - min_x) / 2 + min_x,(max_y - min_y) / 2 + min_y);
	}
	,changeOrientation: function(componentIterator,orientation) {
		var componentArray = [];
		var linkAndComponentArray = new com_mun_type_LinkAndComponentAndEndpointAndPortArray();
		var i = componentIterator;
		while(i.hasNext()) {
			var i1 = i.next();
			componentArray.push(i1);
			linkAndComponentArray.addComponent(i1);
		}
		var changeOrientationCircuitDiagram = this.getTheOperateCircuitDiagram(linkAndComponentArray);
		var orientationCommand = new com_mun_controller_command_OrientationCommand(componentArray,orientation,changeOrientationCircuitDiagram);
		this.commandManager.execute(orientationCommand);
		this.updateToolBar.update(linkAndComponentArray);
		this.hightLightObject(linkAndComponentArray);
	}
	,deleteObject: function(linkAndComponentArray) {
		var deleteObjectCircuitDiagram = this.getTheOperateCircuitDiagram(linkAndComponentArray);
		var deleteCommand = new com_mun_controller_command_DeleteCommand(linkAndComponentArray,deleteObjectCircuitDiagram);
		this.commandManager.execute(deleteCommand);
		this.redrawCanvas(linkAndComponentArray);
		this.circuitDiagram.computeDiagramSize();
	}
	,hightLightObject: function(linkAndComponentArray) {
		this.redrawCanvas(linkAndComponentArray);
	}
	,resetCommandManagerRecordFlag: function() {
		this.commandManager.recordFlagRest();
	}
	,setComponentName: function(component,name) {
		this.circuitDiagram.componentSetName(component,name);
	}
	,setComponentDelay: function(component,delay) {
		this.circuitDiagram.componentSetDelay(component,delay);
	}
	,undo: function() {
		var linkAndComponentArray = this.commandManager.undo();
		this.redrawCanvas(linkAndComponentArray);
		if(linkAndComponentArray.getComponentIteratorLength() == 1) {
			this.updateToolBar.visible(true);
		} else {
			this.updateToolBar.hidden();
		}
		this.circuitDiagram.computeDiagramSize();
	}
	,redo: function() {
		var linkAndComponentArray = this.commandManager.redo();
		this.redrawCanvas(linkAndComponentArray);
		if(linkAndComponentArray.getComponentIteratorLength() == 0 && linkAndComponentArray.getLinkIteratorLength() == 0) {
			this.updateToolBar.hidden();
		} else if(linkAndComponentArray.getComponentIteratorLength() == 1) {
			this.updateToolBar.visible(true);
		} else {
			this.updateToolBar.visible(false);
		}
		this.circuitDiagram.computeDiagramSize();
	}
	,setRedoButton: function() {
		if(this.commandManager.getRedoStackSize() == 0) {
			this.updateToolBar.setRedoButtonDisability(true);
		} else {
			this.updateToolBar.setRedoButtonDisability(false);
		}
	}
	,setUndoButton: function() {
		if(this.commandManager.getUndoStackSize() == 0) {
			this.updateToolBar.setUndoButtonDisability(true);
		} else {
			this.updateToolBar.setUndoButtonDisability(false);
		}
	}
	,redrawCanvas: function(linkAndComponentArray) {
		this.updateCanvas.update(linkAndComponentArray);
		this.setRedoButton();
		this.setUndoButton();
	}
	,linkAndComponentArrayReset: function() {
		this.linkAndComponentArray.clean();
	}
	,update: function() {
		var i = this.circuitDiagram.get_linkIterator();
		while(i.hasNext()) {
			var i1 = i.next();
			i1.get_leftEndpoint().updatePosition();
			i1.get_rightEndpoint().updatePosition();
		}
	}
	,findLinkThroughEndpoint: function(endpoint) {
		var i = this.circuitDiagram.get_linkIterator();
		while(i.hasNext()) {
			var i1 = i.next();
			if(i1.get_rightEndpoint() == endpoint) {
				return i1;
			} else if(i1.get_leftEndpoint() == endpoint) {
				return i1;
			}
		}
		return null;
	}
	,isOnPort: function(cooridnate) {
		var object = new com_mun_type_Object();
		var i = this.circuitDiagram.get_componentIterator();
		while(i.hasNext()) {
			var i1 = i.next();
			var j = i1.get_inportIterator();
			while(j.hasNext()) {
				var j1 = j.next();
				if(this.isInCircle(cooridnate,j1.get_xPosition(),j1.get_yPosition())) {
					object.set_port(j1);
					var k = this.circuitDiagram.get_linkIterator();
					while(k.hasNext()) {
						var k1 = k.next();
						object.set_endPoint(this.isLinkOnPort(k1,j1));
						return object;
					}
				}
			}
			var j2 = i1.get_outportIterator();
			while(j2.hasNext()) {
				var j3 = j2.next();
				if(this.isInCircle(cooridnate,j3.get_xPosition(),j3.get_yPosition())) {
					object.set_port(j3);
					var k2 = this.circuitDiagram.get_linkIterator();
					while(k2.hasNext()) {
						var k3 = k2.next();
						object.set_endPoint(this.isLinkOnPort(k3,j3));
						return object;
					}
				}
			}
		}
		return object;
	}
	,isLinkOnPort: function(link,port) {
		var endpoint = null;
		if(this.isEndpointOnPort(link.get_leftEndpoint(),port)) {
			endpoint = link.get_leftEndpoint();
		}
		if(this.isEndpointOnPort(link.get_rightEndpoint(),port)) {
			endpoint = link.get_rightEndpoint();
		}
		return endpoint;
	}
	,isInCircle: function(coordinate,orignalXPosition,orignalYPosition) {
		if(Math.abs(coordinate.get_xPosition() - orignalXPosition) <= com_mun_global_Constant.portRadius && Math.abs(coordinate.get_yPosition() - orignalYPosition) <= com_mun_global_Constant.portRadius) {
			return true;
		} else {
			return false;
		}
	}
	,isEndpointOnPort: function(endpoint,port) {
		if(endpoint.get_xPosition() == port.get_xPosition() && endpoint.get_yPosition() == port.get_yPosition()) {
			return true;
		} else {
			return false;
		}
	}
	,__class__: com_mun_controller_componentUpdate_UpdateCircuitDiagram
};
var com_mun_controller_componentUpdate_UpdateToolBar = function(updateCircuitDiagram) {
	this.linkAndComponentArray = new com_mun_type_LinkAndComponentAndEndpointAndPortArray();
	this.updateCircuitDiagram = updateCircuitDiagram;
	this.nameInput = window.document.getElementById("name_input");
	this.delayInput = window.document.getElementById("delay_input");
	this.orientation = window.document.getElementById("orientation");
	this.toolBar = window.document.getElementById("toolbar_div");
	this.deleteButton = window.document.getElementById("delete");
	this.orientation_div = window.document.getElementById("orientation_div");
	this.component_name_div = window.document.getElementById("component_name_div");
	this.component_delay_div = window.document.getElementById("component_delay_div");
	this.undo = window.document.getElementById("undo");
	this.undo.style.visibility = "visible";
	this.redo = window.document.getElementById("redo");
	this.redo.style.visibility = "visible";
	this.bindEventListener();
};
$hxClasses["com.mun.controller.componentUpdate.UpdateToolBar"] = com_mun_controller_componentUpdate_UpdateToolBar;
com_mun_controller_componentUpdate_UpdateToolBar.__name__ = ["com","mun","controller","componentUpdate","UpdateToolBar"];
com_mun_controller_componentUpdate_UpdateToolBar.prototype = {
	updateCircuitDiagram: null
	,linkAndComponentArray: null
	,nameInput: null
	,orientation: null
	,delayInput: null
	,orientation_div: null
	,toolBar: null
	,deleteButton: null
	,component_name_div: null
	,component_delay_div: null
	,undo: null
	,redo: null
	,controllerCanvasContext: null
	,setControllerCanvasContext: function(controllerCanvasContext) {
		this.controllerCanvasContext = controllerCanvasContext;
	}
	,onfocus: function() {
		this.updateCircuitDiagram.get_commandManager().recordFlagRest();
	}
	,update: function(linkAndComponentArray) {
		this.linkAndComponentArrayReset();
		if(linkAndComponentArray.getComponentIteratorLength() != 0) {
			var i = linkAndComponentArray.get_componentIterator();
			while(i.hasNext()) {
				var i1 = i.next();
				this.linkAndComponentArray.addComponent(i1);
			}
		}
		if(linkAndComponentArray.getLinkIteratorLength() != 0) {
			var i2 = linkAndComponentArray.get_linkIterator();
			while(i2.hasNext()) {
				var i3 = i2.next();
				this.linkAndComponentArray.addLink(i3);
			}
		}
		if(linkAndComponentArray.getComponentIteratorLength() != 0 && linkAndComponentArray.getLinkIteratorLength() == 0) {
			this.setOrientation();
			if(linkAndComponentArray.getComponentIteratorLength() == 1) {
				this.visible(true);
				this.setNameInput();
				this.setDelayInput();
			} else {
				this.visible(false);
			}
		} else {
			this.visible(false);
		}
		if(linkAndComponentArray.getComponentIteratorLength() == 0 && linkAndComponentArray.getLinkIteratorLength() == 0) {
			window.document.getElementById("copy").setAttribute("disabled","disabled");
			if(this.updateCircuitDiagram.isCopyStackEmpty()) {
				window.document.getElementById("paste").setAttribute("disabled","disabled");
			} else {
				$("#paste").removeAttr("disabled");
			}
		} else {
			$("#copy").removeAttr("disabled");
		}
	}
	,setOrientation: function() {
		if(this.linkAndComponentArray.getComponentIteratorLength() == 1) {
			$(this.orientation).val(Std.string(this.linkAndComponentArray.getComponentFromIndex(0).get_orientation()) + "");
		} else {
			$(this.orientation).val(Std.string(com_mun_model_enumeration_ORIENTATION.UNKNOW) + "");
		}
	}
	,setNameInput: function() {
		$(this.nameInput).val(this.linkAndComponentArray.getComponentFromIndex(0).get_name());
	}
	,setDelayInput: function() {
		$(this.delayInput).val(this.linkAndComponentArray.getComponentFromIndex(0).get_delay());
	}
	,changeToNorth: function() {
		if(this.linkAndComponentArray.getComponentIteratorLength() != 0) {
			this.updateCircuitDiagram.changeOrientation(this.linkAndComponentArray.get_componentIterator(),com_mun_model_enumeration_ORIENTATION.NORTH);
			this.setOrientation();
		}
	}
	,changeToSouth: function() {
		if(this.linkAndComponentArray.getComponentIteratorLength() != 0) {
			this.updateCircuitDiagram.changeOrientation(this.linkAndComponentArray.get_componentIterator(),com_mun_model_enumeration_ORIENTATION.SOUTH);
			this.setOrientation();
		}
	}
	,changeToWest: function() {
		if(this.linkAndComponentArray.getComponentIteratorLength() != 0) {
			this.updateCircuitDiagram.changeOrientation(this.linkAndComponentArray.get_componentIterator(),com_mun_model_enumeration_ORIENTATION.WEST);
			this.setOrientation();
		}
	}
	,changeToEast: function() {
		if(this.linkAndComponentArray.getComponentIteratorLength() != 0) {
			this.updateCircuitDiagram.changeOrientation(this.linkAndComponentArray.get_componentIterator(),com_mun_model_enumeration_ORIENTATION.EAST);
			this.setOrientation();
		}
	}
	,inputChange: function() {
		if(this.linkAndComponentArray.getComponentIteratorLength() == 1) {
			var temp = $(this.nameInput).val();
			var temp2 = $(this.delayInput).val();
			this.updateCircuitDiagram.setComponentDelay(this.linkAndComponentArray.getComponentFromIndex(0),temp2);
			this.updateCircuitDiagram.setComponentName(this.linkAndComponentArray.getComponentFromIndex(0),temp);
		}
	}
	,deleteObject: function() {
		if(this.linkAndComponentArray.getComponentIteratorLength() != 0 || this.linkAndComponentArray.getLinkIteratorLength() != 0) {
			this.updateCircuitDiagram.deleteObject(this.linkAndComponentArray);
		}
	}
	,undoCommand: function() {
		this.updateCircuitDiagram.undo();
	}
	,redoCommand: function() {
		this.updateCircuitDiagram.redo();
	}
	,copy: function() {
		$("#paste").removeAttr("disabled");
		this.updateCircuitDiagram.get_commandManager().recordFlagSetTrue();
		this.updateCircuitDiagram.copy(this.linkAndComponentArray);
		this.updateCircuitDiagram.get_commandManager().recordFlagRest();
	}
	,paste: function() {
		window.document.getElementById("copy").setAttribute("disabled","disabled");
		window.document.getElementById("paste").setAttribute("disabled","disabled");
		this.controllerCanvasContext.set_controllerState(com_mun_model_enumeration_C_$STATE.PASTE);
	}
	,visible: function(allVisable) {
		this.deleteButton.style.visibility = "visible";
		if(allVisable) {
			this.orientation_div.style.visibility = "visible";
			this.component_name_div.style.visibility = "visible";
			this.component_delay_div.style.visibility = "visible";
		} else {
			this.orientation_div.style.visibility = "hidden";
			this.component_name_div.style.visibility = "hidden";
			this.component_delay_div.style.visibility = "hidden";
		}
	}
	,hidden: function() {
		this.deleteButton.style.visibility = "hidden";
		this.orientation_div.style.visibility = "hidden";
		this.component_name_div.style.visibility = "hidden";
		this.component_delay_div.style.visibility = "hidden";
	}
	,setUndoButtonDisability: function(disable) {
		if(disable) {
			this.undo.setAttribute("disabled","disabled");
		} else {
			$(this.undo).removeAttr("disabled");
		}
	}
	,setRedoButtonDisability: function(disable) {
		if(disable) {
			this.redo.setAttribute("disabled","disabled");
		} else {
			$(this.redo).removeAttr("disabled");
		}
	}
	,linkAndComponentArrayReset: function() {
		this.linkAndComponentArray.clean();
	}
	,unbindEventListener: function() {
		this.nameInput.removeEventListener("keyup",$bind(this,this.inputChange));
		this.delayInput.removeEventListener("keyup",$bind(this,this.inputChange));
		this.deleteButton.removeEventListener("click",$bind(this,this.deleteObject));
		this.undo.removeEventListener("click",$bind(this,this.undoCommand));
		this.redo.removeEventListener("click",$bind(this,this.redoCommand));
		window.document.getElementById("north").removeEventListener("click",$bind(this,this.changeToNorth));
		window.document.getElementById("south").removeEventListener("click",$bind(this,this.changeToSouth));
		window.document.getElementById("west").removeEventListener("click",$bind(this,this.changeToWest));
		window.document.getElementById("east").removeEventListener("click",$bind(this,this.changeToEast));
		window.document.getElementById("copy").removeEventListener("click",$bind(this,this.copy));
		window.document.getElementById("paste").removeEventListener("click",$bind(this,this.paste));
		this.toolBar.removeEventListener("focus",$bind(this,this.onfocus));
	}
	,bindEventListener: function() {
		this.nameInput.addEventListener("keyup",$bind(this,this.inputChange),false);
		this.delayInput.addEventListener("keyup",$bind(this,this.inputChange),false);
		this.deleteButton.onclick = $bind(this,this.deleteObject);
		this.undo.onclick = $bind(this,this.undoCommand);
		this.redo.onclick = $bind(this,this.redoCommand);
		window.document.getElementById("north").onclick = $bind(this,this.changeToNorth);
		window.document.getElementById("south").onclick = $bind(this,this.changeToSouth);
		window.document.getElementById("west").onclick = $bind(this,this.changeToWest);
		window.document.getElementById("east").onclick = $bind(this,this.changeToEast);
		window.document.getElementById("copy").onclick = $bind(this,this.copy);
		window.document.getElementById("paste").onclick = $bind(this,this.paste);
		this.toolBar.onfocus = $bind(this,this.onfocus);
	}
	,__class__: com_mun_controller_componentUpdate_UpdateToolBar
};
var com_mun_controller_controllerState_ControllerCanvasContext = function(circuitDiagram,updateCircuitDiagram,sideBar,upateToolBar,canvas,updateCanvas) {
	this.circuitDiagram = circuitDiagram;
	this.updateCircuitDiagram = updateCircuitDiagram;
	this.sideBar = sideBar;
	this.updateToolBar = upateToolBar;
	this.canvas = canvas;
	this.updateCanvas = updateCanvas;
	this.controllerState = com_mun_model_enumeration_C_$STATE.IDLE;
	this.lastState = com_mun_model_enumeration_C_$STATE.IDLE;
	this.mouseState = com_mun_model_enumeration_M_$STATE.IDLE;
	this.keyState = new com_mun_controller_controllerState_KeyState();
	this.linkAndComponentAndEndpointAndPortArray = new com_mun_type_LinkAndComponentAndEndpointAndPortArray();
	this.lastClickArray = new com_mun_type_LinkAndComponentAndEndpointAndPortArray();
	this.createComponent = false;
	this.canvas.addEventListener("mousedown",$bind(this,this.doMouseDown),false);
	this.canvas.addEventListener("mousemove",$bind(this,this.doMouseMove),false);
	this.canvas.addEventListener("mouseup",$bind(this,this.doMouseUp),false);
	this.canvas.addEventListener("mouseenter",$bind(this,this.doMouseEnter),false);
};
$hxClasses["com.mun.controller.controllerState.ControllerCanvasContext"] = com_mun_controller_controllerState_ControllerCanvasContext;
com_mun_controller_controllerState_ControllerCanvasContext.__name__ = ["com","mun","controller","controllerState","ControllerCanvasContext"];
com_mun_controller_controllerState_ControllerCanvasContext.prototype = {
	circuitDiagram: null
	,updateCircuitDiagram: null
	,updateCanvas: null
	,keyState: null
	,sideBar: null
	,updateToolBar: null
	,linkAndComponentAndEndpointAndPortArray: null
	,lastClickArray: null
	,hitListWorldPoint: null
	,createToCircuitDiagram: null
	,mouseMoveWorldCoordiante: null
	,mouseDownWorldCoordinate: null
	,lastState: null
	,controllerState: null
	,mouseState: null
	,hightLightLink: null
	,canvas: null
	,createComponent: null
	,get_controllerState: function() {
		return this.controllerState;
	}
	,set_controllerState: function(value) {
		this.lastState = this.controllerState;
		this.controllerState = value;
		this.checkState();
	}
	,getPointOnCanvas: function(x,y) {
		var bbox = this.canvas.getBoundingClientRect();
		var coordinate = new com_mun_type_Coordinate(0,0);
		coordinate.set_xPosition((x - bbox.left) * (this.canvas.width / bbox.width));
		coordinate.set_yPosition((y - bbox.top) * (this.canvas.height / bbox.height));
		return coordinate;
	}
	,doMouseEnter: function(event) {
		if(this.createComponent && this.controllerState == com_mun_model_enumeration_C_$STATE.CREATE_COMPONENT) {
			this.linkAndComponentAndEndpointAndPortArray.clean();
			var x = event.clientX;
			var y = event.clientY;
			var mouseMoveLocation = this.getPointOnCanvas(x,y);
			this.mouseMoveWorldCoordiante = this.updateCanvas.getTransform().pointInvert(mouseMoveLocation);
			var moveWorldPointArray = this.circuitDiagram.findWorldPoint(this.mouseMoveWorldCoordiante,com_mun_model_enumeration_POINT_$MODE.ONE);
			this.createToCircuitDiagram = moveWorldPointArray[0].get_circuitDiagram();
			if(this.sideBar.getComponent().getNameOfTheComponentKind() == "CC" && this.sideBar.getComponent().get_componentKind().getInnerCircuitDiagram() == this.createToCircuitDiagram) {
				window.alert("You cannot add a compound Component in itself!");
				this.createComponent = false;
			} else {
				this.updateCircuitDiagram.createComponentByCommand(this.sideBar.getComponent(),this.createToCircuitDiagram);
				this.linkAndComponentAndEndpointAndPortArray.addComponent(this.sideBar.getComponent());
				this.createComponent = false;
			}
		} else if(this.createComponent && this.controllerState == com_mun_model_enumeration_C_$STATE.PASTE) {
			this.linkAndComponentAndEndpointAndPortArray.clean();
			var x1 = event.clientX;
			var y1 = event.clientY;
			var mouseMoveLocation1 = this.getPointOnCanvas(x1,y1);
			this.mouseMoveWorldCoordiante = this.updateCanvas.getTransform().pointInvert(mouseMoveLocation1);
			var moveWorldPointArray1 = this.circuitDiagram.findWorldPoint(this.mouseMoveWorldCoordiante,com_mun_model_enumeration_POINT_$MODE.ONE);
			this.createToCircuitDiagram = moveWorldPointArray1[0].get_circuitDiagram();
			this.linkAndComponentAndEndpointAndPortArray.setArray(this.updateCircuitDiagram.paste(moveWorldPointArray1[0].get_coordinate(),this.createToCircuitDiagram));
			this.updateCircuitDiagram.get_commandManager().recordFlagSetTrue();
		}
	}
	,doMouseDown: function(event) {
		var x = event.clientX;
		var y = event.clientY;
		var mouseDownLocation = this.getPointOnCanvas(x,y);
		this.mouseDownWorldCoordinate = this.updateCanvas.getTransform().pointInvert(mouseDownLocation);
		this.mouseState = com_mun_model_enumeration_M_$STATE.MOUSE_DOWN;
		this.mouseDownProcess();
	}
	,doMouseUp: function(event) {
		this.mouseState = com_mun_model_enumeration_M_$STATE.MOUSE_UP;
		this.updateCircuitDiagram.resetCommandManagerRecordFlag();
		this.lastState = this.controllerState;
		this.controllerState = com_mun_model_enumeration_C_$STATE.IDLE;
		this.checkState();
		this.updateCircuitDiagram.update();
	}
	,doMouseMove: function(event) {
		var x = event.clientX;
		var y = event.clientY;
		var mouseMoveLocation = this.getPointOnCanvas(x,y);
		this.mouseMoveWorldCoordiante = this.updateCanvas.getTransform().pointInvert(mouseMoveLocation);
		if(this.controllerState == com_mun_model_enumeration_C_$STATE.MOVE) {
			var moveWorldPointArray = this.circuitDiagram.findWorldPoint(this.mouseMoveWorldCoordiante,com_mun_model_enumeration_POINT_$MODE.PATH);
			var moveToOtherCircuitDiagram = true;
			var _g = 0;
			while(_g < moveWorldPointArray.length) {
				var i = moveWorldPointArray[_g];
				++_g;
				if(i.get_circuitDiagram() == this.hitListWorldPoint.get_circuitDiagram()) {
					moveToOtherCircuitDiagram = false;
					this.mouseMoveWorldCoordiante = i.get_coordinate();
					break;
				}
			}
			if(!moveToOtherCircuitDiagram) {
				this.mouseMoveResultProcess();
				this.mouseDownWorldCoordinate = this.mouseMoveWorldCoordiante;
			} else {
				this.mouseMoveWorldCoordiante = this.mouseDownWorldCoordinate;
			}
		} else {
			if(this.createToCircuitDiagram != null && this.createToCircuitDiagram != this.circuitDiagram) {
				this.mouseMoveWorldCoordiante = this.circuitDiagram.findWorldPoint(this.mouseMoveWorldCoordiante,com_mun_model_enumeration_POINT_$MODE.ONE)[0].get_coordinate();
			}
			this.mouseMoveResultProcess();
			this.mouseDownWorldCoordinate = this.mouseMoveWorldCoordiante;
		}
	}
	,mouseDownProcess: function() {
		this.updateCircuitDiagram.resetCommandManagerRecordFlag();
		var _g = this.keyState.get_keyState();
		switch(_g[1]) {
		case 0:
			this.lastState = this.controllerState;
			this.controllerState = com_mun_model_enumeration_C_$STATE.SINGLE_SELECTION;
			break;
		case 1:
			this.lastState = this.controllerState;
			this.controllerState = com_mun_model_enumeration_C_$STATE.SINGLE_SELECTION;
			break;
		case 2:
			if(this.keyState.get_key() == com_mun_model_enumeration_KEY.ALT_KEY) {
				this.lastState = this.controllerState;
				this.controllerState = com_mun_model_enumeration_C_$STATE.MULTI_SELECTION;
			} else {
				this.lastState = this.controllerState;
				this.controllerState = com_mun_model_enumeration_C_$STATE.SINGLE_SELECTION;
			}
			break;
		}
		this.checkState();
	}
	,mouseMoveResultProcess: function() {
		if(this.controllerState == com_mun_model_enumeration_C_$STATE.CREATE_COMPONENT) {
			this.lastState = this.controllerState;
			this.controllerState = com_mun_model_enumeration_C_$STATE.MOVE;
			this.checkState();
			this.controllerState = com_mun_model_enumeration_C_$STATE.CREATE_COMPONENT;
		} else if((this.controllerState == com_mun_model_enumeration_C_$STATE.SINGLE_SELECTION || this.controllerState == com_mun_model_enumeration_C_$STATE.MULTI_SELECTION || this.controllerState == com_mun_model_enumeration_C_$STATE.CREATE_LINK) && this.mouseState == com_mun_model_enumeration_M_$STATE.MOUSE_DOWN) {
			this.lastState = this.controllerState;
			this.controllerState = com_mun_model_enumeration_C_$STATE.MOVE;
			this.checkState();
		} else if(this.controllerState == com_mun_model_enumeration_C_$STATE.MOVE && this.mouseState == com_mun_model_enumeration_M_$STATE.MOUSE_DOWN) {
			this.lastState = this.controllerState;
			this.controllerState = com_mun_model_enumeration_C_$STATE.MOVE;
			this.checkState();
		} else if(this.controllerState == com_mun_model_enumeration_C_$STATE.PASTE) {
			this.lastState = this.controllerState;
			this.controllerState = com_mun_model_enumeration_C_$STATE.MOVE;
			this.checkState();
			this.controllerState = com_mun_model_enumeration_C_$STATE.PASTE;
		}
	}
	,checkHitList: function() {
		var hitObjectArray = this.circuitDiagram.findHitList(this.mouseDownWorldCoordinate,com_mun_model_enumeration_MODE.EXCLUDE_PARENTS);
		this.hitListWorldPoint = this.circuitDiagram.findWorldPoint(this.mouseDownWorldCoordinate,com_mun_model_enumeration_POINT_$MODE.ONE)[0];
		this.mouseDownWorldCoordinate = this.hitListWorldPoint.get_coordinate();
		var componentCounter = 0;
		var linkCounter = 0;
		var portCounter = 0;
		var endpointCounter = 0;
		var _g = 0;
		while(_g < hitObjectArray.length) {
			var i = hitObjectArray[_g];
			++_g;
			if(i.get_component() != null) {
				if(i.get_component().getNameOfTheComponentKind() == "CC") {
					var object = new com_mun_type_Object();
					object.set_component(i.get_component());
					if(this.updateCircuitDiagram.findObjectInWhichCircuitDiagram(object) == this.hitListWorldPoint.get_circuitDiagram()) {
						++componentCounter;
					}
				} else {
					++componentCounter;
				}
			} else if(i.get_link() != null) {
				++linkCounter;
			} else if(i.get_port() != null) {
				++portCounter;
			} else if($bind(i,i.get_endpoint) != null) {
				++endpointCounter;
			}
		}
		if(portCounter != 0 && endpointCounter == 0) {
			this.controllerState = com_mun_model_enumeration_C_$STATE.CREATE_LINK;
			this.checkState();
		} else if(endpointCounter != 0 && portCounter != 0) {
			var endpoint = null;
			var _g1 = 0;
			while(_g1 < hitObjectArray.length) {
				var i1 = hitObjectArray[_g1];
				++_g1;
				if(i1.get_endpoint() != null) {
					endpoint = i1.get_endpoint();
				}
			}
			if(this.updateCircuitDiagram.findLinkThroughEndpoint(endpoint) == this.hightLightLink) {
				var object1 = new com_mun_type_Object();
				object1.set_endPoint(endpoint);
				if(this.updateCircuitDiagram.findObjectInWhichCircuitDiagram(object1) == this.hitListWorldPoint.get_circuitDiagram()) {
					this.linkAndComponentAndEndpointAndPortArray.addEndpoint(endpoint);
				}
			} else {
				this.controllerState = com_mun_model_enumeration_C_$STATE.CREATE_LINK;
				this.checkState();
			}
		} else if(endpointCounter != 0 && portCounter == 0) {
			var endpoint1 = null;
			var _g2 = 0;
			while(_g2 < hitObjectArray.length) {
				var i2 = hitObjectArray[_g2];
				++_g2;
				if(i2.get_endpoint() != null) {
					endpoint1 = i2.get_endpoint();
				}
			}
			var object2 = new com_mun_type_Object();
			object2.set_endPoint(endpoint1);
			if(this.updateCircuitDiagram.findObjectInWhichCircuitDiagram(object2) == this.hitListWorldPoint.get_circuitDiagram()) {
				this.linkAndComponentAndEndpointAndPortArray.addEndpoint(endpoint1);
			}
		} else if(componentCounter != 0) {
			var component = null;
			var _g3 = 0;
			while(_g3 < hitObjectArray.length) {
				var i3 = hitObjectArray[_g3];
				++_g3;
				if(i3.get_component() != null) {
					component = i3.get_component();
				}
			}
			var object3 = new com_mun_type_Object();
			object3.set_component(component);
			if(this.updateCircuitDiagram.findObjectInWhichCircuitDiagram(object3) == this.hitListWorldPoint.get_circuitDiagram()) {
				this.linkAndComponentAndEndpointAndPortArray.addComponent(component);
			}
		} else if(linkCounter != 0) {
			var link = null;
			var _g4 = 0;
			while(_g4 < hitObjectArray.length) {
				var i4 = hitObjectArray[_g4];
				++_g4;
				if(i4.get_link() != null) {
					link = i4.get_link();
				}
			}
			this.hightLightLink = link;
			var object4 = new com_mun_type_Object();
			object4.set_link(link);
			if(this.updateCircuitDiagram.findObjectInWhichCircuitDiagram(object4) == this.hitListWorldPoint.get_circuitDiagram()) {
				this.linkAndComponentAndEndpointAndPortArray.addLink(link);
			}
		} else if(componentCounter == 0 && linkCounter == 0 && portCounter == 0 && endpointCounter == 0) {
			this.controllerState = com_mun_model_enumeration_C_$STATE.CREATE_LINK;
			this.checkState();
		}
		this.updateCircuitDiagram.hightLightObject(this.linkAndComponentAndEndpointAndPortArray);
		this.toolBarUpdate();
	}
	,checkState: function() {
		var _g = this.controllerState;
		switch(_g[1]) {
		case 0:
			this.lastClickArray.setArray(this.linkAndComponentAndEndpointAndPortArray);
			if(!(this.keyState.get_key() == com_mun_model_enumeration_KEY.ALT_KEY && this.keyState.get_keyState() == com_mun_model_enumeration_K_$STATE.KEY_DOWN)) {
				this.linkAndComponentAndEndpointAndPortArray.clean();
			}
			var i = this.circuitDiagram.get_linkIterator();
			while(i.hasNext()) {
				var i1 = i.next();
				var linkLength = Math.sqrt(Math.pow(Math.abs(i1.get_rightEndpoint().get_xPosition() - i1.get_leftEndpoint().get_xPosition()),2) + Math.pow(Math.abs(i1.get_rightEndpoint().get_yPosition() - i1.get_leftEndpoint().get_yPosition()),2));
				if(linkLength < 10) {
					this.circuitDiagram.get_commandManager().undo();
					this.circuitDiagram.get_commandManager().popRedoStack();
				}
			}
			this.boxTypeList();
			break;
		case 1:
			this.createComponent = true;
			break;
		case 2:
			this.linkAndComponentAndEndpointAndPortArray.clean();
			var link = this.updateCircuitDiagram.addLink(this.mouseDownWorldCoordinate,this.mouseDownWorldCoordinate,this.hitListWorldPoint.get_circuitDiagram());
			this.linkAndComponentAndEndpointAndPortArray.addEndpoint(link.get_rightEndpoint());
			this.hightLightLink = link;
			break;
		case 3:
			if(!this.linkAndComponentAndEndpointAndPortArray.isEmpty()) {
				if(this.lastState == com_mun_model_enumeration_C_$STATE.CREATE_COMPONENT) {
					this.updateCircuitDiagram.moveSelectedObjects(this.linkAndComponentAndEndpointAndPortArray,this.mouseMoveWorldCoordiante,this.mouseMoveWorldCoordiante,true);
				} else if(this.lastState == com_mun_model_enumeration_C_$STATE.PASTE) {
					this.updateCircuitDiagram.moveSelectedObjects(this.linkAndComponentAndEndpointAndPortArray,this.mouseMoveWorldCoordiante,this.mouseMoveWorldCoordiante,true);
				} else {
					this.updateCircuitDiagram.moveSelectedObjects(this.linkAndComponentAndEndpointAndPortArray,this.mouseMoveWorldCoordiante,this.mouseDownWorldCoordinate,false);
				}
			}
			break;
		case 4:
			this.createComponent = true;
			break;
		case 5:
			this.linkAndComponentAndEndpointAndPortArray.setArray(this.lastClickArray);
			this.checkHitList();
			break;
		case 6:
			this.linkAndComponentAndEndpointAndPortArray.clean();
			this.checkHitList();
			break;
		}
	}
	,toolBarUpdate: function() {
		if(this.linkAndComponentAndEndpointAndPortArray.getComponentIteratorLength() != 0 || this.linkAndComponentAndEndpointAndPortArray.getLinkIteratorLength() != 0) {
			this.updateToolBar.update(this.linkAndComponentAndEndpointAndPortArray);
		} else {
			this.updateToolBar.hidden();
		}
	}
	,setSetComponentBoxTypeDiv: function(component) {
		var boxTypeSelectionHTML = "";
		if(component.get_boxType() == com_mun_model_enumeration_BOX.BLACK_BOX) {
			boxTypeSelectionHTML += "<div class=\"col-sm-12 col-md-12 col-lg-12\">" + component.get_name() + "<button type=\"button\" class=\"btn btn-primary btn-sm\" id=\"BoxType-" + component.get_name() + "-BoxType\">Black Box</button></div>";
		} else {
			boxTypeSelectionHTML += "<div class=\"col-sm-12 col-md-12 col-lg-12\">" + component.get_name() + "<button type=\"button\" class=\"btn btn-primary btn-sm active\" id=\"BoxType-" + component.get_name() + "-BoxType\">White Box</button></div>";
		}
		return boxTypeSelectionHTML;
	}
	,setComponentBoxTypeButtonListener: function(component) {
		var _gthis = this;
		window.document.getElementById("BoxType-" + component.get_name() + "-BoxType").onclick = function(event) {
			var id = event.target.id;
			id = id.substring(id.indexOf("-") + 1,id.lastIndexOf("-"));
			var i = _gthis.circuitDiagram.get_componentIterator();
			while(i.hasNext()) {
				var i1 = i.next();
				if(i1.getNameOfTheComponentKind() == "CC" && component.get_name() == id) {
					if(i1.get_boxType() == com_mun_model_enumeration_BOX.BLACK_BOX) {
						i1.set_boxType(com_mun_model_enumeration_BOX.WHITE_BOX);
					} else {
						i1.set_boxType(com_mun_model_enumeration_BOX.BLACK_BOX);
					}
				}
			}
			_gthis.boxTypeList();
			_gthis.updateCanvas.update();
		};
	}
	,boxTypeList: function() {
		var boxTypeSelectionHTML = "";
		var i = this.circuitDiagram.get_componentIterator();
		while(i.hasNext()) {
			var i1 = i.next();
			if(i1.getNameOfTheComponentKind() == "CC" && boxTypeSelectionHTML.indexOf("BoxType-" + i1.get_name() + "-BoxType") == -1) {
				boxTypeSelectionHTML += this.setSetComponentBoxTypeDiv(i1);
			}
		}
		window.document.getElementById("compoundComponentBoxSelection").innerHTML = boxTypeSelectionHTML;
		var i2 = this.circuitDiagram.get_componentIterator();
		while(i2.hasNext()) {
			var i3 = i2.next();
			if(i3.getNameOfTheComponentKind() == "CC") {
				this.setComponentBoxTypeButtonListener(i3);
			}
		}
	}
	,__class__: com_mun_controller_controllerState_ControllerCanvasContext
};
var com_mun_controller_controllerState_FolderState = function() {
	this.fileListCount = 0;
	this.selectedPath = "";
	this.currentIndex = -1;
	var _gthis = this;
	var initalUrl = window.location.href.split("?");
	var initialUsername = initalUrl[1].split("=")[1];
	this.selectedPath = "root/" + initialUsername;
	this.updateCircuitDiagramMap = new haxe_ds_ObjectMap();
	this.updateToolBarMap = new haxe_ds_ObjectMap();
	this.updateCanvasMap = new haxe_ds_ObjectMap();
	this.sideBarMap = new haxe_ds_ObjectMap();
	this.controllerCanvasContextMap = new haxe_ds_ObjectMap();
	this.canvasMap = new haxe_ds_ObjectMap();
	this.contextMap = new haxe_ds_ObjectMap();
	this.circuitDiagramArray = [];
	this.previouseCircuitDiagramArray = [];
	this.folder = new com_mun_model_component_Folder();
	this.currentState = com_mun_model_enumeration_F_$STATE.IDLE;
	this.checkState();
	window.document.getElementById("previouseCD").onclick = function() {
		_gthis.currentState = com_mun_model_enumeration_F_$STATE.PREVIOUS;
		_gthis.checkState();
	};
	window.document.getElementById("nextCD").onclick = function() {
		_gthis.currentState = com_mun_model_enumeration_F_$STATE.NEXT;
		_gthis.checkState();
	};
	$("#search_circuitdiagram").bind("input porpertychange",function() {
		var tmp = window.document.getElementById("search_circuitdiagram");
		_gthis.searchName = $(tmp).val();
		_gthis.currentState = com_mun_model_enumeration_F_$STATE.SEARCH;
		_gthis.checkState();
	});
	$("#nameofcd").bind("keydown",function(key) {
		if(key.keyCode == 13) {
			var oldname = _gthis.circuitDiagram.get_name();
			var newName = $("#nameofcd").val();
			var success = _gthis.folder.changeCircuitDiagramName(oldname,newName,_gthis.circuitDiagram);
			if(success) {
				$("#nameofcddiv").removeClass("has-error").addClass("has-success");
				_gthis.changeNameForHTMLStuff(oldname,newName);
				var i = _gthis.sideBarMap.iterator();
				while(i.hasNext()) {
					var i1 = i.next();
					if(i1.isGateNameExist(oldname)) {
						i1.removeCompoundComponentToGateNameArray(oldname);
						i1.pushCompoundComponentToGateNameArray(newName);
					}
				}
			} else {
				$("#nameofcddiv").removeClass("has-success").addClass("has-error");
			}
			$.ajax({ type : "post", url : "http://127.0.0.1:3000/app/users/changename?id=" + _gthis.circuitDiagram.get_id() + "&name=" + newName, contentType : "application/json", dataType : "text"}).done(function(text) {
			});
		}
	});
	$("#nameofcd").bind("focusout",function() {
		$("#nameofcd").val(_gthis.circuitDiagram.get_name());
		$("#nameofcddiv").removeClass("has-error");
	});
	window.document.getElementById("fileClose").onclick = function() {
		$("#alert").css("opacity",0.5).hide();
		$("#alert2").css("opacity",1).hide();
		$("#text1").css("opacity",1).hide();
		$("#text2").css("opacity",1).hide();
	};
	window.document.getElementById("download").onclick = function() {
		$("#alert").css("opacity",0.5).show();
		$("#alert2").css("opacity",1).show();
		$("#text1").css("opacity",1).show();
		$("#text2").css("opacity",1).show();
		var url = window.location.href.split("?");
		var username = url[1].split("=")[1];
		$("#FileCollapseList").html("<a data-toggle=\"collapse\" href=\"#FileCollapseList" + (_gthis.fileListCount == null ? "null" : "" + _gthis.fileListCount) + "\" id=\"path" + username + "\"><img src=\"/client/src/icon/folder.png\">" + username + "</a>");
		$("#FileCollapseList").append("<div id=\"FileCollapseList" + (_gthis.fileListCount == null ? "null" : "" + _gthis.fileListCount) + "\" class=\"panel-collapse collapse out\" >\r\n                            <div class=\"container-fluid\" id=\"Fieldpath_root" + username + "\">\r\n                            </div>\r\n                        </div>\r\n                    </div>");
		_gthis.fileListCount++;
		$("#downloadFile").hide();
		$("#versionList").hide();
		$("#deleteFile").hide();
		$("#deleteBox").hide();
		window.document.getElementById("path" + username).onclick = function() {
			$("#FolderNameLabel").show();
			$("#createFolder").show();
			$("#uploadCircuit").show();
			$("#downloadFile").hide();
			$("#versionList").hide();
			$("#deleteFile").hide();
			$("#deleteBox").hide();
			$("#Fieldpath_root" + username).html("");
			var path = [];
			path.push("root");
			path.push(username);
			window.document.getElementById("createFolder").onclick = function() {
				if(window.document.getElementById("FolderNameLabel").itemValue != "") {
					var tmp1 = "root/" + username + "/" + Std.string($("#newFolderName").val());
					_gthis.createFolder(username,tmp1);
				}
			};
			$("#selectCircuit").html("");
			var _g = 0;
			var _g1 = _gthis.circuitDiagramArray;
			while(_g < _g1.length) {
				var i2 = _g1[_g];
				++_g;
				$("#selectCircuit").append("<option>" + i2.get_name() + "</option>");
			}
			window.document.getElementById("uploadCD").onclick = function() {
				var tmp2 = Std.string($("#selectCircuit").val());
				_gthis.uploadCircuit(tmp2,"root/" + username,username);
			};
			_gthis.newCollapse(path);
		};
	};
	var CurrentUrl = window.location.href.split("?");
	var CurrentUsername = CurrentUrl[1].split("=")[1];
	var CurrentfileListCount = 0;
	$("#righttab").html("<a data-toggle=\"collapse\" href=\"#CurrentFileCollapseList" + (CurrentfileListCount == null ? "null" : "" + CurrentfileListCount) + "\" id=\"Currentpath" + CurrentUsername + "\"><img src=\"/client/src/icon/folder.png\">" + CurrentUsername + "</a>" + "<div id=\"CurrentFileCollapseList" + (CurrentfileListCount == null ? "null" : "" + CurrentfileListCount) + "\" class=\"panel-collapse collapse out\" >\r\n                            <div class=\"container-fluid\" id=\"CurrentFieldpath_root" + CurrentUsername + "\">\r\n                            </div>\r\n                        </div>\r\n                    </div>");
	CurrentfileListCount += 1;
	$("#CurrentPathLabel").html(CurrentUsername);
	window.document.getElementById("Currentpath" + CurrentUsername).onclick = function() {
		$("#CurrentFieldpath_root" + CurrentUsername).html("");
		var Currentpath = [];
		Currentpath.push("root");
		Currentpath.push(CurrentUsername);
		$("#CurrentPathLabel").html(CurrentUsername);
		_gthis.selectedPath = "root/" + CurrentUsername;
		_gthis.currentnewCollapse(Currentpath,CurrentfileListCount);
	};
	window.document.getElementById("import").onclick = function() {
		var files = document.getElementById("selectFiles").files;
		var fr = new FileReader();
		fr.onload = function(e) {
			var result = JSON.parse(e.target.result);
			var formatted = JSON.stringify(result,null,"2");
			formatted = JSON.parse(formatted);
			window.console.log(formatted);
		};
		fr.readAsText(files.item(0));
	};
	window.document.getElementById("createNewCircuitDiagram").onclick = function() {
		$("li[id$='-li']").removeClass("active");
		$(".tab-pane[id$='-panel']").removeClass("active");
		$(".tab-pane[id$='-sidebar']").removeClass("active");
		_gthis.currentState = com_mun_model_enumeration_F_$STATE.CREATE;
		_gthis.checkState();
	};
};
$hxClasses["com.mun.controller.controllerState.FolderState"] = com_mun_controller_controllerState_FolderState;
com_mun_controller_controllerState_FolderState.__name__ = ["com","mun","controller","controllerState","FolderState"];
com_mun_controller_controllerState_FolderState.__interfaces__ = [com_dongxiguo_continuation_Async];
com_mun_controller_controllerState_FolderState.prototype = {
	currentState: null
	,folder: null
	,circuitDiagram: null
	,updateCircuitDiagram: null
	,updateToolBar: null
	,updateCanvas: null
	,sideBar: null
	,controllerCanvasContext: null
	,canvas: null
	,context: null
	,updateCircuitDiagramMap: null
	,updateToolBarMap: null
	,updateCanvasMap: null
	,sideBarMap: null
	,controllerCanvasContextMap: null
	,canvasMap: null
	,contextMap: null
	,circuitDiagramArray: null
	,previouseCircuitDiagramArray: null
	,currentIndex: null
	,selectedPath: null
	,fileListCount: null
	,searchName: null
	,checkState: function() {
		var _gthis = this;
		var _g = this.currentState;
		switch(_g[1]) {
		case 0:
			this.currentState = com_mun_model_enumeration_F_$STATE.CREATE;
			this.checkState();
			this.currentState = com_mun_model_enumeration_F_$STATE.CURRENT;
			this.checkState();
			break;
		case 1:
			if(this.previouseCircuitDiagramArray.length != 0) {
				var cd = this.previouseCircuitDiagramArray.pop();
				while(cd == this.circuitDiagram) cd = this.previouseCircuitDiagramArray.pop();
				this.setToCurrentCircuitDiagram(cd.get_name());
				this.currentIndex = this.circuitDiagramArray.indexOf(this.circuitDiagram);
			}
			this.currentState = com_mun_model_enumeration_F_$STATE.CURRENT;
			this.checkState();
			break;
		case 2:
			if(this.circuitDiagram != null) {
				this.previouseCircuitDiagramArray.push(this.circuitDiagram);
			}
			this.createATotallyNewCircuitDiagram();
			var i = this.sideBarMap.iterator();
			while(i.hasNext()) {
				var i1 = i.next();
				var _g1 = 0;
				var _g11 = this.circuitDiagramArray;
				while(_g1 < _g11.length) {
					var j = _g11[_g1];
					++_g1;
					if(i1.getCircuitDiagram() != j) {
						i1.pushCompoundComponentToGateNameArray(j.get_name());
					}
				}
			}
			this.currentIndex = this.circuitDiagramArray.length - 1;
			$("#nameofcddiv").removeClass("has-error").removeClass("has-success");
			$("#nameofcdspan1").removeClass("glyphicon-remove").removeClass("glyphicon-ok");
			this.currentState = com_mun_model_enumeration_F_$STATE.CURRENT;
			this.checkState();
			break;
		case 3:
			this.currentIndex = this.circuitDiagramArray.indexOf(this.circuitDiagram);
			$(window.document.getElementById("nameofcd")).val(this.circuitDiagram.get_name());
			if(this.circuitDiagramArray.length <= 1) {
				this.setButtonDisability(window.document.getElementById("previouseCD"),true);
				this.setButtonDisability(window.document.getElementById("nextCD"),true);
			} else if(this.previouseCircuitDiagramArray.length == 0) {
				this.setButtonDisability(window.document.getElementById("previouseCD"),true);
				if(this.currentIndex < this.circuitDiagramArray.length - 1) {
					this.setButtonDisability(window.document.getElementById("nextCD"),false);
				} else {
					this.setButtonDisability(window.document.getElementById("nextCD"),true);
				}
			} else if(this.previouseCircuitDiagramArray.length > 0) {
				this.setButtonDisability(window.document.getElementById("previouseCD"),false);
				if(this.currentIndex < this.circuitDiagramArray.length - 1) {
					this.setButtonDisability(window.document.getElementById("nextCD"),false);
				} else {
					this.setButtonDisability(window.document.getElementById("nextCD"),true);
				}
			} else {
				this.setButtonDisability(window.document.getElementById("previouseCD"),false);
				this.setButtonDisability(window.document.getElementById("nextCD"),false);
			}
			this.updateCircuitDiagram.redrawCanvas();
			break;
		case 4:
			if(this.searchName != "" && this.searchName != null) {
				var html = "";
				var recordSearchResultList = [];
				if(this.circuitDiagramArray.length != 0) {
					var _g2 = 0;
					var _g12 = this.circuitDiagramArray;
					while(_g2 < _g12.length) {
						var i2 = _g12[_g2];
						++_g2;
						if(i2.get_name().toLowerCase().indexOf(this.searchName.toLowerCase()) != -1 || i2.get_name().toUpperCase().indexOf(this.searchName.toUpperCase()) != -1 || i2.get_name().indexOf(this.searchName) != -1) {
							html += "<li><a id=\"" + i2.get_name() + "-searchCircuitDiagram\"> " + i2.get_name() + "</a></li>";
							recordSearchResultList.push(i2);
						}
					}
				}
				window.document.getElementById("circuitDiagramHintList").innerHTML = html;
				window.document.getElementById("circuitDiagramHintList").style.display = "table";
				var _g3 = 0;
				while(_g3 < recordSearchResultList.length) {
					var i3 = recordSearchResultList[_g3];
					++_g3;
					window.document.getElementById(i3.get_name() + "-searchCircuitDiagram").onclick = function(event) {
						var id = event.target.id;
						id = id.substring(0,id.indexOf("-"));
						_gthis.previouseCircuitDiagramArray.push(_gthis.circuitDiagram);
						_gthis.setToCurrentCircuitDiagram(id);
						$("li[id$='-li']").removeClass("active");
						$(".tab-pane[id$='-panel']").removeClass("active");
						$(".tab-pane[id$='-sidebar']").removeClass("active");
						$(".tab-pane[id^='" + id + "']").addClass("active");
						$("li[id^='" + id + "']").addClass("active");
						var _gthis1 = _gthis.circuitDiagramArray;
						var tmp = _gthis.folder.findCircuitDiagram(id);
						_gthis.currentIndex = _gthis1.indexOf(tmp);
						window.document.getElementById("circuitDiagramHintList").style.display = "none";
						$(window.document.getElementById("search_circuitdiagram")).val("");
						_gthis.currentState = com_mun_model_enumeration_F_$STATE.CURRENT;
						_gthis.checkState();
					};
				}
			} else {
				window.document.getElementById("circuitDiagramHintList").style.display = "none";
			}
			this.currentState = com_mun_model_enumeration_F_$STATE.CURRENT;
			this.checkState();
			break;
		case 5:
			if(this.currentIndex < this.circuitDiagramArray.length - 1) {
				this.previouseCircuitDiagramArray.push(this.circuitDiagram);
				this.setToCurrentCircuitDiagram(this.circuitDiagramArray[this.currentIndex + 1].get_name());
				this.currentIndex += 1;
			}
			this.currentState = com_mun_model_enumeration_F_$STATE.CURRENT;
			this.checkState();
			break;
		}
	}
	,setToCurrentCircuitDiagram: function(name) {
		this.circuitDiagram = this.folder.findCircuitDiagram(name);
		this.updateCircuitDiagram = this.updateCircuitDiagramMap.h[this.circuitDiagram.__id__];
		this.updateToolBar.unbindEventListener();
		this.updateToolBar = this.updateToolBarMap.h[this.circuitDiagram.__id__];
		this.updateToolBar.bindEventListener();
		this.updateCanvas.unbindEventListener();
		this.updateCanvas = this.updateCanvasMap.h[this.circuitDiagram.__id__];
		this.updateCanvas.bindEventListener();
		this.sideBar = this.sideBarMap.h[this.circuitDiagram.__id__];
		this.controllerCanvasContext = this.controllerCanvasContextMap.h[this.circuitDiagram.__id__];
		this.controllerCanvasContext.boxTypeList();
	}
	,createATotallyNewCircuitDiagram: function() {
		var _gthis = this;
		this.circuitDiagram = this.folder.createNewCircuitDiagram();
		this.circuitDiagramArray.push(this.circuitDiagram);
		this.addNewCicruitDiagramTab();
		this.createNewCanvas(this.circuitDiagram.get_name());
		this.updateCircuitDiagram = new com_mun_controller_componentUpdate_UpdateCircuitDiagram(this.circuitDiagram,this.folder);
		this.circuitDiagram.set_commandManager(this.updateCircuitDiagram.get_commandManager());
		this.updateToolBar = new com_mun_controller_componentUpdate_UpdateToolBar(this.updateCircuitDiagram);
		this.updateCircuitDiagram.setUpdateToolBar(this.updateToolBar);
		this.updateCanvas = new com_mun_controller_componentUpdate_UpdateCanvas(this.circuitDiagram,this.canvas,this.context);
		this.updateCircuitDiagram.setUpdateCanvas(this.updateCanvas);
		this.sideBar = new com_mun_controller_controllerState_SideBar(this.updateCircuitDiagram,this.circuitDiagram,this.folder);
		this.controllerCanvasContext = new com_mun_controller_controllerState_ControllerCanvasContext(this.circuitDiagram,this.updateCircuitDiagram,this.sideBar,this.updateToolBar,this.canvas,this.updateCanvas);
		this.sideBar.setControllerCanvasContext(this.controllerCanvasContext);
		this.updateToolBar.setControllerCanvasContext(this.controllerCanvasContext);
		this.pushToMap();
		var url = window.location.href.split("?");
		var username = url[1].split("=")[1];
		$.ajax({ type : "post", url : "http://127.0.0.1:3000/app/users/showfolder?username=" + username + "&folder=" + this.selectedPath, contentType : "application/json", dataType : "text"}).done(function(text) {
			if(text != "fail") {
				var list = JSON.parse(text);
				var count = 1;
				var exp_r = new RegExp("\\s+","".split("u").join(""));
				while(true) {
					var tmp = _gthis.circuitDiagram.get_name().replace(exp_r,"_");
					if(!_gthis.checkexit(tmp,list)) {
						break;
					}
					var oldname = _gthis.circuitDiagram.get_name();
					var newName = "Untitled_" + count;
					if(_gthis.folder.changeCircuitDiagramName(_gthis.circuitDiagram.get_name(),"Untitled_" + count,_gthis.circuitDiagram)) {
						$("#nameofcddiv").removeClass("has-error").addClass("has-success");
						_gthis.changeNameForHTMLStuff(oldname,newName);
						var i = _gthis.sideBarMap.iterator();
						while(i.hasNext()) {
							var i1 = i.next();
							if(i1.isGateNameExist(oldname)) {
								i1.removeCompoundComponentToGateNameArray(oldname);
								i1.pushCompoundComponentToGateNameArray(newName);
							}
						}
					}
					++count;
				}
			}
		}).then(function() {
			var tmp1 = _gthis.circuitDiagram.get_name();
			_gthis.uploadCircuit(tmp1,_gthis.selectedPath,username);
		});
	}
	,load: function(cd) {
		$("li[id$='-li']").removeClass("active");
		$(".tab-pane[id$='-panel']").removeClass("active");
		$(".tab-pane[id$='-sidebar']").removeClass("active");
		this.currentState = com_mun_model_enumeration_F_$STATE.CREATE;
		if(this.circuitDiagram != null) {
			this.previouseCircuitDiagramArray.push(this.circuitDiagram);
		}
		this.circuitDiagram = this.folder.add(cd);
		this.circuitDiagramArray.push(this.circuitDiagram);
		this.addNewCicruitDiagramTab();
		this.createNewCanvas(this.circuitDiagram.get_name());
		this.updateCircuitDiagram = new com_mun_controller_componentUpdate_UpdateCircuitDiagram(this.circuitDiagram,this.folder);
		this.circuitDiagram.set_commandManager(this.updateCircuitDiagram.get_commandManager());
		this.updateToolBar = new com_mun_controller_componentUpdate_UpdateToolBar(this.updateCircuitDiagram);
		this.updateCircuitDiagram.setUpdateToolBar(this.updateToolBar);
		this.updateCanvas = new com_mun_controller_componentUpdate_UpdateCanvas(this.circuitDiagram,this.canvas,this.context);
		this.updateCircuitDiagram.setUpdateCanvas(this.updateCanvas);
		this.sideBar = new com_mun_controller_controllerState_SideBar(this.updateCircuitDiagram,this.circuitDiagram,this.folder);
		this.controllerCanvasContext = new com_mun_controller_controllerState_ControllerCanvasContext(this.circuitDiagram,this.updateCircuitDiagram,this.sideBar,this.updateToolBar,this.canvas,this.updateCanvas);
		this.sideBar.setControllerCanvasContext(this.controllerCanvasContext);
		this.updateToolBar.setControllerCanvasContext(this.controllerCanvasContext);
		this.pushToMap();
		var i = this.sideBarMap.iterator();
		while(i.hasNext()) {
			var i1 = i.next();
			var _g = 0;
			var _g1 = this.circuitDiagramArray;
			while(_g < _g1.length) {
				var j = _g1[_g];
				++_g;
				if(i1.getCircuitDiagram() != j) {
					i1.pushCompoundComponentToGateNameArray(j.get_name());
				}
			}
		}
		this.currentIndex = this.circuitDiagramArray.length - 1;
		$("#nameofcddiv").removeClass("has-error").removeClass("has-success");
		$("#nameofcdspan1").removeClass("glyphicon-remove").removeClass("glyphicon-ok");
		this.currentState = com_mun_model_enumeration_F_$STATE.CURRENT;
		this.checkState();
	}
	,changeNameForHTMLStuff: function(oldName,newName) {
		window.document.getElementById(oldName + "-a").innerHTML = "" + newName + "<span id=\"" + newName + "-close\" class=\"glyphicon glyphicon-remove\"></span>";
		this.registerCloseButton(newName);
		window.document.getElementById(oldName + "-a").setAttribute("href",newName + "-panel");
		window.document.getElementById(oldName + "-a").setAttribute("id",newName + "-a");
		window.document.getElementById(oldName + "-li").setAttribute("id",newName + "-li");
		window.document.getElementById(oldName + "-panel").setAttribute("id",newName + "-panel");
		window.document.getElementById("canvas-" + oldName).setAttribute("id","canvas-" + newName);
		window.document.getElementById("flist-" + oldName).setAttribute("id","flist-" + newName);
		window.document.getElementById(oldName + "-buttonGroupList").setAttribute("id",newName + "-buttonGroupList");
		window.document.getElementById("list-" + oldName).setAttribute("id","list-" + newName);
		window.document.getElementById(oldName + "-fileList").setAttribute("href","flist-" + newName);
		window.document.getElementById(oldName + "-fileList").setAttribute("id",newName + "-fileList");
		window.document.getElementById(oldName + "-buttonList").setAttribute("href","list-" + newName);
		window.document.getElementById(oldName + "-buttonList").setAttribute("id",newName + "-buttonList");
		window.document.getElementById(oldName + "-search").setAttribute("id",newName + "-search");
		window.document.getElementById(oldName + "-sidebar").setAttribute("id",newName + "-sidebar");
	}
	,addNewCicruitDiagramTab: function() {
		var _gthis = this;
		var liHtmlString = "<li role=\"presentation\" id=\"" + this.circuitDiagram.get_name() + "-li\" class=\"active\"><a id=\"" + this.circuitDiagram.get_name() + "-a\" href=\"#" + this.circuitDiagram.get_name() + "-panel\" data-toggle=\"tab\">" + this.circuitDiagram.get_name() + "<span id=\"" + this.circuitDiagram.get_name() + "-close\" class=\"glyphicon glyphicon-remove\"></span></a></li>";
		var canvasHTMLString = "<div class=\"tab-pane active\" id=\"" + this.circuitDiagram.get_name() + "-panel\"><canvas id=\"canvas-" + this.circuitDiagram.get_name() + "\" style=\"border: 1px solid;\">update your browser to enjoy canvas</canvas></div>";
		var lefdiveHTML = "<div class=\"tab-pane active\" id=\"" + this.circuitDiagram.get_name() + "-sidebar\"><div class=\"col-sm-12 col-md-12 col-lg-12\">\r\n        <form class=\"form-search\"><input class=\"input-medium search-query\" type=\"text\" id=\"" + this.circuitDiagram.get_name() + "-search\" placeholder=\"Search...\" style=\"width: 100%\"/>\r\n        </form></div><div class=\"tabbable col-sm-12 col-md-12 col-lg-12\"><ul class=\"nav nav-tabs\"><li role=\"presentation\" class=\"active\"><a href=\"#list-" + this.circuitDiagram.get_name() + "\" data-toggle=\"tab\" id=\"" + this.circuitDiagram.get_name() + "-buttonList\">Button List</a>\r\n        </li><li role=\"presentation\"><a href=\"#flist-" + this.circuitDiagram.get_name() + "\" data-toggle=\"tab\" id=\"" + this.circuitDiagram.get_name() + "-fileList\">File List</a></li></ul>\r\n        <div class=\"tab-content pre-scrollable\"><div class=\"tab-pane active\" id=\"list-" + this.circuitDiagram.get_name() + "\"><div id=\"" + this.circuitDiagram.get_name() + "-buttonGroupList\" class=\"btn-group-vertical\" role=\"group\" aria-label=\"...\" style=\"border: 1px solid\">\r\n        </div></div><div class=\"tab-pane\" id=\"flist-" + this.circuitDiagram.get_name() + "\"><p>Files</p></div></div></div></div>";
		$("#leftdivsidebartabcontent").append(lefdiveHTML);
		$("#circuitdiagramul").append(liHtmlString);
		$("#circuitdiagramcanvas").append(canvasHTMLString);
		window.document.getElementById(this.circuitDiagram.get_name() + "-li").onclick = function(event) {
			haxe_Serializer.USE_CACHE = true;
			haxe_Serializer.USE_ENUM_INDEX = true;
			var exp_r = new RegExp("\\s+","".split("u").join(""));
			var check = new EReg("^\\w*$","");
			var cdname = _gthis.circuitDiagram.get_name().replace(exp_r,"_");
			if(check.match(cdname)) {
				var tempList = [];
				var k = _gthis.circuitDiagram.get_componentIterator();
				while(k.hasNext()) {
					var k1 = k.next();
					if(k1.getNameOfTheComponentKind() == "CC") {
						var tmp = k1.get_componentKind().getInnerCircuitDiagram();
						tempList.push(tmp);
						(js_Boot.__cast(k1.get_componentKind() , com_mun_model_gates_CompoundComponent)).resetCircuit();
					}
				}
				var o = haxe_Serializer.run(_gthis.circuitDiagram);
				var tempJson = { circuit : o};
				$.ajax({ type : "post", url : "http://127.0.0.1:3000/app/users/update?id=" + _gthis.circuitDiagram.get_id(), contentType : "application/json", data : JSON.stringify(tempJson)}).done(function(text) {
					haxe_Log.trace(text,{ fileName : "FolderState.hx", lineNumber : 568, className : "com.mun.controller.controllerState.FolderState", methodName : "addNewCicruitDiagramTab"});
					if(text != "fail") {
						var count = 0;
						var k2 = _gthis.circuitDiagram.get_componentIterator();
						while(k2.hasNext()) {
							var k3 = k2.next();
							if(k3.getNameOfTheComponentKind() == "CC") {
								(js_Boot.__cast(k3.get_componentKind() , com_mun_model_gates_CompoundComponent)).loadCircuit(tempList[count]);
								++count;
							}
						}
					}
				}).then(function() {
					var id = event.target.id;
					id = id.substring(0,id.indexOf("-"));
					_gthis.previouseCircuitDiagramArray.push(_gthis.circuitDiagram);
					_gthis.setToCurrentCircuitDiagram(id);
					$(".tab-pane[id$='-panel']").removeClass("active");
					$(".tab-pane[id$='-sidebar']").removeClass("active");
					$(".tab-pane[id^='" + id + "-panel']").addClass("active");
					$(".tab-pane[id^='" + id + "-sidebar']").addClass("active");
					_gthis.currentIndex = _gthis.circuitDiagramArray.indexOf(_gthis.circuitDiagram);
					_gthis.currentState = com_mun_model_enumeration_F_$STATE.CURRENT;
					_gthis.checkState();
					haxe_Log.trace("switchtab",{ fileName : "FolderState.hx", lineNumber : 593, className : "com.mun.controller.controllerState.FolderState", methodName : "addNewCicruitDiagramTab"});
				});
			}
		};
		this.registerCloseButton(this.circuitDiagram.get_name());
	}
	,registerCloseButton: function(closeButtonNamePrefix) {
		var _gthis = this;
		window.document.getElementById(closeButtonNamePrefix + "-close").onclick = function(event) {
			var id = event.target.id;
			id = id.substring(0,id.indexOf("-"));
			window.document.getElementById(id + "-li").remove();
			window.document.getElementById(id + "-panel").remove();
			window.document.getElementById(id + "-sidebar").remove();
			_gthis.deleteCircuitDiagram(id);
			if(_gthis.circuitDiagramArray.length == 0) {
				_gthis.circuitDiagram = null;
				_gthis.currentState = com_mun_model_enumeration_F_$STATE.CREATE;
				_gthis.checkState();
			} else {
				_gthis.currentState = com_mun_model_enumeration_F_$STATE.PREVIOUS;
				_gthis.checkState();
				$("[id^='" + _gthis.circuitDiagram.get_name() + "']").addClass("active");
				_gthis.currentState = com_mun_model_enumeration_F_$STATE.CURRENT;
				_gthis.checkState();
			}
		};
	}
	,deleteCircuitDiagram: function(name) {
		var tempCd = this.folder.findCircuitDiagram(name);
		this.folder.removeCircuitDiagram(name);
		HxOverrides.remove(this.circuitDiagramArray,tempCd);
		this.sideBar.removeCompoundComponentToGateNameArray(name);
		this.sideBarMap.remove(tempCd);
		this.updateCircuitDiagramMap.remove(this.circuitDiagram);
		this.updateToolBarMap.remove(this.circuitDiagram);
		this.updateCanvasMap.remove(this.circuitDiagram);
		this.sideBarMap.remove(this.circuitDiagram);
		this.controllerCanvasContextMap.remove(this.circuitDiagram);
		this.canvasMap.remove(this.circuitDiagram);
		this.contextMap.remove(this.circuitDiagram);
		HxOverrides.remove(this.previouseCircuitDiagramArray,tempCd);
	}
	,createNewCanvas: function(name) {
		var canvasElement = window.document.getElementById("canvas-" + this.circuitDiagram.get_name());
		var canvasContext = canvasElement.getContext("2d");
		var backingStoreRatioDynamic = Reflect.field(canvasElement,"webKitBackingStorePixelRatio");
		if(backingStoreRatioDynamic == null) {
			backingStoreRatioDynamic = Reflect.field(canvasElement,"mozBackingStorePixelRatio");
		}
		if(backingStoreRatioDynamic == null) {
			backingStoreRatioDynamic = Reflect.field(canvasElement,"msBackingStorePixelRatio");
		}
		if(backingStoreRatioDynamic == null) {
			backingStoreRatioDynamic = Reflect.field(canvasElement,"oBackingStorePixelRatio");
		}
		if(backingStoreRatioDynamic == null) {
			backingStoreRatioDynamic = Reflect.field(canvasElement,"backingStorePixelRatio");
		}
		var backingStoreRatio = backingStoreRatioDynamic == null ? 1.0 : js_Boot.__cast(backingStoreRatioDynamic , Float);
		var pixelRatio = window.devicePixelRatio / backingStoreRatio;
		var oldWidth = window.innerWidth;
		var oldHeight = window.innerHeight;
		canvasElement.width = oldWidth * pixelRatio * 0.62;
		canvasElement.height = oldHeight * pixelRatio * 0.62;
		canvasElement.style.width = oldWidth * 0.62 + "px";
		canvasElement.style.height = oldHeight * 0.62 + "px";
		canvasContext.scale(pixelRatio,pixelRatio);
		com_mun_global_Constant.PIXELRATIO = pixelRatio;
		this.canvas = canvasElement;
		this.context = canvasContext;
		window.document.getElementById("left").style.height = oldHeight * 0.62 + "px";
		window.document.getElementById("right").style.height = oldHeight * 0.62 + "px";
	}
	,pushToMap: function() {
		this.updateCircuitDiagramMap.set(this.circuitDiagram,this.updateCircuitDiagram);
		this.updateToolBarMap.set(this.circuitDiagram,this.updateToolBar);
		this.updateCanvasMap.set(this.circuitDiagram,this.updateCanvas);
		this.sideBarMap.set(this.circuitDiagram,this.sideBar);
		this.controllerCanvasContextMap.set(this.circuitDiagram,this.controllerCanvasContext);
		this.canvasMap.set(this.circuitDiagram,this.canvas);
		this.contextMap.set(this.circuitDiagram,this.context);
	}
	,setButtonDisability: function(button,disable) {
		if(disable) {
			button.setAttribute("disabled","disabled");
		} else {
			$(button).removeAttr("disabled");
		}
	}
	,newCollapse: function(pathArray) {
		var _gthis = this;
		var path = "";
		var _g = 0;
		while(_g < pathArray.length) {
			var t = pathArray[_g];
			++_g;
			path = path + t + "/";
		}
		path = path.substring(0,path.length - 1);
		var url = window.location.href.split("?");
		var username = url[1].split("=")[1];
		$.ajax({ type : "post", url : "http://127.0.0.1:3000/app/users/showfolder?username=" + username + "&folder=" + path, contentType : "application/json", dataType : "text"}).done(function(text) {
			if(text != "fail") {
				var list = JSON.parse(text);
				if(list.length != 0) {
					var _g1 = 0;
					while(_g1 < list.length) {
						var i = [list[_g1]];
						++_g1;
						var tempArray = [[]];
						var _g11 = 0;
						while(_g11 < pathArray.length) {
							var k = pathArray[_g11];
							++_g11;
							tempArray[0].push(k);
						}
						var tempString = [""];
						var _g12 = 0;
						while(_g12 < tempArray[0].length) {
							var i1 = tempArray[0][_g12];
							++_g12;
							tempString[0] += i1;
						}
						$("#Fieldpath_" + tempString[0]).append("<a data-toggle=\"collapse\" href=\"#FileCollapseList" + (_gthis.fileListCount == null ? "null" : "" + _gthis.fileListCount) + "\" id=\"path_" + tempString[0] + i[0].fileName + "\">" + i[0].fileName + "</a>");
						$("#Fieldpath_" + tempString[0]).append("<div id=\"FileCollapseList" + (_gthis.fileListCount == null ? "null" : "" + _gthis.fileListCount) + "\" class=\"panel-collapse collapse out\" >\r\n                            <div class=\"container-fluid\" id=\"Fieldpath_" + tempString[0] + i[0].fileName + "\">\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div><br>");
						_gthis.fileListCount++;
						tempArray[0].push(i[0].fileName);
						if(i[0].fileType == "Folder") {
							$("#path_" + tempString[0] + i[0].fileName).html("<img src=\"/client/src/icon/folder.png\">" + i[0].fileName);
							window.document.getElementById("path_" + tempString[0] + i[0].fileName).onclick = (function(tempString1,tempArray1,i2) {
								return function() {
									$("#downloadFile").hide();
									$("#versionList").hide();
									$("#FolderNameLabel").show();
									$("#createFolder").show();
									$("#uploadCircuit").show();
									$("#deleteFile").show();
									$("#deleteBox").show();
									$("#Fieldpath_" + tempString1[0] + i2[0].fileName).html("");
									window.document.getElementById("createFolder").onclick = (function(i3) {
										return function() {
											if(window.document.getElementById("FolderNameLabel").itemValue != "") {
												var tmp = path + "/" + i3[0].fileName + "/" + Std.string($("#newFolderName").val());
												_gthis.createFolder(username,tmp);
											}
										};
									})(i2);
									$("#selectCircuit").html("");
									var _g13 = 0;
									var _g2 = _gthis.circuitDiagramArray;
									while(_g13 < _g2.length) {
										var i4 = _g2[_g13];
										++_g13;
										$("#selectCircuit").append("<option>" + i4.get_name() + "</option>");
									}
									window.document.getElementById("uploadCD").onclick = (function(i5) {
										return function() {
											var tmp1 = Std.string($("#selectCircuit").val());
											_gthis.uploadCircuit(tmp1,path + "/" + i5[0].fileName,username);
										};
									})(i2);
									window.document.getElementById("deleteFile").onclick = (function(tempString2,i6) {
										return function() {
											_gthis["delete"](i6[0].id);
											window.document.getElementById("path_" + tempString2[0]).click();
										};
									})(tempString1,i2);
									_gthis.newCollapse(tempArray1[0]);
								};
							})(tempString,tempArray,i);
						} else if(i[0].fileType == "Circuit") {
							$("#path_" + tempString[0] + i[0].fileName).html("<img src=\"/client/src/icon/circuit.png\">" + i[0].fileName);
							window.document.getElementById("path_" + tempString[0] + i[0].fileName).onclick = (function(tempString3,i7) {
								return function() {
									$("#Fieldpath_" + tempString3[0] + i7[0].fileName).html("");
									$("#FolderNameLabel").hide();
									$("#createFolder").hide();
									$("#uploadCircuit").hide();
									$("#deleteFile").show();
									$("#deleteBox").show();
									_gthis.selectVersion(i7[0].id);
									window.document.getElementById("deleteFile").onclick = (function(tempString4,i8) {
										return function() {
											_gthis["delete"](i8[0].id);
											window.document.getElementById("path_" + tempString4[0]).click();
										};
									})(tempString3,i7);
								};
							})(tempString,i);
						}
					}
				}
			}
		});
	}
	,currentnewCollapse: function(pathArray,CurrentfileListCount) {
		var _gthis = this;
		var path = "";
		var _g = 0;
		while(_g < pathArray.length) {
			var t = pathArray[_g];
			++_g;
			path = path + t + "/";
		}
		path = path.substring(0,path.length - 1);
		var url = window.location.href.split("?");
		var username = url[1].split("=")[1];
		$.ajax({ type : "post", url : "http://127.0.0.1:3000/app/users/showfolder?username=" + username + "&folder=" + path, contentType : "application/json", dataType : "text"}).done(function(text) {
			if(text != "fail") {
				var list = JSON.parse(text);
				if(list.length != 0) {
					var _g1 = 0;
					while(_g1 < list.length) {
						var i = [list[_g1]];
						++_g1;
						var tempArray = [[]];
						var _g11 = 0;
						while(_g11 < pathArray.length) {
							var k = pathArray[_g11];
							++_g11;
							tempArray[0].push(k);
						}
						var tempString = [""];
						var _g12 = 0;
						while(_g12 < tempArray[0].length) {
							var i1 = tempArray[0][_g12];
							++_g12;
							tempString[0] += i1;
						}
						if(i[0].fileType == "Folder") {
							$("#CurrentFieldpath_" + tempString[0]).append("<a data-toggle=\"collapse\" href=\"#CurrentFileCollapseList" + (CurrentfileListCount == null ? "null" : "" + CurrentfileListCount) + "\" id=\"Currentpath_" + tempString[0] + i[0].fileName + "\">" + i[0].fileName + "</a>");
							$("#CurrentFieldpath_" + tempString[0]).append("<div id=\"CurrentFileCollapseList" + (CurrentfileListCount == null ? "null" : "" + CurrentfileListCount) + "\" class=\"panel-collapse collapse out\" >\r\n                            <div class=\"container-fluid\" id=\"CurrentFieldpath_" + tempString[0] + i[0].fileName + "\">\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div><br>");
							CurrentfileListCount += 1;
							tempArray[0].push(i[0].fileName);
							$("#Currentpath_" + tempString[0] + i[0].fileName).html("<img src=\"/client/src/icon/folder.png\">" + i[0].fileName);
							window.document.getElementById("Currentpath_" + tempString[0] + i[0].fileName).onclick = (function(tempString1,tempArray1,i2) {
								return function() {
									$("#CurrentFieldpath_" + tempString1[0] + i2[0].fileName).html("");
									$("#CurrentPathLabel").html(path.substring(5,path.length) + "/" + i2[0].fileName);
									_gthis.selectedPath = path + "/" + i2[0].fileName;
									_gthis.currentnewCollapse(tempArray1[0],CurrentfileListCount);
								};
							})(tempString,tempArray,i);
						}
					}
				}
			}
		});
	}
	,createFolder: function(username,path) {
		haxe_Log.trace(path,{ fileName : "FolderState.hx", lineNumber : 858, className : "com.mun.controller.controllerState.FolderState", methodName : "createFolder"});
		$.ajax({ type : "post", url : "http://127.0.0.1:3000/app/users/folder?username=" + username + "&new=true&folder=" + path, contentType : "application/json", dataType : "text"}).done(function(text) {
		});
	}
	,selectVersion: function(id) {
		var _gthis = this;
		$.ajax({ type : "post", url : "http://127.0.0.1:3000/app/users/showversion?id=" + id, contentType : "application/json", dataType : "text"}).done(function(text) {
			if(text != "fail") {
				$("#selectList").html("");
				var count = Std.parseInt(text);
				var i = 0;
				while(i < count) {
					$("#selectList").append("<option>" + (i == null ? "null" : "" + i) + "</option>");
					++i;
				}
				$("#downloadFile").show();
				window.document.getElementById("downloadFile").onclick = function() {
					var tmp = Std.string($("#selectList").val());
					_gthis.downloadCircuit(id,tmp);
				};
				$("#versionList").show();
			}
		});
	}
	,downloadCircuit: function(id,version) {
		var _gthis = this;
		$.ajax({ type : "post", url : "http://127.0.0.1:3000/app/users/download?id=" + id + "&version=" + version, contentType : "application/json", dataType : "text"}).done(function(text) {
			var cd = haxe_Unserializer.run(text);
			var flag = true;
			var _g = 0;
			var _g1 = _gthis.circuitDiagramArray;
			while(_g < _g1.length) {
				var i = _g1[_g];
				++_g;
				if(i.get_name() == cd.get_name()) {
					flag = false;
				}
			}
			if(flag == true) {
				_gthis.downloadSubCircuit(cd);
				_gthis.load(cd);
			} else {
				haxe_Log.trace("exited on canvas",{ fileName : "FolderState.hx", lineNumber : 917, className : "com.mun.controller.controllerState.FolderState", methodName : "downloadCircuit"});
			}
		});
	}
	,downloadSubCircuit: function(cd) {
		var _gthis = this;
		var i = cd.get_componentIterator();
		while(i.hasNext()) {
			var i1 = i.next();
			var i2 = [i1];
			if(i2[0].getNameOfTheComponentKind() == "CC") {
				haxe_Log.trace(i2[0].get_id(),{ fileName : "FolderState.hx", lineNumber : 925, className : "com.mun.controller.controllerState.FolderState", methodName : "downloadSubCircuit"});
				if(i2[0].get_id() != "") {
					$.ajax({ type : "post", url : "http://127.0.0.1:3000/app/users/downloadSub?id=" + i2[0].get_id(), contentType : "application/json", dataType : "text"}).done((function(i3) {
						return function(text) {
							if(text != "fail") {
								var tempcd = haxe_Unserializer.run(text);
								if(_gthis.downloadSubCircuit(tempcd) == true) {
									(js_Boot.__cast(i3[0].get_componentKind() , com_mun_model_gates_CompoundComponent)).loadCircuit(tempcd);
									_gthis.currentState = com_mun_model_enumeration_F_$STATE.CURRENT;
									_gthis.checkState();
									_gthis.updateToolBar = new com_mun_controller_componentUpdate_UpdateToolBar(_gthis.updateCircuitDiagram);
									_gthis.updateCircuitDiagram.setUpdateToolBar(_gthis.updateToolBar);
									_gthis.updateCanvas = new com_mun_controller_componentUpdate_UpdateCanvas(_gthis.circuitDiagram,_gthis.canvas,_gthis.context);
									_gthis.updateCircuitDiagram.setUpdateCanvas(_gthis.updateCanvas);
									_gthis.sideBar = new com_mun_controller_controllerState_SideBar(_gthis.updateCircuitDiagram,_gthis.circuitDiagram,_gthis.folder);
									_gthis.controllerCanvasContext = new com_mun_controller_controllerState_ControllerCanvasContext(_gthis.circuitDiagram,_gthis.updateCircuitDiagram,_gthis.sideBar,_gthis.updateToolBar,_gthis.canvas,_gthis.updateCanvas);
									_gthis.sideBar.setControllerCanvasContext(_gthis.controllerCanvasContext);
									_gthis.updateToolBar.setControllerCanvasContext(_gthis.controllerCanvasContext);
								}
							} else {
								HxOverrides.remove(cd.get_componentArray(),i3[0]);
							}
						};
					})(i2));
				} else {
					HxOverrides.remove(cd.get_componentArray(),i2[0]);
				}
			}
		}
		return true;
	}
	,uploadCircuit: function(name,path,username) {
		var _g = 0;
		var _g1 = this.circuitDiagramArray;
		while(_g < _g1.length) {
			var i = [_g1[_g]];
			++_g;
			if(i[0].get_name() == name) {
				haxe_Serializer.USE_CACHE = true;
				haxe_Serializer.USE_ENUM_INDEX = true;
				var exp_r = new RegExp("\\s+","".split("u").join(""));
				var check = new EReg("^\\w*$","");
				var cdname = i[0].get_name().replace(exp_r,"_");
				if(check.match(cdname)) {
					var tempList = [[]];
					var k = i[0].get_componentIterator();
					while(k.hasNext()) {
						var k1 = k.next();
						if(k1.getNameOfTheComponentKind() == "CC") {
							var tmp = k1.get_componentKind().getInnerCircuitDiagram();
							tempList[0].push(tmp);
							(js_Boot.__cast(k1.get_componentKind() , com_mun_model_gates_CompoundComponent)).resetCircuit();
						}
					}
					var o = haxe_Serializer.run(i[0]);
					var tempJson = { circuit : o};
					$.ajax({ type : "post", url : "http://127.0.0.1:3000/app/users/folder?username=" + username + "&new=false&folder=" + path + "&fileName=" + cdname, contentType : "application/json", data : JSON.stringify(tempJson)}).done((function(tempList1,i1) {
						return function(text) {
							if(text != "fail") {
								var count = 0;
								var k2 = i1[0].get_componentIterator();
								while(k2.hasNext()) {
									var k3 = k2.next();
									if(k3.getNameOfTheComponentKind() == "CC") {
										(js_Boot.__cast(k3.get_componentKind() , com_mun_model_gates_CompoundComponent)).loadCircuit(tempList1[0][count]);
										++count;
									}
								}
								i1[0].set_id(text);
							}
						};
					})(tempList,i));
				}
			}
		}
	}
	,uploadSubCircuit: function(cd,path,username,__return) {
		var i = cd.get_componentIterator();
		while(i.hasNext()) {
			var i1 = i.next();
			var i2 = [i1];
			if(i2[0].getNameOfTheComponentKind() == "CC") {
				if(i2[0].get_id() == "") {
					this.uploadSubCircuit(i2[0].get_componentKind().getInnerCircuitDiagram(),path,username,(function() {
						return function() {
						};
					})());
					haxe_Serializer.USE_CACHE = true;
					haxe_Serializer.USE_ENUM_INDEX = true;
					var o = haxe_Serializer.run(i2[0].get_componentKind().getInnerCircuitDiagram());
					var tempJson = { circuit : o};
					var exp_r = new RegExp("\\s+","".split("u").join(""));
					var check = new EReg("^\\w*$","");
					var cdname = i2[0].get_componentKind().getInnerCircuitDiagram().get_name().replace(exp_r,"_");
					cdname = cdname + "_SubCircuitOf_" + cd.get_name().replace(exp_r,"_");
					if(check.match(cdname)) {
						$.ajax({ type : "post", url : "http://127.0.0.1:3000/app/users/folder?username=" + username + "&new=false&folder=" + path + "&fileName=" + cdname, contentType : "application/json", data : JSON.stringify(tempJson)}).done((function(i3) {
							return function(text) {
								haxe_Log.trace(text,{ fileName : "FolderState.hx", lineNumber : 1028, className : "com.mun.controller.controllerState.FolderState", methodName : "uploadSubCircuit"});
								if(text != "fail") {
									i3[0].set_id(text);
								}
							};
						})(i2));
					}
				}
			}
		}
		__return();
	}
	,'delete': function(id) {
		$.ajax({ type : "post", url : "http://127.0.0.1:3000/app/users/delete?id=" + id, contentType : "application/json"}).done(function(text) {
			haxe_Log.trace(text,{ fileName : "FolderState.hx", lineNumber : 1047, className : "com.mun.controller.controllerState.FolderState", methodName : "delete"});
		});
	}
	,checkexit: function(cdname,list) {
		var _g = 0;
		while(_g < list.length) {
			var i = list[_g];
			++_g;
			if(cdname == i.fileName) {
				return true;
			}
		}
		return false;
	}
	,__class__: com_mun_controller_controllerState_FolderState
};
var com_mun_controller_controllerState_KeyState = function() {
	this.keyState = com_mun_model_enumeration_K_$STATE.IDLE;
	window.document.addEventListener("keydown",$bind(this,this.keyDown),false);
	window.document.addEventListener("keyup",$bind(this,this.keyUp),false);
};
$hxClasses["com.mun.controller.controllerState.KeyState"] = com_mun_controller_controllerState_KeyState;
com_mun_controller_controllerState_KeyState.__name__ = ["com","mun","controller","controllerState","KeyState"];
com_mun_controller_controllerState_KeyState.prototype = {
	keyState: null
	,key: null
	,keyDown: function(event) {
		this.keyState = com_mun_model_enumeration_K_$STATE.KEY_DOWN;
		if(event.altKey) {
			this.key = com_mun_model_enumeration_KEY.ALT_KEY;
		}
	}
	,keyUp: function(event) {
		this.keyState = com_mun_model_enumeration_K_$STATE.KEY_UP;
		if(event.altKey) {
			this.key = com_mun_model_enumeration_KEY.ALT_KEY;
		}
	}
	,get_keyState: function() {
		return this.keyState;
	}
	,get_key: function() {
		return this.key;
	}
	,__class__: com_mun_controller_controllerState_KeyState
};
var com_mun_controller_controllerState_SideBar = function(updateCircuitDiagram,circuitDiagram,folder) {
	this.updateCircuitDiagram = updateCircuitDiagram;
	this.circuitDiagram = circuitDiagram;
	this.folder = folder;
	this.gateNameArray = [];
	this.buttonGroupList = window.document.getElementById(circuitDiagram.get_name() + "-buttonGroupList");
	this.gateNameArray.push("AND");
	this.gateNameArray.push("FlipFlop");
	this.gateNameArray.push("Input");
	this.gateNameArray.push("MUX");
	this.gateNameArray.push("NAND");
	this.gateNameArray.push("NOR");
	this.gateNameArray.push("NOT");
	this.gateNameArray.push("OR");
	this.gateNameArray.push("Output");
	this.gateNameArray.push("XOR");
	this.initialButtonGroupList();
	this.bandingOnClick();
	this.searchElement = window.document.getElementById(circuitDiagram.get_name() + "-search");
	this.searchElement.onkeyup = $bind(this,this.search);
	window.document.getElementById(circuitDiagram.get_name() + "-buttonList").onclick = $bind(this,this.buttonList);
	window.document.getElementById(circuitDiagram.get_name() + "-fileList").onclick = $bind(this,this.fileList);
	this.buttonOrFileList = true;
};
$hxClasses["com.mun.controller.controllerState.SideBar"] = com_mun_controller_controllerState_SideBar;
com_mun_controller_controllerState_SideBar.__name__ = ["com","mun","controller","controllerState","SideBar"];
com_mun_controller_controllerState_SideBar.prototype = {
	updateCircuitDiagram: null
	,component: null
	,controllerCanavasContext: null
	,buttonOrFileList: null
	,circuitDiagram: null
	,folder: null
	,searchElement: null
	,buttonGroupList: null
	,gateNameArray: null
	,pushCompoundComponentToGateNameArray: function(name) {
		if(this.gateNameArray.indexOf(name) == -1) {
			this.gateNameArray.push(name);
			this.resetSideBarButtons();
		}
	}
	,removeCompoundComponentToGateNameArray: function(name) {
		HxOverrides.remove(this.gateNameArray,name);
		this.resetSideBarButtons();
	}
	,isGateNameExist: function(name) {
		if(this.gateNameArray.indexOf(name) != -1) {
			return true;
		} else {
			return false;
		}
	}
	,bandingOnClick: function() {
		var _gthis = this;
		var _g = 0;
		var _g1 = this.gateNameArray;
		while(_g < _g1.length) {
			var i = _g1[_g];
			++_g;
			if(i == "AND" || i == "OR" || i == "NOT" || i == "NOR" || i == "NAND" || i == "XOR" || i == "MUX" || i == "FlipFlop" || i == "Input" || i == "Output") {
				if(window.document.getElementById(this.circuitDiagram.get_name() + "-" + i) != null) {
					window.document.getElementById(this.circuitDiagram.get_name() + "-" + i).onmousedown = function(event) {
						var id = event.target.id;
						id = id.substring(id.indexOf("-") + 1,id.length);
						_gthis.component = _gthis.updateCircuitDiagram.createComponent(id,250,50,40 * com_mun_global_Constant.PIXELRATIO,40 * com_mun_global_Constant.PIXELRATIO,com_mun_model_enumeration_ORIENTATION.EAST,2);
						_gthis.controllerCanavasContext.set_controllerState(com_mun_model_enumeration_C_$STATE.CREATE_COMPONENT);
					};
				}
			} else if(window.document.getElementById(this.circuitDiagram.get_name() + "-" + i) != null) {
				window.document.getElementById(this.circuitDiagram.get_name() + "-" + i).onmousedown = function(event1) {
					var id1 = event1.target.id;
					id1 = id1.substring(id1.indexOf("-") + 1,id1.length);
					var _gthis1 = _gthis.updateCircuitDiagram;
					var tmp = 100 * com_mun_global_Constant.PIXELRATIO;
					var tmp1 = 100 * com_mun_global_Constant.PIXELRATIO;
					var tmp2 = _gthis.folder.findCircuitDiagram(id1);
					_gthis.component = _gthis1.createCompoundComponent(id1,250,50,tmp,tmp1,com_mun_model_enumeration_ORIENTATION.EAST,2,tmp2);
					_gthis.controllerCanavasContext.set_controllerState(com_mun_model_enumeration_C_$STATE.CREATE_COMPONENT);
				};
			}
		}
	}
	,getCircuitDiagram: function() {
		return this.circuitDiagram;
	}
	,setControllerCanvasContext: function(controllerCanvasContext) {
		this.controllerCanavasContext = controllerCanvasContext;
	}
	,getComponent: function() {
		return this.component;
	}
	,compoundComponentOnClick: function() {
	}
	,resetSideBarButtons: function() {
		this.initialButtonGroupList();
		var _g = 0;
		var _g1 = this.gateNameArray;
		while(_g < _g1.length) {
			var i = _g1[_g];
			++_g;
			if(i != "AND" && i != "OR" && i != "NOT" && i != "NOR" && i != "NAND" && i != "XOR" && i != "MUX" && i != "FlipFlop" && i != "Input" && i != "Output") {
				var addFlag = true;
				var circuitDiagramForCheck = this.folder.findCircuitDiagram(i);
				var j = circuitDiagramForCheck.get_componentIterator();
				while(j.hasNext()) {
					var j1 = j.next();
					if(j1.getNameOfTheComponentKind() == "CC" && j1.get_componentKind().getInnerCircuitDiagram().get_name() == i) {
						addFlag = false;
					}
				}
				if(addFlag) {
					this.appendButtonGroupList(i);
				}
			}
		}
		this.bandingOnClick();
	}
	,search: function() {
		var value = $(this.searchElement).val();
		if(value.length != 0) {
			var htmlString = "";
			var _g = 0;
			var _g1 = this.gateNameArray;
			while(_g < _g1.length) {
				var i = _g1[_g];
				++_g;
				if(i.indexOf(value.toLowerCase()) != -1 || i.indexOf(value.toUpperCase()) != -1 || i == value) {
					htmlString += "<button id=\"" + this.circuitDiagram.get_name() + "-" + i + "\" type=\"button\" class=\"btn btn-default active\">" + i + "</button>";
				}
			}
			this.buttonGroupList.innerHTML = htmlString;
			this.bandingOnClick();
		} else {
			this.initialButtonGroupList();
			this.bandingOnClick();
		}
	}
	,buttonList: function() {
		this.buttonOrFileList = true;
	}
	,fileList: function() {
		this.buttonOrFileList = false;
	}
	,initialButtonGroupList: function() {
		var tmp = "<button id=\"" + this.circuitDiagram.get_name() + "-AND\" type=\"button\" class=\"btn btn-default active\">AND</button>\r\n            <button id=\"" + this.circuitDiagram.get_name() + "-OR\" type=\"button\" class=\"btn btn-default active\">OR</button>\r\n            <button id=\"" + this.circuitDiagram.get_name() + "-NOT\" type=\"button\" class=\"btn btn-default active\">NOT</button>\r\n            <button id=\"" + this.circuitDiagram.get_name() + "-NOR\" type=\"button\" class=\"btn btn-default active\">NOR</button>\r\n            <button id=\"" + this.circuitDiagram.get_name() + "-NAND\" type=\"button\" class=\"btn btn-default active\">NAND</button>\r\n            <button id=\"" + this.circuitDiagram.get_name() + "-XOR\" type=\"button\" class=\"btn btn-default active\">XOR</button>\r\n            <button id=\"" + this.circuitDiagram.get_name() + "-MUX\" type=\"button\" class=\"btn btn-default active\">MUX</button>\r\n            <button id=\"" + this.circuitDiagram.get_name() + "-FlipFlop\" type=\"button\" class=\"btn btn-default active\">FlipFlop</button>\r\n            <button id=\"" + this.circuitDiagram.get_name() + "-Input\" type=\"button\" class=\"btn btn-default active\">INPUT</button>\r\n            <button id=\"" + this.circuitDiagram.get_name();
		this.buttonGroupList.innerHTML = tmp + "-Output\" type=\"button\" class=\"btn btn-default active\">OUTPUT</button>";
	}
	,appendButtonGroupList: function(name) {
		$(this.buttonGroupList).append("<button id=\"" + this.circuitDiagram.get_name() + "-" + name + "\" type=\"button\" class=\"btn btn-default active\">" + name + "</button>");
	}
	,__class__: com_mun_controller_controllerState_SideBar
};
var com_mun_global_Constant = function() {
};
$hxClasses["com.mun.global.Constant"] = com_mun_global_Constant;
com_mun_global_Constant.__name__ = ["com","mun","global","Constant"];
com_mun_global_Constant.prototype = {
	__class__: com_mun_global_Constant
};
var com_mun_model_attribute_AttrValue = function() { };
$hxClasses["com.mun.model.attribute.AttrValue"] = com_mun_model_attribute_AttrValue;
com_mun_model_attribute_AttrValue.__name__ = ["com","mun","model","attribute","AttrValue"];
com_mun_model_attribute_AttrValue.prototype = {
	getvalue: null
	,getType: null
	,__class__: com_mun_model_attribute_AttrValue
};
var com_mun_model_attribute_Attribute = function() { };
$hxClasses["com.mun.model.attribute.Attribute"] = com_mun_model_attribute_Attribute;
com_mun_model_attribute_Attribute.__name__ = ["com","mun","model","attribute","Attribute"];
com_mun_model_attribute_Attribute.prototype = {
	getdefaultvalue: null
	,getAttrType: null
	,getName: null
	,__class__: com_mun_model_attribute_Attribute
};
var com_mun_model_attribute_Pair = function() { };
$hxClasses["com.mun.model.attribute.Pair"] = com_mun_model_attribute_Pair;
com_mun_model_attribute_Pair.__name__ = ["com","mun","model","attribute","Pair"];
com_mun_model_attribute_Pair.prototype = {
	getAttr: null
	,getAttrValue: null
	,canupdate: null
	,update: null
	,__class__: com_mun_model_attribute_Pair
};
var com_mun_model_attribute_DelayPair = function(da,dv) {
	this.delayAttr = da;
	this.delayValue = js_Boot.__cast(dv , com_mun_model_attribute_IntValue);
};
$hxClasses["com.mun.model.attribute.DelayPair"] = com_mun_model_attribute_DelayPair;
com_mun_model_attribute_DelayPair.__name__ = ["com","mun","model","attribute","DelayPair"];
com_mun_model_attribute_DelayPair.__interfaces__ = [com_mun_model_attribute_Pair];
com_mun_model_attribute_DelayPair.prototype = {
	delayAttr: null
	,delayValue: null
	,getAttr: function() {
		return this.delayAttr;
	}
	,getAttrValue: function() {
		return this.delayValue;
	}
	,canupdate: function(c,n) {
		if(!js_Boot.__instanceof(n,com_mun_model_attribute_IntValue)) {
			return false;
		}
		if(n.getvalue() < 0 || n.getvalue() == null) {
			return false;
		} else {
			return true;
		}
	}
	,update: function(c,n) {
		if(this.canupdate(c,n) == true) {
			this.delayValue = js_Boot.__cast(n , com_mun_model_attribute_IntValue);
			return true;
		}
		return false;
	}
	,__class__: com_mun_model_attribute_DelayPair
};
var com_mun_model_attribute_IntAttr = function(s) {
	this.defaultdelay = new com_mun_model_attribute_IntValue(0);
	this.name = "delay";
	this.name = s;
	this.attrType = com_mun_model_enumeration_AttrType.INT;
};
$hxClasses["com.mun.model.attribute.IntAttr"] = com_mun_model_attribute_IntAttr;
com_mun_model_attribute_IntAttr.__name__ = ["com","mun","model","attribute","IntAttr"];
com_mun_model_attribute_IntAttr.__interfaces__ = [com_mun_model_attribute_Attribute];
com_mun_model_attribute_IntAttr.prototype = {
	name: null
	,attrType: null
	,defaultdelay: null
	,getName: function() {
		return this.name;
	}
	,getdefaultvalue: function() {
		return this.defaultdelay;
	}
	,getAttrType: function() {
		return this.attrType;
	}
	,__class__: com_mun_model_attribute_IntAttr
};
var com_mun_model_attribute_IntValue = function(d) {
	this.delay = d;
	this.attrType = com_mun_model_enumeration_AttrType.INT;
};
$hxClasses["com.mun.model.attribute.IntValue"] = com_mun_model_attribute_IntValue;
com_mun_model_attribute_IntValue.__name__ = ["com","mun","model","attribute","IntValue"];
com_mun_model_attribute_IntValue.__interfaces__ = [com_mun_model_attribute_AttrValue];
com_mun_model_attribute_IntValue.prototype = {
	delay: null
	,attrType: null
	,getvalue: function() {
		return this.delay;
	}
	,getType: function() {
		return this.attrType;
	}
	,__class__: com_mun_model_attribute_IntValue
};
var com_mun_model_attribute_NamePair = function(na,nv) {
	this.nameAttr = na;
	this.nameValue = js_Boot.__cast(nv , com_mun_model_attribute_StringValue);
};
$hxClasses["com.mun.model.attribute.NamePair"] = com_mun_model_attribute_NamePair;
com_mun_model_attribute_NamePair.__name__ = ["com","mun","model","attribute","NamePair"];
com_mun_model_attribute_NamePair.__interfaces__ = [com_mun_model_attribute_Pair];
com_mun_model_attribute_NamePair.prototype = {
	nameAttr: null
	,nameValue: null
	,getAttr: function() {
		return this.nameAttr;
	}
	,getAttrValue: function() {
		return this.nameValue;
	}
	,canupdate: function(c,n) {
		return true;
	}
	,update: function(c,n) {
		if(this.canupdate(c,n) == true) {
			this.nameValue = js_Boot.__cast(n , com_mun_model_attribute_StringValue);
			return true;
		}
		return false;
	}
	,__class__: com_mun_model_attribute_NamePair
};
var com_mun_model_attribute_OrientationAttr = function() {
	this.name = "orientation";
	this.attrType = com_mun_model_enumeration_AttrType.Orientation;
	this.defaultOrientation = new com_mun_model_attribute_OrientationValue(com_mun_model_enumeration_ORIENTATION.EAST);
};
$hxClasses["com.mun.model.attribute.OrientationAttr"] = com_mun_model_attribute_OrientationAttr;
com_mun_model_attribute_OrientationAttr.__name__ = ["com","mun","model","attribute","OrientationAttr"];
com_mun_model_attribute_OrientationAttr.__interfaces__ = [com_mun_model_attribute_Attribute];
com_mun_model_attribute_OrientationAttr.prototype = {
	name: null
	,attrType: null
	,defaultOrientation: null
	,getName: function() {
		return this.name;
	}
	,getdefaultvalue: function() {
		return this.defaultOrientation;
	}
	,getAttrType: function() {
		return this.attrType;
	}
	,__class__: com_mun_model_attribute_OrientationAttr
};
var com_mun_model_attribute_OrientationPair = function(na,nv) {
	this.orientationAttr = na;
	this.orientationValue = js_Boot.__cast(nv , com_mun_model_attribute_OrientationValue);
};
$hxClasses["com.mun.model.attribute.OrientationPair"] = com_mun_model_attribute_OrientationPair;
com_mun_model_attribute_OrientationPair.__name__ = ["com","mun","model","attribute","OrientationPair"];
com_mun_model_attribute_OrientationPair.__interfaces__ = [com_mun_model_attribute_Pair];
com_mun_model_attribute_OrientationPair.prototype = {
	orientationAttr: null
	,orientationValue: null
	,getAttr: function() {
		return this.orientationAttr;
	}
	,getAttrValue: function() {
		return this.orientationValue;
	}
	,canupdate: function(c,n) {
		if(!js_Boot.__instanceof(n,com_mun_model_attribute_OrientationValue)) {
			return false;
		}
		return true;
	}
	,update: function(c,n) {
		if(this.canupdate(c,n) == true) {
			this.orientationValue = js_Boot.__cast(n , com_mun_model_attribute_OrientationValue);
			return true;
		}
		return false;
	}
	,__class__: com_mun_model_attribute_OrientationPair
};
var com_mun_model_attribute_OrientationValue = function(or) {
	this.orientation = or;
	this.attrType = com_mun_model_enumeration_AttrType.Orientation;
};
$hxClasses["com.mun.model.attribute.OrientationValue"] = com_mun_model_attribute_OrientationValue;
com_mun_model_attribute_OrientationValue.__name__ = ["com","mun","model","attribute","OrientationValue"];
com_mun_model_attribute_OrientationValue.__interfaces__ = [com_mun_model_attribute_AttrValue];
com_mun_model_attribute_OrientationValue.prototype = {
	orientation: null
	,attrType: null
	,getvalue: function() {
		return this.orientation;
	}
	,getType: function() {
		return this.attrType;
	}
	,__class__: com_mun_model_attribute_OrientationValue
};
var com_mun_model_attribute_StringAttr = function(s) {
	this.defaultname = new com_mun_model_attribute_StringValue("");
	this.name = "name";
	this.name = s;
	this.attrType = com_mun_model_enumeration_AttrType.STRING;
};
$hxClasses["com.mun.model.attribute.StringAttr"] = com_mun_model_attribute_StringAttr;
com_mun_model_attribute_StringAttr.__name__ = ["com","mun","model","attribute","StringAttr"];
com_mun_model_attribute_StringAttr.__interfaces__ = [com_mun_model_attribute_Attribute];
com_mun_model_attribute_StringAttr.prototype = {
	name: null
	,attrType: null
	,defaultname: null
	,getName: function() {
		return this.name;
	}
	,getdefaultvalue: function() {
		return this.defaultname;
	}
	,getAttrType: function() {
		return this.attrType;
	}
	,__class__: com_mun_model_attribute_StringAttr
};
var com_mun_model_attribute_StringValue = function(s) {
	this.name = "";
	this.name = s;
};
$hxClasses["com.mun.model.attribute.StringValue"] = com_mun_model_attribute_StringValue;
com_mun_model_attribute_StringValue.__name__ = ["com","mun","model","attribute","StringValue"];
com_mun_model_attribute_StringValue.__interfaces__ = [com_mun_model_attribute_AttrValue];
com_mun_model_attribute_StringValue.prototype = {
	name: null
	,getvalue: function() {
		return this.name;
	}
	,getType: function() {
		return com_mun_model_enumeration_AttrType.STRING;
	}
	,__class__: com_mun_model_attribute_StringValue
};
var com_mun_model_observe_Observer = function() {
};
$hxClasses["com.mun.model.observe.Observer"] = com_mun_model_observe_Observer;
com_mun_model_observe_Observer.__name__ = ["com","mun","model","observe","Observer"];
com_mun_model_observe_Observer.prototype = {
	update: function(c,data) {
	}
	,__class__: com_mun_model_observe_Observer
};
var com_mun_model_component_CircuitDiagramI = function() { };
$hxClasses["com.mun.model.component.CircuitDiagramI"] = com_mun_model_component_CircuitDiagramI;
com_mun_model_component_CircuitDiagramI.__name__ = ["com","mun","model","component","CircuitDiagramI"];
com_mun_model_component_CircuitDiagramI.prototype = {
	get_id: null
	,set_id: null
	,get_commandManager: null
	,set_commandManager: null
	,get_componentArray: null
	,get_componentIterator: null
	,get_componentReverseIterator: null
	,get_linkReverseIterator: null
	,get_linkIterator: null
	,get_name: null
	,set_name: null
	,addLink: null
	,addComponent: null
	,removeLink: null
	,removeComponent: null
	,getCopyStack: null
	,setNewOirentation: null
	,deleteLink: null
	,deleteComponent: null
	,componentSetName: null
	,componentSetDelay: null
	,computeDiagramSize: null
	,get_diagramWidth: null
	,get_diagramHeight: null
	,get_xMin: null
	,get_yMin: null
	,get_xMax: null
	,get_yMax: null
	,getComponentAndLinkCenterCoordinate: null
	,draw: null
	,findHitList: null
	,findWorldPoint: null
	,isEmpty: null
	,createJSon: null
	,__class__: com_mun_model_component_CircuitDiagramI
};
var com_mun_model_component_CircuitDiagram = function() {
	this.linkArrayReverseFlag = false;
	this.componentArrayReverseFlag = false;
	this.linkArray = [];
	this.componentArray = [];
	com_mun_model_observe_Observer.call(this);
	this.copyStack = new com_mun_controller_command_Stack();
	this.componentAndLinkCenter = new com_mun_type_Coordinate(0,0);
	this.margin = 50;
};
$hxClasses["com.mun.model.component.CircuitDiagram"] = com_mun_model_component_CircuitDiagram;
com_mun_model_component_CircuitDiagram.__name__ = ["com","mun","model","component","CircuitDiagram"];
com_mun_model_component_CircuitDiagram.__interfaces__ = [com_mun_model_component_CircuitDiagramI];
com_mun_model_component_CircuitDiagram.__super__ = com_mun_model_observe_Observer;
com_mun_model_component_CircuitDiagram.prototype = $extend(com_mun_model_observe_Observer.prototype,{
	Obable: null
	,componentArray: null
	,linkArray: null
	,name: null
	,copyStack: null
	,commandManager: null
	,componentArrayReverseFlag: null
	,linkArrayReverseFlag: null
	,diagramWidth: null
	,diagramHeight: null
	,xMin: null
	,yMin: null
	,xMax: null
	,yMax: null
	,margin: null
	,componentAndLinkCenter: null
	,id: null
	,computeDiagramSize: function() {
		this.xMin = 99999999;
		this.yMin = 99999999;
		this.xMax = 0;
		this.yMax = 0;
		var _g = 0;
		var _g1 = this.componentArray;
		while(_g < _g1.length) {
			var i = _g1[_g];
			++_g;
			if(i.get_xPosition() - i.get_width() / 2 < this.xMin) {
				this.xMin = i.get_xPosition() - i.get_width() / 2;
			}
			if(i.get_xPosition() + i.get_width() / 2 > this.xMax) {
				this.xMax = i.get_xPosition() + i.get_width() / 2;
			}
			if(i.get_yPosition() - i.get_height() / 2 < this.yMin) {
				this.yMin = i.get_yPosition() - i.get_height() / 2;
			}
			if(i.get_yPosition() + i.get_height() / 2 > this.yMax) {
				this.yMax = i.get_yPosition() + i.get_height() / 2;
			}
		}
		var _g2 = 0;
		var _g11 = this.linkArray;
		while(_g2 < _g11.length) {
			var i1 = _g11[_g2];
			++_g2;
			if(i1.get_leftEndpoint().get_xPosition() < this.xMin) {
				this.xMin = i1.get_leftEndpoint().get_xPosition();
			}
			if(i1.get_leftEndpoint().get_xPosition() > this.xMax) {
				this.xMax = i1.get_leftEndpoint().get_xPosition();
			}
			if(i1.get_leftEndpoint().get_yPosition() < this.yMin) {
				this.yMin = i1.get_leftEndpoint().get_yPosition();
			}
			if(i1.get_leftEndpoint().get_yPosition() > this.yMax) {
				this.yMax = i1.get_leftEndpoint().get_yPosition();
			}
			if(i1.get_rightEndpoint().get_xPosition() < this.xMin) {
				this.xMin = i1.get_rightEndpoint().get_xPosition();
			}
			if(i1.get_rightEndpoint().get_xPosition() > this.xMax) {
				this.xMax = i1.get_rightEndpoint().get_xPosition();
			}
			if(i1.get_rightEndpoint().get_yPosition() < this.yMin) {
				this.yMin = i1.get_rightEndpoint().get_yPosition();
			}
			if(i1.get_rightEndpoint().get_yPosition() > this.yMax) {
				this.yMax = i1.get_rightEndpoint().get_yPosition();
			}
		}
		this.componentAndLinkCenter.set_xPosition((this.xMin + this.xMax) / 2);
		this.componentAndLinkCenter.set_yPosition((this.yMin + this.yMax) / 2);
		this.diagramWidth = this.xMax - this.xMin + this.margin;
		this.diagramHeight = this.yMax - this.yMin + this.margin;
		if(this.diagramHeight > this.diagramWidth) {
			this.diagramWidth = this.diagramHeight;
		} else {
			this.diagramHeight = this.diagramWidth;
		}
	}
	,get_id: function() {
		return this.id;
	}
	,set_id: function(s) {
		this.id = s;
	}
	,getComponentAndLinkCenterCoordinate: function() {
		return this.componentAndLinkCenter;
	}
	,get_diagramWidth: function() {
		return this.diagramWidth;
	}
	,get_diagramHeight: function() {
		return this.diagramHeight;
	}
	,get_xMin: function() {
		return this.xMin;
	}
	,get_yMin: function() {
		return this.yMin;
	}
	,get_xMax: function() {
		return this.xMax;
	}
	,get_yMax: function() {
		return this.yMax;
	}
	,get_commandManager: function() {
		return this.commandManager;
	}
	,set_commandManager: function(value) {
		this.commandManager = value;
	}
	,get_componentArray: function() {
		return this.componentArray;
	}
	,get_componentIterator: function() {
		if(this.componentArrayReverseFlag) {
			this.componentArrayReverse();
		}
		return HxOverrides.iter(this.componentArray);
	}
	,get_componentReverseIterator: function() {
		if(!this.componentArrayReverseFlag) {
			this.componentArrayReverse();
		}
		return HxOverrides.iter(this.componentArray);
	}
	,componentArrayReverse: function() {
		this.componentArrayReverseFlag = !this.componentArrayReverseFlag;
		this.componentArray.reverse();
	}
	,get_linkIterator: function() {
		if(this.linkArrayReverseFlag) {
			this.linkArrayReverse();
		}
		return HxOverrides.iter(this.linkArray);
	}
	,get_linkReverseIterator: function() {
		if(!this.linkArrayReverseFlag) {
			this.linkArrayReverse();
		}
		return HxOverrides.iter(this.linkArray);
	}
	,linkArrayReverse: function() {
		this.linkArrayReverseFlag = !this.linkArrayReverseFlag;
		this.linkArray.reverse();
	}
	,get_name: function() {
		return this.name;
	}
	,set_name: function(value) {
		this.name = value;
	}
	,addLink: function(link) {
		this.linkArray.push(link);
	}
	,addComponent: function(component) {
		haxe_Log.trace("pass",{ fileName : "CircuitDiagram.hx", lineNumber : 217, className : "com.mun.model.component.CircuitDiagram", methodName : "addComponent"});
		this.componentArray.push(component);
		component.addObserver(this);
	}
	,removeLink: function(link) {
		HxOverrides.remove(this.linkArray,link);
	}
	,removeComponent: function(component) {
		HxOverrides.remove(this.componentArray,component);
	}
	,getCopyStack: function() {
		return this.copyStack;
	}
	,setNewOirentation: function(component,newOrientation) {
		var _g1 = 0;
		var _g = this.componentArray.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(component == this.componentArray[i]) {
				this.componentArray[i].set_orientation(newOrientation);
				this.componentArray[i].updateMoveComponentPortPosition(this.componentArray[i].get_xPosition(),this.componentArray[i].get_yPosition());
				this.linkArraySelfUpdate();
				break;
			}
		}
	}
	,deleteLink: function(link) {
		HxOverrides.remove(this.linkArray,link);
	}
	,deleteComponent: function(component) {
		HxOverrides.remove(this.componentArray,component);
		var i = component.get_inportIterator();
		while(i.hasNext()) {
			var i1 = i.next();
			var _g1 = 0;
			var _g = this.linkArray.length;
			while(_g1 < _g) {
				var j = _g1++;
				if(i1 == this.linkArray[j].get_leftEndpoint().get_port()) {
					this.linkArray[j].get_leftEndpoint().set_port(null);
				}
				if(i1 == this.linkArray[j].get_rightEndpoint().get_port()) {
					this.linkArray[j].get_rightEndpoint().set_port(null);
				}
			}
		}
		var i2 = component.get_outportIterator();
		while(i2.hasNext()) {
			var i3 = i2.next();
			var _g11 = 0;
			var _g2 = this.linkArray.length;
			while(_g11 < _g2) {
				var j1 = _g11++;
				if(i3 == this.linkArray[j1].get_leftEndpoint().get_port()) {
					this.linkArray[j1].get_leftEndpoint().set_port(null);
				}
				if(i3 == this.linkArray[j1].get_rightEndpoint().get_port()) {
					this.linkArray[j1].get_rightEndpoint().set_port(null);
				}
			}
		}
	}
	,linkArraySelfUpdate: function() {
		var _g1 = 0;
		var _g = this.linkArray.length;
		while(_g1 < _g) {
			var i = _g1++;
			this.linkArray[i].get_leftEndpoint().updatePosition();
			this.linkArray[i].get_rightEndpoint().updatePosition();
		}
	}
	,componentSetName: function(component,name) {
		this.componentArray[this.componentArray.indexOf(component)].set_name(name);
	}
	,componentSetDelay: function(component,delay) {
		this.componentArray[this.componentArray.indexOf(component)].set_delay(delay);
	}
	,draw: function(drawingAdapter,linkAndComponentArray) {
		var drawFlag = false;
		var _g = 0;
		var _g1 = this.componentArray;
		while(_g < _g1.length) {
			var i = _g1[_g];
			++_g;
			if(linkAndComponentArray != null && linkAndComponentArray.getComponentIteratorLength() != 0) {
				var j = linkAndComponentArray.get_componentIterator();
				while(j.hasNext()) {
					var j1 = j.next();
					if(j1 == i) {
						i.drawComponent(drawingAdapter,true);
						drawFlag = true;
					}
				}
			}
			if(!drawFlag) {
				if(i.getNameOfTheComponentKind() != "CC") {
					i.drawComponent(drawingAdapter,false);
				} else {
					i.drawComponent(drawingAdapter,false,linkAndComponentArray);
				}
			}
			drawFlag = false;
		}
		drawFlag = false;
		var _g2 = 0;
		var _g11 = this.linkArray;
		while(_g2 < _g11.length) {
			var i1 = _g11[_g2];
			++_g2;
			if(linkAndComponentArray != null && linkAndComponentArray.getLinkIteratorLength() != 0) {
				var j2 = linkAndComponentArray.get_linkIterator();
				while(j2.hasNext()) {
					var j3 = j2.next();
					if(j3 == i1) {
						i1.drawLink(drawingAdapter,true);
						drawFlag = true;
					}
				}
			}
			if(!drawFlag) {
				i1.drawLink(drawingAdapter,false);
			}
			drawFlag = false;
		}
	}
	,findHitList: function(coordinate,mode) {
		var hitObjectArray = [];
		var hitLinkArray = [];
		var _g = 0;
		var _g1 = this.linkArray;
		while(_g < _g1.length) {
			var i = _g1[_g];
			++_g;
			hitLinkArray = i.findHitList(coordinate,mode);
			var _g2 = 0;
			while(_g2 < hitLinkArray.length) {
				var j = hitLinkArray[_g2];
				++_g2;
				j.set_circuitDiagram(this);
				hitObjectArray.push(j);
			}
		}
		var result = [];
		var _g3 = 0;
		var _g11 = this.componentArray;
		while(_g3 < _g11.length) {
			var i1 = _g11[_g3];
			++_g3;
			result = i1.findHitList(coordinate,mode);
			var _g21 = 0;
			while(_g21 < result.length) {
				var j1 = result[_g21];
				++_g21;
				if(j1.get_circuitDiagram() == null) {
					j1.set_circuitDiagram(this);
				}
				hitObjectArray.push(j1);
			}
		}
		return hitObjectArray;
	}
	,findWorldPoint: function(worldCoordinate,mode) {
		var worldPointArray = [];
		var _g = 0;
		var _g1 = this.componentArray;
		while(_g < _g1.length) {
			var i = _g1[_g];
			++_g;
			var tempWorldPointArray = i.findWorldPoint(worldCoordinate,mode);
			var _g2 = 0;
			while(_g2 < tempWorldPointArray.length) {
				var j = tempWorldPointArray[_g2];
				++_g2;
				worldPointArray.push(j);
			}
			if(worldPointArray.length != 0) {
				break;
			}
		}
		if(worldPointArray.length == 0 || mode == com_mun_model_enumeration_POINT_$MODE.PATH) {
			worldPointArray.push(new com_mun_type_WorldPoint(this,worldCoordinate));
		}
		return worldPointArray;
	}
	,isEmpty: function() {
		if(this.componentArray.length == 0 && this.linkArray.length == 0) {
			return true;
		} else {
			return false;
		}
	}
	,createJSon: function() {
		var jsonString = "{ \"name\": \"" + this.name + "\",";
		jsonString += "\"diagramWidth\": \"" + this.diagramWidth + "\",";
		jsonString += "\"diagramHeight\": \"" + this.diagramHeight + "\",";
		jsonString += "\"xMin\": \"" + this.xMin + "\",";
		jsonString += "\"yMin\": \"" + this.yMin + "\",";
		jsonString += "\"xMax\": \"" + this.xMax + "\",";
		jsonString += "\"yMax\": \"" + this.yMax + "\",";
		jsonString += "\"ComponentArray\":[";
		var _g1 = 0;
		var _g = this.componentArray.length;
		while(_g1 < _g) {
			var i = _g1++;
			jsonString += this.componentArray[i].createJSon();
			if(i != this.componentArray.length - 1) {
				jsonString += ",";
			}
		}
		jsonString += "],";
		jsonString += "\"LinkArray\":[";
		var _g11 = 0;
		var _g2 = this.linkArray.length;
		while(_g11 < _g2) {
			var i1 = _g11++;
			jsonString += this.linkArray[i1].createJSon();
			if(i1 != this.linkArray.length - 1) {
				jsonString += ",";
			}
		}
		jsonString += "]}";
		return jsonString;
	}
	,__class__: com_mun_model_component_CircuitDiagram
});
var com_mun_model_observe_Observable = function() {
	this.observers = [];
};
$hxClasses["com.mun.model.observe.Observable"] = com_mun_model_observe_Observable;
com_mun_model_observe_Observable.__name__ = ["com","mun","model","observe","Observable"];
com_mun_model_observe_Observable.prototype = {
	observers: null
	,addObserver: function(obs) {
		if(obs == null) {
			return false;
		} else {
			this.observers.push(obs);
			return true;
		}
	}
	,removeObserver: function(obs) {
		return HxOverrides.remove(this.observers,obs);
	}
	,notifyObservers: function(c,data) {
		var _g = 0;
		var _g1 = this.observers;
		while(_g < _g1.length) {
			var n = _g1[_g];
			++_g;
			n.update(c,data);
		}
	}
	,__class__: com_mun_model_observe_Observable
};
var com_mun_model_component_Component = function(xPosition,yPosition,height,width,orientation,componentKind,inportNum) {
	this.list = [];
	this.outportArray = [];
	this.inportArray = [];
	com_mun_model_observe_Observable.call(this);
	this.xPosition = xPosition;
	this.yPosition = yPosition;
	this.height = height;
	this.width = width;
	this.componentKind = componentKind;
	this.componentKind.set_component(this);
	this.inportsNum = inportNum;
	this.boxType = com_mun_model_enumeration_BOX.WHITE_BOX;
	var portArray = [];
	portArray = this.componentKind.createPorts(xPosition,yPosition,width,height,orientation,inportNum);
	var _g1 = 0;
	var _g = portArray.length;
	while(_g1 < _g) {
		var o = _g1++;
		var port = portArray[o];
		if(port.get_portDescription() == com_mun_model_enumeration_IOTYPE.INPUT || port.get_portDescription() == com_mun_model_enumeration_IOTYPE.CLK || port.get_portDescription() == com_mun_model_enumeration_IOTYPE.D || port.get_portDescription() == com_mun_model_enumeration_IOTYPE.S) {
			this.inportArray.push(port);
		} else {
			this.outportArray.push(port);
		}
	}
	var _g2 = 0;
	var _g11 = componentKind.getAttr();
	while(_g2 < _g11.length) {
		var n = _g11[_g2];
		++_g2;
		if(n.getAttrType() == com_mun_model_enumeration_AttrType.INT) {
			this.list.push(new com_mun_model_attribute_DelayPair(js_Boot.__cast(n , com_mun_model_attribute_IntAttr),(js_Boot.__cast(n , com_mun_model_attribute_IntAttr)).getdefaultvalue()));
		} else if(n.getAttrType() == com_mun_model_enumeration_AttrType.STRING) {
			this.list.push(new com_mun_model_attribute_NamePair(js_Boot.__cast(n , com_mun_model_attribute_StringAttr),(js_Boot.__cast(n , com_mun_model_attribute_StringAttr)).getdefaultvalue()));
		} else if(n.getAttrType() == com_mun_model_enumeration_AttrType.Orientation) {
			this.list.push(new com_mun_model_attribute_OrientationPair(js_Boot.__cast(n , com_mun_model_attribute_OrientationAttr),(js_Boot.__cast(n , com_mun_model_attribute_OrientationAttr)).getdefaultvalue()));
		}
	}
	var _g3 = 0;
	var _g12 = this.list;
	while(_g3 < _g12.length) {
		var i = _g12[_g3];
		++_g3;
		if(i.getAttr().getName() == "orientation") {
			i.update(this,new com_mun_model_attribute_OrientationValue(orientation));
		}
	}
	if(this.getNameOfTheComponentKind() == "CC") {
		this.set_id(this.get_componentKind().getInnerCircuitDiagram().get_id());
		haxe_Log.trace(this.get_id(),{ fileName : "Component.hx", lineNumber : 107, className : "com.mun.model.component.Component", methodName : "new"});
	}
};
$hxClasses["com.mun.model.component.Component"] = com_mun_model_component_Component;
com_mun_model_component_Component.__name__ = ["com","mun","model","component","Component"];
com_mun_model_component_Component.__super__ = com_mun_model_observe_Observable;
com_mun_model_component_Component.prototype = $extend(com_mun_model_observe_Observable.prototype,{
	xPosition: null
	,yPosition: null
	,height: null
	,width: null
	,componentKind: null
	,inportArray: null
	,outportArray: null
	,inportsNum: null
	,boxType: null
	,list: null
	,cd: null
	,getArray: function() {
		return this.list;
	}
	,hasAttr: function(s) {
		var flag = false;
		var _g = 0;
		var _g1 = this.list;
		while(_g < _g1.length) {
			var i = _g1[_g];
			++_g;
			if(i.getAttr().getName() == s) {
				flag = true;
			}
		}
		return flag;
	}
	,getAttrValue: function(s) {
		var _tmp0 = $bind(this,this.hasAttr);
		var _tmp1 = s;
		var _tmp2 = _tmp0(_tmp1);
		if(!_tmp2) {
			var e = new com_mun_assertions_AssertionFailure("hasAttr(s)",[{ expr : "hasAttr", value : _tmp0},{ expr : "s", value : _tmp1},{ expr : "hasAttr(s)", value : _tmp2}]);
			haxe_Log.trace("Throwing exception " + Std.string(e),{ fileName : "Component.hx", lineNumber : 126, className : "com.mun.model.component.Component", methodName : "getAttrValue"});
			throw new js__$Boot_HaxeError(e);
		}
		var temp;
		if(s == "delay") {
			temp = new com_mun_model_attribute_IntValue(0);
		} else if(s == "name") {
			temp = new com_mun_model_attribute_StringValue("");
		} else {
			temp = new com_mun_model_attribute_OrientationValue(com_mun_model_enumeration_ORIENTATION.EAST);
		}
		var _g = 0;
		var _g1 = this.list;
		while(_g < _g1.length) {
			var i = _g1[_g];
			++_g;
			if(i.getAttr().getName() == s) {
				temp = i.getAttrValue();
			}
		}
		return temp;
	}
	,canupdate: function(s,v) {
		var _tmp0 = $bind(this,this.hasAttr);
		var _tmp1 = s;
		var _tmp2 = _tmp0(_tmp1);
		if(!_tmp2) {
			var e = new com_mun_assertions_AssertionFailure("hasAttr(s)",[{ expr : "hasAttr", value : _tmp0},{ expr : "s", value : _tmp1},{ expr : "hasAttr(s)", value : _tmp2}]);
			haxe_Log.trace("Throwing exception " + Std.string(e),{ fileName : "Component.hx", lineNumber : 146, className : "com.mun.model.component.Component", methodName : "canupdate"});
			throw new js__$Boot_HaxeError(e);
		}
		if(this.hasAttr(s)) {
			var _g = 0;
			var _g1 = this.list;
			while(_g < _g1.length) {
				var i = _g1[_g];
				++_g;
				if(i.getAttr().getName() == s) {
					return i.canupdate(this,v);
				}
			}
		}
		return false;
	}
	,update: function(s,v) {
		haxe_Log.trace(this.hasAttr(s),{ fileName : "Component.hx", lineNumber : 158, className : "com.mun.model.component.Component", methodName : "update"});
		var _tmp0 = $bind(this,this.hasAttr);
		var _tmp1 = s;
		var _tmp2 = _tmp0(_tmp1);
		if(!_tmp2) {
			var e = new com_mun_assertions_AssertionFailure("hasAttr(s)",[{ expr : "hasAttr", value : _tmp0},{ expr : "s", value : _tmp1},{ expr : "hasAttr(s)", value : _tmp2}]);
			haxe_Log.trace("Throwing exception " + Std.string(e),{ fileName : "Component.hx", lineNumber : 159, className : "com.mun.model.component.Component", methodName : "update"});
			throw new js__$Boot_HaxeError(e);
		}
		if(this.hasAttr(s)) {
			var _g = 0;
			var _g1 = this.list;
			while(_g < _g1.length) {
				var i = _g1[_g];
				++_g;
				if(i.getAttr().getName() == s) {
					if(i.canupdate(this,v)) {
						return i.update(this,v);
					}
				}
			}
		}
		return false;
	}
	,get_CircuitDiagram: function() {
		return this.cd;
	}
	,get_xPosition: function() {
		return this.xPosition;
	}
	,set_xPosition: function(value) {
		return this.xPosition = value;
	}
	,get_yPosition: function() {
		return this.yPosition;
	}
	,set_yPosition: function(value) {
		return this.yPosition = value;
	}
	,get_orientation: function() {
		return this.getAttrValue("orientation").getvalue();
	}
	,set_orientation: function(value) {
		var _g = 0;
		var _g1 = this.list;
		while(_g < _g1.length) {
			var i = _g1[_g];
			++_g;
			if(i.getAttr().getName() == "orientation") {
				i.update(this,new com_mun_model_attribute_OrientationValue(value));
			}
		}
	}
	,get_id: function() {
		if(this.hasAttr("id")) {
			return this.getAttrValue("id").getvalue();
		} else {
			return null;
		}
	}
	,set_id: function(id) {
		if(this.hasAttr("id")) {
			var _g = 0;
			var _g1 = this.list;
			while(_g < _g1.length) {
				var i = _g1[_g];
				++_g;
				if(i.getAttr().getName() == "id") {
					i.update(this,new com_mun_model_attribute_StringValue(id));
				}
			}
		}
	}
	,get_componentKind: function() {
		return this.componentKind;
	}
	,set_componentKind: function(value) {
		return this.componentKind = value;
	}
	,get_boxType: function() {
		return this.boxType;
	}
	,set_boxType: function(value) {
		this.boxType = value;
	}
	,get_inportIterator: function() {
		return HxOverrides.iter(this.inportArray);
	}
	,get_inportIteratorLength: function() {
		return this.inportArray.length;
	}
	,get_outportIteratorLength: function() {
		return this.outportArray.length;
	}
	,get_outportIterator: function() {
		return HxOverrides.iter(this.outportArray);
	}
	,get_name: function() {
		return this.getAttrValue("name").getvalue();
	}
	,set_name: function(value) {
		var _g = 0;
		var _g1 = this.list;
		while(_g < _g1.length) {
			var i = _g1[_g];
			++_g;
			if(i.getAttr().getName() == "name") {
				i.update(this,new com_mun_model_attribute_StringValue(value));
			}
		}
	}
	,get_height: function() {
		return this.height;
	}
	,set_height: function(value) {
		return this.height = value;
	}
	,get_width: function() {
		return this.width;
	}
	,set_width: function(value) {
		return this.width = value;
	}
	,get_delay: function() {
		return this.getAttrValue("delay").getvalue();
	}
	,set_delay: function(value) {
		var _g = 0;
		var _g1 = this.list;
		while(_g < _g1.length) {
			var i = _g1[_g];
			++_g;
			if(i.getAttr().getName() == "delay") {
				i.update(this,new com_mun_model_attribute_IntValue(value));
			}
		}
	}
	,get_inportsNum: function() {
		return this.inportsNum;
	}
	,setNameOfTheComponentKind: function(name) {
	}
	,getNameOfTheComponentKind: function() {
		return this.componentKind.getname();
	}
	,set_inportsNum: function(value) {
		if(value <= this.componentKind.getLeastInportNumber()) {
			return false;
		}
		this.inportsNum = value;
		while(this.inportArray.length < value) {
			var port = this.componentKind.addInPort();
			if(port != null) {
				this.inportArray.push(port);
			} else {
				return false;
			}
		}
		this.inportArray = this.componentKind.updateInPortPosition(this.inportArray,this.xPosition,this.yPosition,this.height,this.width,this.getAttrValue("orientation").getvalue());
		return true;
	}
	,removeInport: function(inport) {
		return HxOverrides.remove(this.inportArray,inport);
	}
	,updateMoveComponentPortPosition: function(xPosition,yPosition) {
		this.inportArray = this.componentKind.updateInPortPosition(this.inportArray,xPosition,yPosition,this.height,this.width,this.getAttrValue("orientation").getvalue());
		this.outportArray = this.componentKind.updateOutPortPosition(this.outportArray,xPosition,yPosition,this.height,this.width,this.getAttrValue("orientation").getvalue());
		return this;
	}
	,drawComponent: function(drawingAdpater,highLight,linkAndComponentArray) {
		if(this.componentKind.checkInnerCircuitDiagramPortsChange()) {
			var i = this.componentKind.getInnerCircuitDiagram().get_componentIterator();
			while(i.hasNext()) {
				var i1 = i.next();
				var inputFlag = false;
				var outputFlag = false;
				var _g = 0;
				var _g1 = this.inportArray;
				while(_g < _g1.length) {
					var j = _g1[_g];
					++_g;
					if(i1.getNameOfTheComponentKind() == "Input") {
						if(i1.get_componentKind().get_sequence() == j.get_sequence()) {
							inputFlag = true;
						}
					}
				}
				var _g2 = 0;
				var _g11 = this.outportArray;
				while(_g2 < _g11.length) {
					var j1 = _g11[_g2];
					++_g2;
					if(i1.getNameOfTheComponentKind() == "Output") {
						if(i1.get_componentKind().get_sequence() == j1.get_sequence()) {
							outputFlag = true;
						}
					}
				}
				if(!inputFlag && !outputFlag) {
					if(i1.getNameOfTheComponentKind() == "Input") {
						var port = this.componentKind.addInPort();
						port.set_sequence(i1.get_componentKind().get_sequence());
						this.inportArray.push(port);
					} else {
						var port1 = this.componentKind.addOutPort();
						port1.set_sequence(i1.get_componentKind().get_sequence());
						this.outportArray.push(port1);
					}
				}
			}
			var _g3 = 0;
			var _g12 = this.inportArray;
			while(_g3 < _g12.length) {
				var i2 = _g12[_g3];
				++_g3;
				var flag_delete = true;
				var j2 = this.componentKind.getInnerCircuitDiagram().get_componentIterator();
				while(j2.hasNext()) {
					var j3 = j2.next();
					if(i2.get_sequence() == j3.get_componentKind().get_sequence() && j3.getNameOfTheComponentKind() == "Input") {
						flag_delete = false;
					}
				}
				if(flag_delete) {
					HxOverrides.remove(this.inportArray,i2);
				}
			}
			var _g4 = 0;
			var _g13 = this.outportArray;
			while(_g4 < _g13.length) {
				var i3 = _g13[_g4];
				++_g4;
				var flag_delete1 = true;
				var j4 = this.componentKind.getInnerCircuitDiagram().get_componentIterator();
				while(j4.hasNext()) {
					var j5 = j4.next();
					if(i3.get_sequence() == j5.get_componentKind().get_sequence() && j5.getNameOfTheComponentKind() == "Output") {
						flag_delete1 = false;
					}
				}
				if(flag_delete1) {
					HxOverrides.remove(this.outportArray,i3);
				}
			}
			this.componentKind.updateInPortPosition(this.inportArray,this.xPosition,this.yPosition,this.height,this.width,this.getAttrValue("orientation").getvalue());
			this.componentKind.updateOutPortPosition(this.outportArray,this.xPosition,this.yPosition,this.height,this.width,this.getAttrValue("orientation").getvalue());
		}
		if(this.componentKind.getname() != "CC") {
			this.componentKind.drawComponent(drawingAdpater,highLight);
		} else {
			this.componentKind.drawComponent(drawingAdpater,highLight,linkAndComponentArray);
		}
	}
	,findHitList: function(coordinate,mode) {
		return this.componentKind.findHitList(coordinate,mode);
	}
	,findWorldPoint: function(coordinate,mode) {
		return this.componentKind.findWorldPoint(coordinate,mode);
	}
	,createJSon: function() {
		var jsonString = "{ \"name\": \"" + Std.string(this.getAttrValue("name").getvalue()) + "\",";
		jsonString += " \"xPosition\": \"" + this.xPosition + "\",";
		jsonString += " \"yPosition\": \"" + this.yPosition + "\",";
		jsonString += " \"height\": \"" + this.height + "\",";
		jsonString += " \"width\": \"" + this.width + "\",";
		jsonString += " \"orientation\": \"" + Std.string(this.getAttrValue("orientation").getvalue()) + "\",";
		jsonString += " \"delay\": \"" + Std.string(this.getAttrValue("delay").getvalue()) + "\",";
		jsonString += " \"inportsNum\": \"" + this.inportsNum + "\",";
		jsonString += " \"nameOfTheComponentKind\": \"" + this.componentKind.getname() + "\",";
		jsonString += "\"componentKind\":";
		jsonString += this.componentKind.createJSon();
		jsonString += ",";
		jsonString += "\"inportArray\":[";
		var _g1 = 0;
		var _g = this.inportArray.length;
		while(_g1 < _g) {
			var i = _g1++;
			jsonString += this.inportArray[i].createJSon();
			if(i != this.inportArray.length - 1) {
				jsonString += ",";
			}
		}
		jsonString += "],";
		jsonString += "\"outportArray\":[";
		var _g11 = 0;
		var _g2 = this.outportArray.length;
		while(_g11 < _g2) {
			var i1 = _g11++;
			jsonString += this.outportArray[i1].createJSon();
			if(i1 != this.outportArray.length - 1) {
				jsonString += ",";
			}
		}
		jsonString += "]}";
		return jsonString;
	}
	,__class__: com_mun_model_component_Component
});
var com_mun_model_component_Endpoint = function(xPosition,yPosition) {
	this.xPosition = xPosition;
	this.yPosition = yPosition;
};
$hxClasses["com.mun.model.component.Endpoint"] = com_mun_model_component_Endpoint;
com_mun_model_component_Endpoint.__name__ = ["com","mun","model","component","Endpoint"];
com_mun_model_component_Endpoint.prototype = {
	xPosition: null
	,yPosition: null
	,port: null
	,get_xPosition: function() {
		return this.xPosition;
	}
	,get_yPosition: function() {
		return this.yPosition;
	}
	,get_port: function() {
		return this.port;
	}
	,set_xPosition: function(value) {
		return this.xPosition = value;
	}
	,set_yPosition: function(value) {
		return this.yPosition = value;
	}
	,set_port: function(value) {
		return this.port = value;
	}
	,updatePosition: function() {
		if(this.port != null) {
			this.xPosition = this.port.get_xPosition();
			this.yPosition = this.port.get_yPosition();
		}
	}
	,createJSon: function() {
		var jsonString = "{ \"xPosition\": \"" + this.xPosition + "\",";
		jsonString += "\"yPosition\": \"" + this.yPosition + "\"";
		jsonString += "}";
		return jsonString;
	}
	,__class__: com_mun_model_component_Endpoint
};
var com_mun_model_component_FolderI = function() { };
$hxClasses["com.mun.model.component.FolderI"] = com_mun_model_component_FolderI;
com_mun_model_component_FolderI.__name__ = ["com","mun","model","component","FolderI"];
com_mun_model_component_FolderI.prototype = {
	add: null
	,getFloderName: null
	,setFloderName: null
	,pushCircuitDiagramToMap: null
	,findCircuitDiagram: null
	,removeCircuitDiagram: null
	,createNewCircuitDiagram: null
	,changeCircuitDiagramName: null
	,findObjectBelongsToWhichCircuitDiagram: null
	,__class__: com_mun_model_component_FolderI
};
var com_mun_model_component_Folder = function() {
	this.name = "Untitled";
	this.circuitDiagramMap = new haxe_ds_StringMap();
};
$hxClasses["com.mun.model.component.Folder"] = com_mun_model_component_Folder;
com_mun_model_component_Folder.__name__ = ["com","mun","model","component","Folder"];
com_mun_model_component_Folder.__interfaces__ = [com_mun_model_component_FolderI];
com_mun_model_component_Folder.prototype = {
	name: null
	,circuitDiagramMap: null
	,getFloderName: function() {
		return this.name;
	}
	,setFloderName: function(name) {
		this.name = name;
	}
	,pushCircuitDiagramToMap: function(circuitdiagram) {
		var this1 = this.circuitDiagramMap;
		var key = circuitdiagram.get_name();
		var _this = this1;
		if(__map_reserved[key] != null) {
			_this.setReserved(key,circuitdiagram);
		} else {
			_this.h[key] = circuitdiagram;
		}
	}
	,findCircuitDiagram: function(name) {
		var _this = this.circuitDiagramMap;
		if(__map_reserved[name] != null) {
			return _this.getReserved(name);
		} else {
			return _this.h[name];
		}
	}
	,removeCircuitDiagram: function(name) {
		this.circuitDiagramMap.remove(name);
	}
	,createNewCircuitDiagram: function() {
		var circuitDiagram = new com_mun_model_component_CircuitDiagram();
		var autoGenerateName = "";
		var counter = 0;
		var uniqueNmaeFlag = true;
		while(true) {
			autoGenerateName = "Untitled " + counter;
			var i = this.circuitDiagramMap.keys();
			while(i.hasNext()) {
				var i1 = i.next();
				if(i1.toString() == autoGenerateName) {
					uniqueNmaeFlag = false;
					break;
				}
			}
			if(uniqueNmaeFlag == true) {
				circuitDiagram.set_name(autoGenerateName);
				break;
			}
			++counter;
			uniqueNmaeFlag = true;
		}
		this.pushCircuitDiagramToMap(circuitDiagram);
		return circuitDiagram;
	}
	,add: function(cd) {
		var circuitDiagram = cd;
		var autoGenerateName = "";
		var counter = 0;
		var uniqueNmaeFlag = true;
		this.pushCircuitDiagramToMap(circuitDiagram);
		return circuitDiagram;
	}
	,changeCircuitDiagramName: function(oldName,newName,circuitDiagram) {
		var _this = this.circuitDiagramMap;
		if(__map_reserved[newName] != null ? _this.existsReserved(newName) : _this.h.hasOwnProperty(newName)) {
			return false;
		} else {
			circuitDiagram.set_name(newName);
			this.circuitDiagramMap.remove(oldName);
			var _this1 = this.circuitDiagramMap;
			if(__map_reserved[newName] != null) {
				_this1.setReserved(newName,circuitDiagram);
			} else {
				_this1.h[newName] = circuitDiagram;
			}
			return true;
		}
	}
	,deleteCircuitDiagram: function(name) {
		this.circuitDiagramMap.remove(name);
	}
	,findObjectBelongsToWhichCircuitDiagram: function(object) {
		var _this = this.circuitDiagramMap;
		var i = new haxe_ds__$StringMap_StringMapIterator(_this,_this.arrayKeys());
		while(i.hasNext()) {
			var i1 = i.next();
			if(object.get_component() != null) {
				var j = i1.get_componentIterator();
				while(j.hasNext()) {
					var j1 = j.next();
					if(j1 == object.get_component()) {
						return i1;
					}
					if(object.get_port() != null) {
						var k = j1.get_inportIterator();
						while(k.hasNext()) {
							var k1 = k.next();
							if(object.get_port() == k1) {
								return i1;
							}
						}
						var k2 = j1.get_outportIterator();
						while(k2.hasNext()) {
							var k3 = k2.next();
							if(object.get_port() == k3) {
								return i1;
							}
						}
					}
				}
			}
			if(object.get_link() != null || object.get_endPoint() != null) {
				var j2 = i1.get_linkIterator();
				while(j2.hasNext()) {
					var j3 = j2.next();
					if(object.get_link() != null && object.get_link() == j3) {
						return i1;
					}
					if(object.get_endPoint() != null) {
						if(object.get_endPoint() == j3.get_rightEndpoint() || object.get_endPoint() == j3.get_leftEndpoint()) {
							return i1;
						}
					}
				}
			}
		}
		return null;
	}
	,__class__: com_mun_model_component_Folder
};
var com_mun_model_component_Port = function() { };
$hxClasses["com.mun.model.component.Port"] = com_mun_model_component_Port;
com_mun_model_component_Port.__name__ = ["com","mun","model","component","Port"];
com_mun_model_component_Port.prototype = {
	get_xPosition: null
	,get_yPosition: null
	,set_xPosition: null
	,set_yPosition: null
	,get_value: null
	,set_value: null
	,get_portDescription: null
	,set_portDescription: null
	,get_sequence: null
	,set_sequence: null
	,createJSon: null
	,__class__: com_mun_model_component_Port
};
var com_mun_model_component_Inport = function(xPosition,yPosition) {
	this.sequence = -1;
	this.xPosition = xPosition;
	this.yPosition = yPosition;
	this.portDescription = com_mun_model_enumeration_IOTYPE.INPUT;
};
$hxClasses["com.mun.model.component.Inport"] = com_mun_model_component_Inport;
com_mun_model_component_Inport.__name__ = ["com","mun","model","component","Inport"];
com_mun_model_component_Inport.__interfaces__ = [com_mun_model_component_Port];
com_mun_model_component_Inport.prototype = {
	xPosition: null
	,yPosition: null
	,portDescription: null
	,value: null
	,sequence: null
	,get_xPosition: function() {
		return this.xPosition;
	}
	,get_yPosition: function() {
		return this.yPosition;
	}
	,set_xPosition: function(xPosition) {
		this.xPosition = xPosition;
	}
	,set_yPosition: function(yPosition) {
		this.yPosition = yPosition;
	}
	,get_value: function() {
		return this.value;
	}
	,set_value: function(value) {
		this.value = value;
	}
	,get_portDescription: function() {
		return this.portDescription;
	}
	,set_portDescription: function(value) {
		this.portDescription = value;
	}
	,get_sequence: function() {
		return this.sequence;
	}
	,set_sequence: function(sequence) {
		this.sequence = sequence;
	}
	,createJSon: function() {
		var jsonString = "{ \"xPosition\": \"" + this.xPosition + "\",";
		jsonString += "\"yPosition\": \"" + this.yPosition + "\",";
		jsonString += "\"portDescription\": \"" + Std.string(this.portDescription) + "\",";
		jsonString += "\"value\": \"" + Std.string(this.value) + "\",";
		jsonString += "\"sequence\": \"" + this.sequence + "\"";
		jsonString += "}";
		return jsonString;
	}
	,__class__: com_mun_model_component_Inport
};
var com_mun_model_component_Link = function(leftEndpoint,rightEndpoint) {
	this.leftEndpoint = leftEndpoint;
	this.rightEndpoint = rightEndpoint;
};
$hxClasses["com.mun.model.component.Link"] = com_mun_model_component_Link;
com_mun_model_component_Link.__name__ = ["com","mun","model","component","Link"];
com_mun_model_component_Link.prototype = {
	leftEndpoint: null
	,rightEndpoint: null
	,getLinkLength: function() {
		return Math.sqrt(Math.pow(Math.abs(this.leftEndpoint.get_xPosition() - this.rightEndpoint.get_xPosition()),2) + Math.pow(Math.abs(this.leftEndpoint.get_yPosition() - this.rightEndpoint.get_yPosition()),2));
	}
	,get_leftEndpoint: function() {
		return this.leftEndpoint;
	}
	,set_leftEndpoint: function(value) {
		return this.leftEndpoint = value;
	}
	,get_rightEndpoint: function() {
		return this.rightEndpoint;
	}
	,set_rightEndpoint: function(value) {
		return this.rightEndpoint = value;
	}
	,drawLink: function(drawingAdapter,highLight) {
		var drawComponent = new com_mun_view_drawComponents_DrawLink(this,drawingAdapter);
		if(highLight) {
			drawComponent.drawCorrespondingComponent("red");
		} else {
			drawComponent.drawCorrespondingComponent("black");
		}
	}
	,findHitList: function(coordinate,mode) {
		var hitObjectArray = [];
		var link = this.isOnLink(coordinate);
		if(link != null) {
			var hitObject = new com_mun_type_HitObject();
			hitObject.set_link(link);
			hitObjectArray.push(hitObject);
		}
		var endpoint = this.pointOnEndpoint(coordinate);
		if(endpoint != null) {
			var hitObject1 = new com_mun_type_HitObject();
			hitObject1.set_endpoint(endpoint);
			hitObjectArray.push(hitObject1);
		}
		return hitObjectArray;
	}
	,pointOnEndpoint: function(coordinate) {
		if(this.pointsDistance(this.leftEndpoint.get_xPosition(),this.leftEndpoint.get_yPosition(),coordinate.get_xPosition(),coordinate.get_yPosition()) <= com_mun_global_Constant.pointToEndpointDistance) {
			return this.leftEndpoint;
		}
		if(this.pointsDistance(this.rightEndpoint.get_xPosition(),this.rightEndpoint.get_yPosition(),coordinate.get_xPosition(),coordinate.get_yPosition()) <= com_mun_global_Constant.pointToEndpointDistance) {
			return this.rightEndpoint;
		}
		return null;
	}
	,isOnLink: function(coordinate) {
		if(this.pointToLine(this.leftEndpoint.get_xPosition(),this.leftEndpoint.get_yPosition(),this.rightEndpoint.get_xPosition(),this.rightEndpoint.get_yPosition(),coordinate.get_xPosition(),coordinate.get_yPosition()) <= com_mun_global_Constant.pointToLineDistance) {
			var theDistanaceToLeftEndpoint = Math.sqrt(Math.pow(Math.abs(coordinate.get_xPosition() - this.leftEndpoint.get_xPosition()),2) + Math.pow(Math.abs(coordinate.get_yPosition() - this.leftEndpoint.get_yPosition()),2));
			var theDistanceToRightEndpoint = Math.sqrt(Math.pow(Math.abs(coordinate.get_xPosition() - this.rightEndpoint.get_xPosition()),2) + Math.pow(Math.abs(coordinate.get_yPosition() - this.rightEndpoint.get_yPosition()),2));
			if(theDistanaceToLeftEndpoint >= theDistanceToRightEndpoint) {
				if(theDistanceToRightEndpoint >= com_mun_global_Constant.pointToEndpointDistance) {
					return this;
				}
			} else if(theDistanaceToLeftEndpoint >= com_mun_global_Constant.pointToEndpointDistance) {
				return this;
			}
		}
		return null;
	}
	,pointToLine: function(x1,y1,x2,y2,x0,y0) {
		var space = 0;
		var a;
		var b;
		var c;
		a = this.pointsDistance(x1,y1,x2,y2);
		b = this.pointsDistance(x1,y1,x0,y0);
		c = this.pointsDistance(x2,y2,x0,y0);
		if(c + b == a) {
			space = 0;
			return space;
		}
		if(a <= 0.00001) {
			space = b;
			return space;
		}
		if(c * c > a * a + b * b) {
			space = b;
			return space;
		}
		if(b * b >= a * a + c * c) {
			space = c;
			return space;
		}
		var p = (a + b + c) / 2;
		var s = Math.sqrt(p * (p - a) * (p - b) * (p - c));
		space = 2 * s / a;
		return space;
	}
	,pointsDistance: function(x1,y1,x2,y2) {
		var lineLength = 0;
		lineLength = Math.sqrt((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2));
		return lineLength;
	}
	,createJSon: function() {
		var jsonString = "{ \"leftEndpoint\": " + this.leftEndpoint.createJSon() + ",";
		jsonString += "\"rightEndpoint\": " + this.rightEndpoint.createJSon();
		jsonString += "}";
		return jsonString;
	}
	,__class__: com_mun_model_component_Link
};
var com_mun_model_component_Outport = function(xPosition,yPosition) {
	this.xPosition = xPosition;
	this.yPosition = yPosition;
	this.portDescription = com_mun_model_enumeration_IOTYPE.OUTPUT;
};
$hxClasses["com.mun.model.component.Outport"] = com_mun_model_component_Outport;
com_mun_model_component_Outport.__name__ = ["com","mun","model","component","Outport"];
com_mun_model_component_Outport.__interfaces__ = [com_mun_model_component_Port];
com_mun_model_component_Outport.prototype = {
	xPosition: null
	,yPosition: null
	,portDescription: null
	,value: null
	,sequence: null
	,get_xPosition: function() {
		return this.xPosition;
	}
	,get_yPosition: function() {
		return this.yPosition;
	}
	,set_xPosition: function(xPosition) {
		this.xPosition = xPosition;
	}
	,set_yPosition: function(yPosition) {
		this.yPosition = yPosition;
	}
	,get_value: function() {
		return this.value;
	}
	,set_value: function(value) {
		this.value = value;
	}
	,get_portDescription: function() {
		return this.portDescription;
	}
	,set_portDescription: function(value) {
		this.portDescription = value;
	}
	,get_sequence: function() {
		return this.sequence;
	}
	,set_sequence: function(sequence) {
		this.sequence = sequence;
	}
	,createJSon: function() {
		var jsonString = "{ \"xPosition\": \"" + this.xPosition + "\",";
		jsonString += "\"yPosition\": \"" + this.yPosition + "\",";
		jsonString += "\"portDescription\": \"" + Std.string(this.portDescription) + "\",";
		jsonString += "\"value\": \"" + Std.string(this.value) + "\",";
		jsonString += "\"sequence\": \"" + this.sequence + "\"";
		jsonString += "}";
		return jsonString;
	}
	,__class__: com_mun_model_component_Outport
};
var com_mun_model_drawingInterface_DrawingAdapterI = function() { };
$hxClasses["com.mun.model.drawingInterface.DrawingAdapterI"] = com_mun_model_drawingInterface_DrawingAdapterI;
com_mun_model_drawingInterface_DrawingAdapterI.__name__ = ["com","mun","model","drawingInterface","DrawingAdapterI"];
com_mun_model_drawingInterface_DrawingAdapterI.prototype = {
	setStrokeColor: null
	,setFillColor: null
	,setTextColor: null
	,setTextFont: null
	,setLineWidth: null
	,get_cxt: null
	,set_cxt: null
	,getTransform: null
	,transform: null
	,resetDrawingParam: null
	,drawAndShape: null
	,drawNAndShape: null
	,drawOrShape: null
	,drawNOrShape: null
	,drawBufferShape: null
	,drawNotShape: null
	,drawXorShape: null
	,drawRect: null
	,drawText: null
	,drawCricle: null
	,drawLine: null
	,__class__: com_mun_model_drawingInterface_DrawingAdapterI
};
var com_mun_model_enumeration_AttrType = $hxClasses["com.mun.model.enumeration.AttrType"] = { __ename__ : ["com","mun","model","enumeration","AttrType"], __constructs__ : ["INT","STRING","Orientation"] };
com_mun_model_enumeration_AttrType.INT = ["INT",0];
com_mun_model_enumeration_AttrType.INT.toString = $estr;
com_mun_model_enumeration_AttrType.INT.__enum__ = com_mun_model_enumeration_AttrType;
com_mun_model_enumeration_AttrType.STRING = ["STRING",1];
com_mun_model_enumeration_AttrType.STRING.toString = $estr;
com_mun_model_enumeration_AttrType.STRING.__enum__ = com_mun_model_enumeration_AttrType;
com_mun_model_enumeration_AttrType.Orientation = ["Orientation",2];
com_mun_model_enumeration_AttrType.Orientation.toString = $estr;
com_mun_model_enumeration_AttrType.Orientation.__enum__ = com_mun_model_enumeration_AttrType;
com_mun_model_enumeration_AttrType.__empty_constructs__ = [com_mun_model_enumeration_AttrType.INT,com_mun_model_enumeration_AttrType.STRING,com_mun_model_enumeration_AttrType.Orientation];
var com_mun_model_enumeration_BOX = $hxClasses["com.mun.model.enumeration.BOX"] = { __ename__ : ["com","mun","model","enumeration","BOX"], __constructs__ : ["WHITE_BOX","BLACK_BOX"] };
com_mun_model_enumeration_BOX.WHITE_BOX = ["WHITE_BOX",0];
com_mun_model_enumeration_BOX.WHITE_BOX.toString = $estr;
com_mun_model_enumeration_BOX.WHITE_BOX.__enum__ = com_mun_model_enumeration_BOX;
com_mun_model_enumeration_BOX.BLACK_BOX = ["BLACK_BOX",1];
com_mun_model_enumeration_BOX.BLACK_BOX.toString = $estr;
com_mun_model_enumeration_BOX.BLACK_BOX.__enum__ = com_mun_model_enumeration_BOX;
com_mun_model_enumeration_BOX.__empty_constructs__ = [com_mun_model_enumeration_BOX.WHITE_BOX,com_mun_model_enumeration_BOX.BLACK_BOX];
var com_mun_model_enumeration_C_$STATE = $hxClasses["com.mun.model.enumeration.C_STATE"] = { __ename__ : ["com","mun","model","enumeration","C_STATE"], __constructs__ : ["IDLE","CREATE_COMPONENT","CREATE_LINK","MOVE","PASTE","MULTI_SELECTION","SINGLE_SELECTION"] };
com_mun_model_enumeration_C_$STATE.IDLE = ["IDLE",0];
com_mun_model_enumeration_C_$STATE.IDLE.toString = $estr;
com_mun_model_enumeration_C_$STATE.IDLE.__enum__ = com_mun_model_enumeration_C_$STATE;
com_mun_model_enumeration_C_$STATE.CREATE_COMPONENT = ["CREATE_COMPONENT",1];
com_mun_model_enumeration_C_$STATE.CREATE_COMPONENT.toString = $estr;
com_mun_model_enumeration_C_$STATE.CREATE_COMPONENT.__enum__ = com_mun_model_enumeration_C_$STATE;
com_mun_model_enumeration_C_$STATE.CREATE_LINK = ["CREATE_LINK",2];
com_mun_model_enumeration_C_$STATE.CREATE_LINK.toString = $estr;
com_mun_model_enumeration_C_$STATE.CREATE_LINK.__enum__ = com_mun_model_enumeration_C_$STATE;
com_mun_model_enumeration_C_$STATE.MOVE = ["MOVE",3];
com_mun_model_enumeration_C_$STATE.MOVE.toString = $estr;
com_mun_model_enumeration_C_$STATE.MOVE.__enum__ = com_mun_model_enumeration_C_$STATE;
com_mun_model_enumeration_C_$STATE.PASTE = ["PASTE",4];
com_mun_model_enumeration_C_$STATE.PASTE.toString = $estr;
com_mun_model_enumeration_C_$STATE.PASTE.__enum__ = com_mun_model_enumeration_C_$STATE;
com_mun_model_enumeration_C_$STATE.MULTI_SELECTION = ["MULTI_SELECTION",5];
com_mun_model_enumeration_C_$STATE.MULTI_SELECTION.toString = $estr;
com_mun_model_enumeration_C_$STATE.MULTI_SELECTION.__enum__ = com_mun_model_enumeration_C_$STATE;
com_mun_model_enumeration_C_$STATE.SINGLE_SELECTION = ["SINGLE_SELECTION",6];
com_mun_model_enumeration_C_$STATE.SINGLE_SELECTION.toString = $estr;
com_mun_model_enumeration_C_$STATE.SINGLE_SELECTION.__enum__ = com_mun_model_enumeration_C_$STATE;
com_mun_model_enumeration_C_$STATE.__empty_constructs__ = [com_mun_model_enumeration_C_$STATE.IDLE,com_mun_model_enumeration_C_$STATE.CREATE_COMPONENT,com_mun_model_enumeration_C_$STATE.CREATE_LINK,com_mun_model_enumeration_C_$STATE.MOVE,com_mun_model_enumeration_C_$STATE.PASTE,com_mun_model_enumeration_C_$STATE.MULTI_SELECTION,com_mun_model_enumeration_C_$STATE.SINGLE_SELECTION];
var com_mun_model_enumeration_F_$STATE = $hxClasses["com.mun.model.enumeration.F_STATE"] = { __ename__ : ["com","mun","model","enumeration","F_STATE"], __constructs__ : ["IDLE","PREVIOUS","CREATE","CURRENT","SEARCH","NEXT"] };
com_mun_model_enumeration_F_$STATE.IDLE = ["IDLE",0];
com_mun_model_enumeration_F_$STATE.IDLE.toString = $estr;
com_mun_model_enumeration_F_$STATE.IDLE.__enum__ = com_mun_model_enumeration_F_$STATE;
com_mun_model_enumeration_F_$STATE.PREVIOUS = ["PREVIOUS",1];
com_mun_model_enumeration_F_$STATE.PREVIOUS.toString = $estr;
com_mun_model_enumeration_F_$STATE.PREVIOUS.__enum__ = com_mun_model_enumeration_F_$STATE;
com_mun_model_enumeration_F_$STATE.CREATE = ["CREATE",2];
com_mun_model_enumeration_F_$STATE.CREATE.toString = $estr;
com_mun_model_enumeration_F_$STATE.CREATE.__enum__ = com_mun_model_enumeration_F_$STATE;
com_mun_model_enumeration_F_$STATE.CURRENT = ["CURRENT",3];
com_mun_model_enumeration_F_$STATE.CURRENT.toString = $estr;
com_mun_model_enumeration_F_$STATE.CURRENT.__enum__ = com_mun_model_enumeration_F_$STATE;
com_mun_model_enumeration_F_$STATE.SEARCH = ["SEARCH",4];
com_mun_model_enumeration_F_$STATE.SEARCH.toString = $estr;
com_mun_model_enumeration_F_$STATE.SEARCH.__enum__ = com_mun_model_enumeration_F_$STATE;
com_mun_model_enumeration_F_$STATE.NEXT = ["NEXT",5];
com_mun_model_enumeration_F_$STATE.NEXT.toString = $estr;
com_mun_model_enumeration_F_$STATE.NEXT.__enum__ = com_mun_model_enumeration_F_$STATE;
com_mun_model_enumeration_F_$STATE.__empty_constructs__ = [com_mun_model_enumeration_F_$STATE.IDLE,com_mun_model_enumeration_F_$STATE.PREVIOUS,com_mun_model_enumeration_F_$STATE.CREATE,com_mun_model_enumeration_F_$STATE.CURRENT,com_mun_model_enumeration_F_$STATE.SEARCH,com_mun_model_enumeration_F_$STATE.NEXT];
var com_mun_model_enumeration_IOTYPE = $hxClasses["com.mun.model.enumeration.IOTYPE"] = { __ename__ : ["com","mun","model","enumeration","IOTYPE"], __constructs__ : ["INPUT","S","D","CLK","OUTPUT","Q","QN"] };
com_mun_model_enumeration_IOTYPE.INPUT = ["INPUT",0];
com_mun_model_enumeration_IOTYPE.INPUT.toString = $estr;
com_mun_model_enumeration_IOTYPE.INPUT.__enum__ = com_mun_model_enumeration_IOTYPE;
com_mun_model_enumeration_IOTYPE.S = ["S",1];
com_mun_model_enumeration_IOTYPE.S.toString = $estr;
com_mun_model_enumeration_IOTYPE.S.__enum__ = com_mun_model_enumeration_IOTYPE;
com_mun_model_enumeration_IOTYPE.D = ["D",2];
com_mun_model_enumeration_IOTYPE.D.toString = $estr;
com_mun_model_enumeration_IOTYPE.D.__enum__ = com_mun_model_enumeration_IOTYPE;
com_mun_model_enumeration_IOTYPE.CLK = ["CLK",3];
com_mun_model_enumeration_IOTYPE.CLK.toString = $estr;
com_mun_model_enumeration_IOTYPE.CLK.__enum__ = com_mun_model_enumeration_IOTYPE;
com_mun_model_enumeration_IOTYPE.OUTPUT = ["OUTPUT",4];
com_mun_model_enumeration_IOTYPE.OUTPUT.toString = $estr;
com_mun_model_enumeration_IOTYPE.OUTPUT.__enum__ = com_mun_model_enumeration_IOTYPE;
com_mun_model_enumeration_IOTYPE.Q = ["Q",5];
com_mun_model_enumeration_IOTYPE.Q.toString = $estr;
com_mun_model_enumeration_IOTYPE.Q.__enum__ = com_mun_model_enumeration_IOTYPE;
com_mun_model_enumeration_IOTYPE.QN = ["QN",6];
com_mun_model_enumeration_IOTYPE.QN.toString = $estr;
com_mun_model_enumeration_IOTYPE.QN.__enum__ = com_mun_model_enumeration_IOTYPE;
com_mun_model_enumeration_IOTYPE.__empty_constructs__ = [com_mun_model_enumeration_IOTYPE.INPUT,com_mun_model_enumeration_IOTYPE.S,com_mun_model_enumeration_IOTYPE.D,com_mun_model_enumeration_IOTYPE.CLK,com_mun_model_enumeration_IOTYPE.OUTPUT,com_mun_model_enumeration_IOTYPE.Q,com_mun_model_enumeration_IOTYPE.QN];
var com_mun_model_enumeration_KEY = $hxClasses["com.mun.model.enumeration.KEY"] = { __ename__ : ["com","mun","model","enumeration","KEY"], __constructs__ : ["NONE","ALT_KEY"] };
com_mun_model_enumeration_KEY.NONE = ["NONE",0];
com_mun_model_enumeration_KEY.NONE.toString = $estr;
com_mun_model_enumeration_KEY.NONE.__enum__ = com_mun_model_enumeration_KEY;
com_mun_model_enumeration_KEY.ALT_KEY = ["ALT_KEY",1];
com_mun_model_enumeration_KEY.ALT_KEY.toString = $estr;
com_mun_model_enumeration_KEY.ALT_KEY.__enum__ = com_mun_model_enumeration_KEY;
com_mun_model_enumeration_KEY.__empty_constructs__ = [com_mun_model_enumeration_KEY.NONE,com_mun_model_enumeration_KEY.ALT_KEY];
var com_mun_model_enumeration_K_$STATE = $hxClasses["com.mun.model.enumeration.K_STATE"] = { __ename__ : ["com","mun","model","enumeration","K_STATE"], __constructs__ : ["IDLE","KEY_UP","KEY_DOWN"] };
com_mun_model_enumeration_K_$STATE.IDLE = ["IDLE",0];
com_mun_model_enumeration_K_$STATE.IDLE.toString = $estr;
com_mun_model_enumeration_K_$STATE.IDLE.__enum__ = com_mun_model_enumeration_K_$STATE;
com_mun_model_enumeration_K_$STATE.KEY_UP = ["KEY_UP",1];
com_mun_model_enumeration_K_$STATE.KEY_UP.toString = $estr;
com_mun_model_enumeration_K_$STATE.KEY_UP.__enum__ = com_mun_model_enumeration_K_$STATE;
com_mun_model_enumeration_K_$STATE.KEY_DOWN = ["KEY_DOWN",2];
com_mun_model_enumeration_K_$STATE.KEY_DOWN.toString = $estr;
com_mun_model_enumeration_K_$STATE.KEY_DOWN.__enum__ = com_mun_model_enumeration_K_$STATE;
com_mun_model_enumeration_K_$STATE.__empty_constructs__ = [com_mun_model_enumeration_K_$STATE.IDLE,com_mun_model_enumeration_K_$STATE.KEY_UP,com_mun_model_enumeration_K_$STATE.KEY_DOWN];
var com_mun_model_enumeration_MODE = $hxClasses["com.mun.model.enumeration.MODE"] = { __ename__ : ["com","mun","model","enumeration","MODE"], __constructs__ : ["EXCLUDE_PARENTS","INCLUDE_PARENTS"] };
com_mun_model_enumeration_MODE.EXCLUDE_PARENTS = ["EXCLUDE_PARENTS",0];
com_mun_model_enumeration_MODE.EXCLUDE_PARENTS.toString = $estr;
com_mun_model_enumeration_MODE.EXCLUDE_PARENTS.__enum__ = com_mun_model_enumeration_MODE;
com_mun_model_enumeration_MODE.INCLUDE_PARENTS = ["INCLUDE_PARENTS",1];
com_mun_model_enumeration_MODE.INCLUDE_PARENTS.toString = $estr;
com_mun_model_enumeration_MODE.INCLUDE_PARENTS.__enum__ = com_mun_model_enumeration_MODE;
com_mun_model_enumeration_MODE.__empty_constructs__ = [com_mun_model_enumeration_MODE.EXCLUDE_PARENTS,com_mun_model_enumeration_MODE.INCLUDE_PARENTS];
var com_mun_model_enumeration_M_$STATE = $hxClasses["com.mun.model.enumeration.M_STATE"] = { __ename__ : ["com","mun","model","enumeration","M_STATE"], __constructs__ : ["IDLE","MOUSE_DOWN","MOUSE_UP"] };
com_mun_model_enumeration_M_$STATE.IDLE = ["IDLE",0];
com_mun_model_enumeration_M_$STATE.IDLE.toString = $estr;
com_mun_model_enumeration_M_$STATE.IDLE.__enum__ = com_mun_model_enumeration_M_$STATE;
com_mun_model_enumeration_M_$STATE.MOUSE_DOWN = ["MOUSE_DOWN",1];
com_mun_model_enumeration_M_$STATE.MOUSE_DOWN.toString = $estr;
com_mun_model_enumeration_M_$STATE.MOUSE_DOWN.__enum__ = com_mun_model_enumeration_M_$STATE;
com_mun_model_enumeration_M_$STATE.MOUSE_UP = ["MOUSE_UP",2];
com_mun_model_enumeration_M_$STATE.MOUSE_UP.toString = $estr;
com_mun_model_enumeration_M_$STATE.MOUSE_UP.__enum__ = com_mun_model_enumeration_M_$STATE;
com_mun_model_enumeration_M_$STATE.__empty_constructs__ = [com_mun_model_enumeration_M_$STATE.IDLE,com_mun_model_enumeration_M_$STATE.MOUSE_DOWN,com_mun_model_enumeration_M_$STATE.MOUSE_UP];
var com_mun_model_enumeration_ORIENTATION = $hxClasses["com.mun.model.enumeration.ORIENTATION"] = { __ename__ : ["com","mun","model","enumeration","ORIENTATION"], __constructs__ : ["NORTH","SOUTH","WEST","EAST","UNKNOW"] };
com_mun_model_enumeration_ORIENTATION.NORTH = ["NORTH",0];
com_mun_model_enumeration_ORIENTATION.NORTH.toString = $estr;
com_mun_model_enumeration_ORIENTATION.NORTH.__enum__ = com_mun_model_enumeration_ORIENTATION;
com_mun_model_enumeration_ORIENTATION.SOUTH = ["SOUTH",1];
com_mun_model_enumeration_ORIENTATION.SOUTH.toString = $estr;
com_mun_model_enumeration_ORIENTATION.SOUTH.__enum__ = com_mun_model_enumeration_ORIENTATION;
com_mun_model_enumeration_ORIENTATION.WEST = ["WEST",2];
com_mun_model_enumeration_ORIENTATION.WEST.toString = $estr;
com_mun_model_enumeration_ORIENTATION.WEST.__enum__ = com_mun_model_enumeration_ORIENTATION;
com_mun_model_enumeration_ORIENTATION.EAST = ["EAST",3];
com_mun_model_enumeration_ORIENTATION.EAST.toString = $estr;
com_mun_model_enumeration_ORIENTATION.EAST.__enum__ = com_mun_model_enumeration_ORIENTATION;
com_mun_model_enumeration_ORIENTATION.UNKNOW = ["UNKNOW",4];
com_mun_model_enumeration_ORIENTATION.UNKNOW.toString = $estr;
com_mun_model_enumeration_ORIENTATION.UNKNOW.__enum__ = com_mun_model_enumeration_ORIENTATION;
com_mun_model_enumeration_ORIENTATION.__empty_constructs__ = [com_mun_model_enumeration_ORIENTATION.NORTH,com_mun_model_enumeration_ORIENTATION.SOUTH,com_mun_model_enumeration_ORIENTATION.WEST,com_mun_model_enumeration_ORIENTATION.EAST,com_mun_model_enumeration_ORIENTATION.UNKNOW];
var com_mun_model_enumeration_POINT_$MODE = $hxClasses["com.mun.model.enumeration.POINT_MODE"] = { __ename__ : ["com","mun","model","enumeration","POINT_MODE"], __constructs__ : ["ONE","PATH"] };
com_mun_model_enumeration_POINT_$MODE.ONE = ["ONE",0];
com_mun_model_enumeration_POINT_$MODE.ONE.toString = $estr;
com_mun_model_enumeration_POINT_$MODE.ONE.__enum__ = com_mun_model_enumeration_POINT_$MODE;
com_mun_model_enumeration_POINT_$MODE.PATH = ["PATH",1];
com_mun_model_enumeration_POINT_$MODE.PATH.toString = $estr;
com_mun_model_enumeration_POINT_$MODE.PATH.__enum__ = com_mun_model_enumeration_POINT_$MODE;
com_mun_model_enumeration_POINT_$MODE.__empty_constructs__ = [com_mun_model_enumeration_POINT_$MODE.ONE,com_mun_model_enumeration_POINT_$MODE.PATH];
var com_mun_model_enumeration_VALUE_$LOGIC = $hxClasses["com.mun.model.enumeration.VALUE_LOGIC"] = { __ename__ : ["com","mun","model","enumeration","VALUE_LOGIC"], __constructs__ : ["FALSE","TRUE","UNDEFINED","RISING_EDGE","DOWN_EDGE"] };
com_mun_model_enumeration_VALUE_$LOGIC.FALSE = ["FALSE",0];
com_mun_model_enumeration_VALUE_$LOGIC.FALSE.toString = $estr;
com_mun_model_enumeration_VALUE_$LOGIC.FALSE.__enum__ = com_mun_model_enumeration_VALUE_$LOGIC;
com_mun_model_enumeration_VALUE_$LOGIC.TRUE = ["TRUE",1];
com_mun_model_enumeration_VALUE_$LOGIC.TRUE.toString = $estr;
com_mun_model_enumeration_VALUE_$LOGIC.TRUE.__enum__ = com_mun_model_enumeration_VALUE_$LOGIC;
com_mun_model_enumeration_VALUE_$LOGIC.UNDEFINED = ["UNDEFINED",2];
com_mun_model_enumeration_VALUE_$LOGIC.UNDEFINED.toString = $estr;
com_mun_model_enumeration_VALUE_$LOGIC.UNDEFINED.__enum__ = com_mun_model_enumeration_VALUE_$LOGIC;
com_mun_model_enumeration_VALUE_$LOGIC.RISING_EDGE = ["RISING_EDGE",3];
com_mun_model_enumeration_VALUE_$LOGIC.RISING_EDGE.toString = $estr;
com_mun_model_enumeration_VALUE_$LOGIC.RISING_EDGE.__enum__ = com_mun_model_enumeration_VALUE_$LOGIC;
com_mun_model_enumeration_VALUE_$LOGIC.DOWN_EDGE = ["DOWN_EDGE",4];
com_mun_model_enumeration_VALUE_$LOGIC.DOWN_EDGE.toString = $estr;
com_mun_model_enumeration_VALUE_$LOGIC.DOWN_EDGE.__enum__ = com_mun_model_enumeration_VALUE_$LOGIC;
com_mun_model_enumeration_VALUE_$LOGIC.__empty_constructs__ = [com_mun_model_enumeration_VALUE_$LOGIC.FALSE,com_mun_model_enumeration_VALUE_$LOGIC.TRUE,com_mun_model_enumeration_VALUE_$LOGIC.UNDEFINED,com_mun_model_enumeration_VALUE_$LOGIC.RISING_EDGE,com_mun_model_enumeration_VALUE_$LOGIC.DOWN_EDGE];
var com_mun_model_gates_GateAbstract = function(leastInportNum) {
	this.leastInportNum = leastInportNum;
	this.sequence = -1;
};
$hxClasses["com.mun.model.gates.GateAbstract"] = com_mun_model_gates_GateAbstract;
com_mun_model_gates_GateAbstract.__name__ = ["com","mun","model","gates","GateAbstract"];
com_mun_model_gates_GateAbstract.prototype = {
	leastInportNum: null
	,sequence: null
	,component: null
	,get_component: function() {
		return this.component;
	}
	,set_component: function(value) {
		this.component = value;
	}
	,getLeastInportNumber: function() {
		return this.leastInportNum;
	}
	,addInPort: function() {
		return new com_mun_model_component_Inport();
	}
	,addOutPort: function() {
		return new com_mun_model_component_Outport();
	}
	,get_sequence: function() {
		return this.sequence;
	}
	,set_sequence: function(value) {
		return this.sequence = value;
	}
	,updateInPortPosition: function(portArray,xPosition,yPosition,height,width,orientation) {
		switch(orientation[1]) {
		case 0:
			var _g1 = 0;
			var _g = portArray.length;
			while(_g1 < _g) {
				var i = _g1++;
				portArray[i].set_xPosition(xPosition - width / 2 + width / (portArray.length + 1) * (i + 1));
				portArray[i].set_yPosition(yPosition + height / 2);
			}
			break;
		case 1:
			var _g11 = 0;
			var _g2 = portArray.length;
			while(_g11 < _g2) {
				var i1 = _g11++;
				portArray[i1].set_xPosition(xPosition - width / 2 + width / (portArray.length + 1) * (i1 + 1));
				portArray[i1].set_yPosition(yPosition - height / 2);
			}
			break;
		case 2:
			var _g12 = 0;
			var _g3 = portArray.length;
			while(_g12 < _g3) {
				var i2 = _g12++;
				portArray[i2].set_xPosition(xPosition + width / 2);
				portArray[i2].set_yPosition(height / (portArray.length + 1) * (i2 + 1) + (yPosition - height / 2));
			}
			break;
		case 3:
			var _g13 = 0;
			var _g4 = portArray.length;
			while(_g13 < _g4) {
				var i3 = _g13++;
				portArray[i3].set_xPosition(xPosition - width / 2);
				portArray[i3].set_yPosition(height / (portArray.length + 1) * (i3 + 1) + (yPosition - height / 2));
			}
			break;
		default:
		}
		return portArray;
	}
	,updateOutPortPosition: function(portArray,xPosition,yPosition,height,width,orientation) {
		switch(orientation[1]) {
		case 0:
			var _g1 = 0;
			var _g = portArray.length;
			while(_g1 < _g) {
				var i = _g1++;
				portArray[i].set_xPosition(xPosition);
				portArray[i].set_yPosition(yPosition - height / 2);
			}
			break;
		case 1:
			var _g11 = 0;
			var _g2 = portArray.length;
			while(_g11 < _g2) {
				var i1 = _g11++;
				portArray[i1].set_xPosition(xPosition);
				portArray[i1].set_yPosition(yPosition + height / 2);
			}
			break;
		case 2:
			var _g12 = 0;
			var _g3 = portArray.length;
			while(_g12 < _g3) {
				var i2 = _g12++;
				portArray[i2].set_xPosition(xPosition - width / 2);
				portArray[i2].set_yPosition(yPosition);
			}
			break;
		case 3:
			var _g13 = 0;
			var _g4 = portArray.length;
			while(_g13 < _g4) {
				var i3 = _g13++;
				portArray[i3].set_xPosition(xPosition + width / 2);
				portArray[i3].set_yPosition(yPosition);
			}
			break;
		default:
		}
		return portArray;
	}
	,findHitList: function(coordinate,mode) {
		var hitObjectArray = [];
		var component = this.isInComponent(coordinate);
		if(component != null) {
			var hitObject = new com_mun_type_HitObject();
			hitObject.set_component(component);
			hitObjectArray.push(hitObject);
		}
		var port = this.isOnPort(coordinate);
		if(port != null) {
			var hitObject1 = new com_mun_type_HitObject();
			hitObject1.set_port(port);
			hitObjectArray.push(hitObject1);
		}
		return hitObjectArray;
	}
	,isInComponent: function(coordinate) {
		if(this.isInScope(this.component.get_xPosition(),this.component.get_yPosition(),coordinate.get_xPosition(),coordinate.get_yPosition(),this.component.get_height(),this.component.get_width()) == true) {
			return this.component;
		}
		return null;
	}
	,isInScope: function(orignalXposition,orignalYposition,mouseXPosition,mouseYposition,heigh,width) {
		if(mouseXPosition >= orignalXposition - width / 2 && mouseXPosition <= orignalXposition + width / 2 && (mouseYposition >= orignalYposition - heigh / 2 && mouseYposition <= orignalYposition + heigh / 2)) {
			return true;
		} else {
			return false;
		}
	}
	,isOnPort: function(cooridnate) {
		var port;
		var j = this.component.get_inportIterator();
		while(j.hasNext()) {
			var j1 = j.next();
			if(this.isInCircle(cooridnate,j1.get_xPosition(),j1.get_yPosition())) {
				port = j1;
				return port;
			}
		}
		var j2 = this.component.get_outportIterator();
		while(j2.hasNext()) {
			var j3 = j2.next();
			if(this.isInCircle(cooridnate,j3.get_xPosition(),j3.get_yPosition())) {
				port = j3;
				return port;
			}
		}
		return null;
	}
	,isInCircle: function(coordinate,orignalXPosition,orignalYPosition) {
		if(Math.abs(coordinate.get_xPosition() - orignalXPosition) <= com_mun_global_Constant.portRadius && Math.abs(coordinate.get_yPosition() - orignalYPosition) <= com_mun_global_Constant.portRadius) {
			return true;
		} else {
			return false;
		}
	}
	,findWorldPoint: function(worldCoordinate,mode) {
		return [];
	}
	,getInnerCircuitDiagram: function() {
		return null;
	}
	,createJSon: function() {
		var jsonString = "{ \"leastInportNum\": \"" + this.leastInportNum + "\",";
		jsonString += "\"sequence\": \"" + this.sequence + "\"}";
		return jsonString;
	}
	,checkInnerCircuitDiagramPortsChange: function() {
		return false;
	}
	,__class__: com_mun_model_gates_GateAbstract
};
var com_mun_model_gates_ComponentKind = function() { };
$hxClasses["com.mun.model.gates.ComponentKind"] = com_mun_model_gates_ComponentKind;
com_mun_model_gates_ComponentKind.__name__ = ["com","mun","model","gates","ComponentKind"];
com_mun_model_gates_ComponentKind.prototype = {
	getLeastInportNumber: null
	,getname: null
	,getAttr: null
	,algorithm: null
	,createPorts: null
	,checkInnerCircuitDiagramPortsChange: null
	,addInPort: null
	,addOutPort: null
	,updateInPortPosition: null
	,updateOutPortPosition: null
	,drawComponent: null
	,get_sequence: null
	,set_sequence: null
	,get_component: null
	,set_component: null
	,findHitList: null
	,findWorldPoint: null
	,getInnerCircuitDiagram: null
	,createJSon: null
	,setname: null
	,__class__: com_mun_model_gates_ComponentKind
};
var com_mun_model_gates_AND = function() {
	this.delay = 0;
	this.Attr = [];
	this.nameOfTheComponentKind = "AND";
	com_mun_model_gates_GateAbstract.call(this,2);
	this.Attr.push(new com_mun_model_attribute_IntAttr("delay"));
	this.Attr.push(new com_mun_model_attribute_StringAttr("name"));
	this.Attr.push(new com_mun_model_attribute_OrientationAttr());
};
$hxClasses["com.mun.model.gates.AND"] = com_mun_model_gates_AND;
com_mun_model_gates_AND.__name__ = ["com","mun","model","gates","AND"];
com_mun_model_gates_AND.__interfaces__ = [com_mun_model_gates_ComponentKind];
com_mun_model_gates_AND.__super__ = com_mun_model_gates_GateAbstract;
com_mun_model_gates_AND.prototype = $extend(com_mun_model_gates_GateAbstract.prototype,{
	nameOfTheComponentKind: null
	,Attr: null
	,delay: null
	,getAttr: function() {
		return this.Attr;
	}
	,getDelay: function() {
		return this.delay;
	}
	,setDelay: function(value) {
		var a = this.delay;
		this.delay = value;
		return a;
	}
	,getname: function() {
		return this.nameOfTheComponentKind;
	}
	,setname: function(s) {
		this.nameOfTheComponentKind = s;
	}
	,algorithm: function(portArray) {
		var port;
		var value = com_mun_model_enumeration_VALUE_$LOGIC.TRUE;
		var _g = 0;
		while(_g < portArray.length) {
			var port1 = portArray[_g];
			++_g;
			if(port1.get_portDescription() == com_mun_model_enumeration_IOTYPE.INPUT && port1.get_value() == com_mun_model_enumeration_VALUE_$LOGIC.FALSE) {
				value = com_mun_model_enumeration_VALUE_$LOGIC.FALSE;
				break;
			}
		}
		var _g1 = 0;
		while(_g1 < portArray.length) {
			var port2 = portArray[_g1];
			++_g1;
			if(port2.get_portDescription() == com_mun_model_enumeration_IOTYPE.OUTPUT) {
				port2.set_value(value);
			}
		}
		return portArray;
	}
	,createPorts: function(xPosition,yPosition,height,width,orientation,inportNum) {
		var portArray = [];
		switch(orientation[1]) {
		case 0:
			var counter = 0;
			while(counter < inportNum) {
				var inport = new com_mun_model_component_Inport(xPosition - width / 2 + width / (inportNum + 1) * (counter + 1),yPosition + height / 2);
				inport.set_portDescription(com_mun_model_enumeration_IOTYPE.INPUT);
				portArray.push(inport);
				++counter;
			}
			var outport_ = new com_mun_model_component_Outport(xPosition,yPosition - height / 2);
			outport_.set_portDescription(com_mun_model_enumeration_IOTYPE.OUTPUT);
			portArray.push(outport_);
			break;
		case 1:
			var counter1 = 0;
			while(counter1 < inportNum) {
				var inport1 = new com_mun_model_component_Inport(xPosition - width / 2 + width / (inportNum + 1) * (counter1 + 1),yPosition - height / 2);
				inport1.set_portDescription(com_mun_model_enumeration_IOTYPE.INPUT);
				portArray.push(inport1);
				++counter1;
			}
			var outport_1 = new com_mun_model_component_Outport(xPosition,yPosition + height / 2);
			outport_1.set_portDescription(com_mun_model_enumeration_IOTYPE.OUTPUT);
			portArray.push(outport_1);
			break;
		case 2:
			var counter2 = 0;
			while(counter2 < inportNum) {
				var inport2 = new com_mun_model_component_Inport(xPosition + width / 2,height / (inportNum + 1) * (counter2 + 1) + (yPosition - height / 2));
				inport2.set_portDescription(com_mun_model_enumeration_IOTYPE.INPUT);
				portArray.push(inport2);
				++counter2;
			}
			var outport_2 = new com_mun_model_component_Outport(xPosition - width / 2,yPosition);
			outport_2.set_portDescription(com_mun_model_enumeration_IOTYPE.OUTPUT);
			portArray.push(outport_2);
			break;
		case 3:
			var counter3 = 0;
			while(counter3 < inportNum) {
				var inport3 = new com_mun_model_component_Inport(xPosition - width / 2,height / (inportNum + 1) * (counter3 + 1) + (yPosition - height / 2));
				inport3.set_portDescription(com_mun_model_enumeration_IOTYPE.INPUT);
				portArray.push(inport3);
				++counter3;
			}
			var outport_3 = new com_mun_model_component_Outport(xPosition + width / 2,yPosition);
			outport_3.set_portDescription(com_mun_model_enumeration_IOTYPE.OUTPUT);
			portArray.push(outport_3);
			break;
		default:
		}
		return portArray;
	}
	,drawComponent: function(drawingAdapter,highLight,linkAndComponentArray) {
		var drawComponent = new com_mun_view_drawComponents_DrawAND(this.component,drawingAdapter);
		if(highLight) {
			drawComponent.drawCorrespondingComponent("red");
		} else {
			drawComponent.drawCorrespondingComponent("black");
		}
	}
	,__class__: com_mun_model_gates_AND
});
var com_mun_model_gates_CompoundComponent = function(circuitDiagram) {
	this.attr = [];
	this.nameOfTheComponentKind = "CC";
	this.circuitDiagram = circuitDiagram;
	var inputCounter = 0;
	this.outputCounter = 0;
	var i = this.circuitDiagram.get_componentIterator();
	while(i.hasNext()) {
		var i1 = i.next();
		if(i1.getNameOfTheComponentKind() == "Input") {
			++inputCounter;
		} else if(i1.getNameOfTheComponentKind() == "Output") {
			this.outputCounter++;
		}
	}
	com_mun_model_gates_GateAbstract.call(this,inputCounter);
	this.attr.push(new com_mun_model_attribute_StringAttr("name"));
	this.attr.push(new com_mun_model_attribute_OrientationAttr());
	this.attr.push(new com_mun_model_attribute_StringAttr("id"));
	this.attr.push(new com_mun_model_attribute_IntAttr("delay"));
};
$hxClasses["com.mun.model.gates.CompoundComponent"] = com_mun_model_gates_CompoundComponent;
com_mun_model_gates_CompoundComponent.__name__ = ["com","mun","model","gates","CompoundComponent"];
com_mun_model_gates_CompoundComponent.__interfaces__ = [com_mun_model_gates_ComponentKind];
com_mun_model_gates_CompoundComponent.__super__ = com_mun_model_gates_GateAbstract;
com_mun_model_gates_CompoundComponent.prototype = $extend(com_mun_model_gates_GateAbstract.prototype,{
	circuitDiagram: null
	,outputCounter: null
	,nameOfTheComponentKind: null
	,attr: null
	,getAttr: function() {
		return this.attr;
	}
	,setname: function(s) {
		this.nameOfTheComponentKind = s;
	}
	,getname: function() {
		return this.nameOfTheComponentKind;
	}
	,resetCircuit: function() {
		this.circuitDiagram = null;
	}
	,loadCircuit: function(cd) {
		this.circuitDiagram = cd;
	}
	,getInnerCircuitDiagram: function() {
		return this.circuitDiagram;
	}
	,algorithm: function(portArray) {
		return null;
	}
	,checkInnerCircuitDiagramPortsChange: function() {
		var inputNumberTemp = 0;
		var outputNumberTemp = 0;
		var i = this.circuitDiagram.get_componentIterator();
		while(i.hasNext()) {
			var i1 = i.next();
			if(i1.getNameOfTheComponentKind() == "Input") {
				++inputNumberTemp;
			}
			if(i1.getNameOfTheComponentKind() == "Output") {
				++outputNumberTemp;
			}
		}
		if(inputNumberTemp == this.component.get_inportIteratorLength() && outputNumberTemp == this.component.get_outportIteratorLength()) {
			return false;
		} else {
			return true;
		}
	}
	,createPorts: function(xPosition,yPosition,height,width,orientation,inportNum) {
		var portArray = [];
		switch(orientation[1]) {
		case 0:
			var i = this.circuitDiagram.get_componentIterator();
			while(i.hasNext()) {
				var i1 = i.next();
				if(i1.getNameOfTheComponentKind() == "Input") {
					var inport_1 = new com_mun_model_component_Inport(xPosition - width / 2 + width / (this.leastInportNum + 1) * (i1.get_componentKind().get_sequence() + 1),height + height / 2);
					inport_1.set_sequence(i1.get_componentKind().get_sequence());
					portArray.push(inport_1);
				} else if(i1.getNameOfTheComponentKind() == "Output") {
					var outport_ = new com_mun_model_component_Outport(xPosition - width / 2 + width / (this.outputCounter + 1) * (i1.get_componentKind().get_sequence() + 1),height - height / 2);
					outport_.set_sequence(i1.get_componentKind().get_sequence());
					portArray.push(outport_);
				}
			}
			break;
		case 1:
			var i2 = this.circuitDiagram.get_componentIterator();
			while(i2.hasNext()) {
				var i3 = i2.next();
				if(i3.getNameOfTheComponentKind() == "Input") {
					var inport_11 = new com_mun_model_component_Inport(xPosition - width / 2 + width / (this.leastInportNum + 1) * (i3.get_componentKind().get_sequence() + 1),height - height / 2);
					inport_11.set_sequence(i3.get_componentKind().get_sequence());
					portArray.push(inport_11);
				} else if(i3.getNameOfTheComponentKind() == "Output") {
					var outport_1 = new com_mun_model_component_Outport(xPosition - width / 2 + width / (this.outputCounter + 1) * (i3.get_componentKind().get_sequence() + 1),height + height / 2);
					outport_1.set_sequence(i3.get_componentKind().get_sequence());
					portArray.push(outport_1);
				}
			}
			break;
		case 2:
			var i4 = this.circuitDiagram.get_componentIterator();
			while(i4.hasNext()) {
				var i5 = i4.next();
				if(i5.getNameOfTheComponentKind() == "Input") {
					var inport_12 = new com_mun_model_component_Inport(xPosition + width / 2,height / (this.leastInportNum + 1) * (i5.get_componentKind().get_sequence() + 1) + (yPosition - height / 2));
					inport_12.set_sequence(i5.get_componentKind().get_sequence());
					portArray.push(inport_12);
				} else if(i5.getNameOfTheComponentKind() == "Output") {
					var outport_2 = new com_mun_model_component_Outport(xPosition - width / 2,height / (this.outputCounter + 1) * (i5.get_componentKind().get_sequence() + 1) + (yPosition - height / 2));
					outport_2.set_sequence(i5.get_componentKind().get_sequence());
					portArray.push(outport_2);
				}
			}
			break;
		case 3:
			var i6 = this.circuitDiagram.get_componentIterator();
			while(i6.hasNext()) {
				var i7 = i6.next();
				if(i7.getNameOfTheComponentKind() == "Input") {
					var inport_13 = new com_mun_model_component_Inport(xPosition - width / 2,height / (this.leastInportNum + 1) * (i7.get_componentKind().get_sequence() + 1) + (yPosition - height / 2));
					inport_13.set_sequence(i7.get_componentKind().get_sequence());
					portArray.push(inport_13);
				} else if(i7.getNameOfTheComponentKind() == "Output") {
					var outport_3 = new com_mun_model_component_Outport(xPosition + width / 2,height / (this.outputCounter + 1) * (i7.get_componentKind().get_sequence() + 1) + (yPosition - height / 2));
					outport_3.set_sequence(i7.get_componentKind().get_sequence());
					portArray.push(outport_3);
				}
			}
			break;
		default:
		}
		return portArray;
	}
	,drawComponent: function(drawingAdapter,hightLight,linkAndComponentArray) {
		var drawingAdapterTrans = drawingAdapter.transform(this.makeTransform());
		var drawComponent = new com_mun_view_drawComponents_DrawCompoundComponent(this.component,drawingAdapter,drawingAdapterTrans);
		if(hightLight) {
			drawComponent.drawCorrespondingComponent("red");
		} else {
			drawComponent.drawCorrespondingComponent("black");
		}
		if(this.component.get_boxType() == com_mun_model_enumeration_BOX.WHITE_BOX) {
			this.circuitDiagram.draw(drawingAdapterTrans,linkAndComponentArray);
		}
	}
	,makeTransform: function() {
		var transform = com_mun_view_drawingImpl_Transform.identity();
		transform = transform.translate(-this.circuitDiagram.getComponentAndLinkCenterCoordinate().get_xPosition(),-this.circuitDiagram.getComponentAndLinkCenterCoordinate().get_yPosition()).scale(this.component.get_width() / this.circuitDiagram.get_diagramWidth(),this.component.get_height() / this.circuitDiagram.get_diagramHeight()).translate(this.component.get_xPosition(),this.component.get_yPosition());
		return transform;
	}
	,findHitList: function(outerWorldCoordinates,mode) {
		var hitObjectArray = [];
		var hitComponent = this.isInComponent(outerWorldCoordinates);
		if(hitComponent == null) {
			return hitObjectArray;
		} else if(this.component.get_boxType() == com_mun_model_enumeration_BOX.WHITE_BOX) {
			var transform = this.makeTransform();
			var innerWorldCoordinates = transform.pointInvert(outerWorldCoordinates);
			var result = this.circuitDiagram.findHitList(innerWorldCoordinates,mode);
			if(result.length == 0 || mode == com_mun_model_enumeration_MODE.INCLUDE_PARENTS) {
				var hitObject = new com_mun_type_HitObject();
				hitObject.set_component(this.component);
				result.push(hitObject);
			}
			return result;
		} else {
			var hitObject1 = new com_mun_type_HitObject();
			hitObject1.set_component(this.component);
			hitObjectArray.push(hitObject1);
			return hitObjectArray;
		}
	}
	,findWorldPoint: function(worldCoordinate,mode) {
		var worldPointArray = [];
		if(this.isInComponent(worldCoordinate) == null) {
			return worldPointArray;
		} else if(this.component.get_boxType() == com_mun_model_enumeration_BOX.WHITE_BOX) {
			var transform = this.makeTransform();
			var wForDiagram = transform.pointInvert(worldCoordinate);
			return this.circuitDiagram.findWorldPoint(wForDiagram,mode);
		} else {
			return worldPointArray;
		}
	}
	,createJSon: function() {
		var jsonString = "{ \"leastInportNum\": \"" + this.leastInportNum + "\",";
		jsonString += "\"sequence\": \"" + this.sequence + "\",";
		jsonString += "\"CircuitDiagram\": " + this.circuitDiagram.createJSon();
		jsonString += "}";
		return jsonString;
	}
	,__class__: com_mun_model_gates_CompoundComponent
});
var com_mun_model_gates_FlipFlop = function() {
	this.delay = 0;
	this.Attr = [];
	this.nameOfTheComponentKind = "FlipFlop";
	com_mun_model_gates_GateAbstract.call(this,2);
	this.Attr.push(new com_mun_model_attribute_IntAttr("delay"));
	this.Attr.push(new com_mun_model_attribute_StringAttr("name"));
	this.Attr.push(new com_mun_model_attribute_OrientationAttr());
};
$hxClasses["com.mun.model.gates.FlipFlop"] = com_mun_model_gates_FlipFlop;
com_mun_model_gates_FlipFlop.__name__ = ["com","mun","model","gates","FlipFlop"];
com_mun_model_gates_FlipFlop.__interfaces__ = [com_mun_model_gates_ComponentKind];
com_mun_model_gates_FlipFlop.__super__ = com_mun_model_gates_GateAbstract;
com_mun_model_gates_FlipFlop.prototype = $extend(com_mun_model_gates_GateAbstract.prototype,{
	nameOfTheComponentKind: null
	,Attr: null
	,delay: null
	,getAttr: function() {
		return this.Attr;
	}
	,getDelay: function() {
		return this.delay;
	}
	,setname: function(s) {
		this.nameOfTheComponentKind = s;
	}
	,setDelay: function(value) {
		var a = this.delay;
		this.delay = value;
		return a;
	}
	,getname: function() {
		return this.nameOfTheComponentKind;
	}
	,algorithm: function(portArray) {
		var port;
		var value = com_mun_model_enumeration_VALUE_$LOGIC.TRUE;
		var _g = 0;
		while(_g < portArray.length) {
			var port1 = portArray[_g];
			++_g;
			if(port1.get_portDescription() == com_mun_model_enumeration_IOTYPE.CLK) {
				if(port1.get_value() != com_mun_model_enumeration_VALUE_$LOGIC.RISING_EDGE) {
					return portArray;
				}
			}
		}
		var _g1 = 0;
		while(_g1 < portArray.length) {
			var port2 = portArray[_g1];
			++_g1;
			if(port2.get_portDescription() == com_mun_model_enumeration_IOTYPE.D) {
				value = port2.get_value();
			}
		}
		var _g2 = 0;
		while(_g2 < portArray.length) {
			var port3 = portArray[_g2];
			++_g2;
			if(port3.get_portDescription() == com_mun_model_enumeration_IOTYPE.Q) {
				port3.set_value(value);
			}
			if(port3.get_portDescription() == com_mun_model_enumeration_IOTYPE.QN) {
				if(value == com_mun_model_enumeration_VALUE_$LOGIC.TRUE) {
					port3.set_value(com_mun_model_enumeration_VALUE_$LOGIC.FALSE);
				} else if(value == com_mun_model_enumeration_VALUE_$LOGIC.FALSE) {
					port3.set_value(com_mun_model_enumeration_VALUE_$LOGIC.TRUE);
				}
			}
		}
		return portArray;
	}
	,createPorts: function(xPosition,yPosition,height,width,orientation,inportNum) {
		var portArray = [];
		switch(orientation[1]) {
		case 0:
			var inport_D = new com_mun_model_component_Inport(xPosition - width / 2 + width / 3,yPosition + height / 2);
			inport_D.set_portDescription(com_mun_model_enumeration_IOTYPE.D);
			portArray.push(inport_D);
			var inport_CLK = new com_mun_model_component_Inport(xPosition - width / 2 + width / 3 * 2,yPosition + height / 2);
			inport_CLK.set_portDescription(com_mun_model_enumeration_IOTYPE.CLK);
			portArray.push(inport_CLK);
			var outport_Q = new com_mun_model_component_Outport(xPosition - width / 2 + width / 3,yPosition - height / 2);
			outport_Q.set_portDescription(com_mun_model_enumeration_IOTYPE.Q);
			portArray.push(outport_Q);
			var outport_QN = new com_mun_model_component_Outport(xPosition - width / 2 + width / 3 * 2,yPosition - height / 2);
			outport_QN.set_portDescription(com_mun_model_enumeration_IOTYPE.QN);
			portArray.push(outport_QN);
			break;
		case 1:
			var inport_D1 = new com_mun_model_component_Inport(xPosition - width / 2 + width / 3,yPosition - height / 2);
			inport_D1.set_portDescription(com_mun_model_enumeration_IOTYPE.D);
			portArray.push(inport_D1);
			var inport_CLK1 = new com_mun_model_component_Inport(xPosition - width / 2 + width / 3 * 2,yPosition - height / 2);
			inport_CLK1.set_portDescription(com_mun_model_enumeration_IOTYPE.CLK);
			portArray.push(inport_CLK1);
			var outport_Q1 = new com_mun_model_component_Outport(xPosition - width / 2 + width / 3,yPosition + height / 2);
			outport_Q1.set_portDescription(com_mun_model_enumeration_IOTYPE.Q);
			portArray.push(outport_Q1);
			var outport_QN1 = new com_mun_model_component_Outport(xPosition - width / 2 + width / 3 * 2,yPosition + height / 2);
			outport_QN1.set_portDescription(com_mun_model_enumeration_IOTYPE.QN);
			portArray.push(outport_QN1);
			break;
		case 2:
			var inport_D2 = new com_mun_model_component_Inport(xPosition + width / 2,height / 3 + (yPosition - height / 2));
			inport_D2.set_portDescription(com_mun_model_enumeration_IOTYPE.D);
			portArray.push(inport_D2);
			var inport_CLK2 = new com_mun_model_component_Inport(xPosition + width / 2,height / 3 * 2 + (yPosition - height / 2));
			inport_CLK2.set_portDescription(com_mun_model_enumeration_IOTYPE.CLK);
			portArray.push(inport_CLK2);
			var outport_Q2 = new com_mun_model_component_Outport(xPosition - width / 2,height / 3 + (yPosition - height / 2));
			outport_Q2.set_portDescription(com_mun_model_enumeration_IOTYPE.Q);
			portArray.push(outport_Q2);
			var outport_QN2 = new com_mun_model_component_Outport(xPosition - width / 2,height / 3 * 2 + (yPosition - height / 2));
			outport_QN2.set_portDescription(com_mun_model_enumeration_IOTYPE.QN);
			portArray.push(outport_QN2);
			break;
		case 3:
			var inport_D3 = new com_mun_model_component_Inport(xPosition - width / 2,height / 3 + (yPosition - height / 2));
			inport_D3.set_portDescription(com_mun_model_enumeration_IOTYPE.D);
			portArray.push(inport_D3);
			var inport_CLK3 = new com_mun_model_component_Inport(xPosition - width / 2,height / 3 * 2 + (yPosition - height / 2));
			inport_CLK3.set_portDescription(com_mun_model_enumeration_IOTYPE.CLK);
			portArray.push(inport_CLK3);
			var outport_Q3 = new com_mun_model_component_Outport(xPosition + width / 2,height / 3 + (yPosition - height / 2));
			outport_Q3.set_portDescription(com_mun_model_enumeration_IOTYPE.Q);
			portArray.push(outport_Q3);
			var outport_QN3 = new com_mun_model_component_Outport(xPosition + width / 2,height / 3 * 2 + (yPosition - height / 2));
			outport_QN3.set_portDescription(com_mun_model_enumeration_IOTYPE.QN);
			portArray.push(outport_QN3);
			break;
		default:
		}
		return portArray;
	}
	,addInPort: function() {
		return null;
	}
	,updateInPortPosition: function(portArray,xPosition,yPosition,height,width,orientation) {
		switch(orientation[1]) {
		case 0:
			var _g1 = 0;
			var _g = portArray.length;
			while(_g1 < _g) {
				var i = _g1++;
				if(portArray[i].get_portDescription() == com_mun_model_enumeration_IOTYPE.D) {
					portArray[i].set_xPosition(xPosition - width / 2 + width / 3);
					portArray[i].set_yPosition(yPosition + height / 2);
				}
				if(portArray[i].get_portDescription() == com_mun_model_enumeration_IOTYPE.CLK) {
					portArray[i].set_xPosition(xPosition - width / 2 + width / 3 * 2);
					portArray[i].set_yPosition(yPosition + height / 2);
				}
			}
			break;
		case 1:
			var _g11 = 0;
			var _g2 = portArray.length;
			while(_g11 < _g2) {
				var i1 = _g11++;
				if(portArray[i1].get_portDescription() == com_mun_model_enumeration_IOTYPE.D) {
					portArray[i1].set_xPosition(xPosition - width / 2 + width / 3);
					portArray[i1].set_yPosition(yPosition - height / 2);
				}
				if(portArray[i1].get_portDescription() == com_mun_model_enumeration_IOTYPE.CLK) {
					portArray[i1].set_xPosition(xPosition - width / 2 + width / 3 * 2);
					portArray[i1].set_yPosition(yPosition - height / 2);
				}
			}
			break;
		case 2:
			var _g12 = 0;
			var _g3 = portArray.length;
			while(_g12 < _g3) {
				var i2 = _g12++;
				if(portArray[i2].get_portDescription() == com_mun_model_enumeration_IOTYPE.D) {
					portArray[i2].set_xPosition(xPosition + width / 2);
					portArray[i2].set_yPosition(height / 3 + (yPosition - height / 2));
				}
				if(portArray[i2].get_portDescription() == com_mun_model_enumeration_IOTYPE.CLK) {
					portArray[i2].set_xPosition(xPosition + width / 2);
					portArray[i2].set_yPosition(height / 3 * 2 + (yPosition - height / 2));
				}
			}
			break;
		case 3:
			var _g13 = 0;
			var _g4 = portArray.length;
			while(_g13 < _g4) {
				var i3 = _g13++;
				if(portArray[i3].get_portDescription() == com_mun_model_enumeration_IOTYPE.D) {
					portArray[i3].set_xPosition(xPosition - width / 2);
					portArray[i3].set_yPosition(height / 3 + (yPosition - height / 2));
				}
				if(portArray[i3].get_portDescription() == com_mun_model_enumeration_IOTYPE.CLK) {
					portArray[i3].set_xPosition(xPosition - width / 2);
					portArray[i3].set_yPosition(height / 3 * 2 + (yPosition - height / 2));
				}
			}
			break;
		default:
		}
		return portArray;
	}
	,updateOutPortPosition: function(portArray,xPosition,yPosition,height,width,orientation) {
		switch(orientation[1]) {
		case 0:
			var _g1 = 0;
			var _g = portArray.length;
			while(_g1 < _g) {
				var i = _g1++;
				if(portArray[i].get_portDescription() == com_mun_model_enumeration_IOTYPE.Q) {
					portArray[i].set_xPosition(xPosition - width / 2 + width / 3);
					portArray[i].set_yPosition(yPosition - height / 2);
				}
				if(portArray[i].get_portDescription() == com_mun_model_enumeration_IOTYPE.QN) {
					portArray[i].set_xPosition(xPosition - width / 2 + width / 3 * 2);
					portArray[i].set_yPosition(yPosition - height / 2);
				}
			}
			break;
		case 1:
			var _g11 = 0;
			var _g2 = portArray.length;
			while(_g11 < _g2) {
				var i1 = _g11++;
				if(portArray[i1].get_portDescription() == com_mun_model_enumeration_IOTYPE.Q) {
					portArray[i1].set_xPosition(xPosition - width / 2 + width / 3);
					portArray[i1].set_yPosition(yPosition + height / 2);
				}
				if(portArray[i1].get_portDescription() == com_mun_model_enumeration_IOTYPE.QN) {
					portArray[i1].set_xPosition(xPosition - width / 2 + width / 3 * 2);
					portArray[i1].set_yPosition(yPosition + height / 2);
				}
			}
			break;
		case 2:
			var _g12 = 0;
			var _g3 = portArray.length;
			while(_g12 < _g3) {
				var i2 = _g12++;
				if(portArray[i2].get_portDescription() == com_mun_model_enumeration_IOTYPE.Q) {
					portArray[i2].set_xPosition(xPosition - width / 2);
					portArray[i2].set_yPosition(height / 3 + (yPosition - height / 2));
				}
				if(portArray[i2].get_portDescription() == com_mun_model_enumeration_IOTYPE.QN) {
					portArray[i2].set_xPosition(xPosition - width / 2);
					portArray[i2].set_yPosition(height / 3 * 2 + (yPosition - height / 2));
				}
			}
			break;
		case 3:
			var _g13 = 0;
			var _g4 = portArray.length;
			while(_g13 < _g4) {
				var i3 = _g13++;
				if(portArray[i3].get_portDescription() == com_mun_model_enumeration_IOTYPE.Q) {
					portArray[i3].set_xPosition(xPosition + width / 2);
					portArray[i3].set_yPosition(height / 3 + (yPosition - height / 2));
				}
				if(portArray[i3].get_portDescription() == com_mun_model_enumeration_IOTYPE.QN) {
					portArray[i3].set_xPosition(xPosition + width / 2);
					portArray[i3].set_yPosition(height / 3 * 2 + (yPosition - height / 2));
				}
			}
			break;
		default:
		}
		return portArray;
	}
	,drawComponent: function(drawingAdapter,highLight,linkAndComponentArray) {
		var drawComponent = new com_mun_view_drawComponents_DrawFlipFlop(this.component,drawingAdapter);
		if(highLight) {
			drawComponent.drawCorrespondingComponent("red");
		} else {
			drawComponent.drawCorrespondingComponent("black");
		}
	}
	,__class__: com_mun_model_gates_FlipFlop
});
var com_mun_model_gates_Input = function() {
	this.delay = 0;
	this.Attr = [];
	this.nameOfTheComponentKind = "Input";
	com_mun_model_gates_GateAbstract.call(this,1);
	this.Attr.push(new com_mun_model_attribute_StringAttr("name"));
};
$hxClasses["com.mun.model.gates.Input"] = com_mun_model_gates_Input;
com_mun_model_gates_Input.__name__ = ["com","mun","model","gates","Input"];
com_mun_model_gates_Input.__interfaces__ = [com_mun_model_gates_ComponentKind];
com_mun_model_gates_Input.__super__ = com_mun_model_gates_GateAbstract;
com_mun_model_gates_Input.prototype = $extend(com_mun_model_gates_GateAbstract.prototype,{
	nameOfTheComponentKind: null
	,Attr: null
	,delay: null
	,getAttr: function() {
		return this.Attr;
	}
	,setname: function(s) {
		this.nameOfTheComponentKind = s;
	}
	,getDelay: function() {
		return this.delay;
	}
	,setDelay: function(value) {
		var a = this.delay;
		this.delay = value;
		return a;
	}
	,getname: function() {
		return this.nameOfTheComponentKind;
	}
	,algorithm: function(portArray) {
		var port;
		var value = com_mun_model_enumeration_VALUE_$LOGIC.TRUE;
		var _g = 0;
		while(_g < portArray.length) {
			var port1 = portArray[_g];
			++_g;
			if(port1.get_portDescription() == com_mun_model_enumeration_IOTYPE.INPUT) {
				value = port1.get_value();
				break;
			}
		}
		var _g1 = 0;
		while(_g1 < portArray.length) {
			var port2 = portArray[_g1];
			++_g1;
			if(port2.get_portDescription() == com_mun_model_enumeration_IOTYPE.OUTPUT) {
				port2.set_value(value);
			}
		}
		return portArray;
	}
	,createPorts: function(xPosition,yPosition,height,width,orientation,inportNum) {
		var portArray = [];
		inportNum = 1;
		switch(orientation[1]) {
		case 0:
			var inport = new com_mun_model_component_Inport(xPosition,yPosition + height / 2);
			inport.set_portDescription(com_mun_model_enumeration_IOTYPE.INPUT);
			portArray.push(inport);
			var outport_ = new com_mun_model_component_Outport(xPosition,yPosition - height / 2);
			outport_.set_portDescription(com_mun_model_enumeration_IOTYPE.OUTPUT);
			portArray.push(outport_);
			break;
		case 1:
			var inport1 = new com_mun_model_component_Inport(xPosition,yPosition - height / 2);
			inport1.set_portDescription(com_mun_model_enumeration_IOTYPE.INPUT);
			portArray.push(inport1);
			var outport_1 = new com_mun_model_component_Outport(xPosition,yPosition + height / 2);
			outport_1.set_portDescription(com_mun_model_enumeration_IOTYPE.OUTPUT);
			portArray.push(outport_1);
			break;
		case 2:
			var inport2 = new com_mun_model_component_Inport(xPosition + width / 2,yPosition);
			inport2.set_portDescription(com_mun_model_enumeration_IOTYPE.INPUT);
			portArray.push(inport2);
			var outport_2 = new com_mun_model_component_Outport(xPosition - width / 2,yPosition);
			outport_2.set_portDescription(com_mun_model_enumeration_IOTYPE.OUTPUT);
			portArray.push(outport_2);
			break;
		case 3:
			var inport3 = new com_mun_model_component_Inport(xPosition - width / 2,yPosition);
			inport3.set_portDescription(com_mun_model_enumeration_IOTYPE.INPUT);
			portArray.push(inport3);
			var outport_3 = new com_mun_model_component_Outport(xPosition + width / 2,yPosition);
			outport_3.set_portDescription(com_mun_model_enumeration_IOTYPE.OUTPUT);
			portArray.push(outport_3);
			break;
		default:
		}
		return portArray;
	}
	,addInPort: function() {
		return null;
	}
	,updateInPortPosition: function(portArray,xPosition,yPosition,height,width,orientation) {
		switch(orientation[1]) {
		case 0:
			portArray[0].set_xPosition(xPosition);
			portArray[0].set_yPosition(yPosition + height / 2);
			break;
		case 1:
			portArray[0].set_xPosition(xPosition);
			portArray[0].set_yPosition(yPosition - height / 2);
			break;
		case 2:
			portArray[0].set_xPosition(xPosition + width / 2);
			portArray[0].set_yPosition(yPosition);
			break;
		case 3:
			portArray[0].set_xPosition(xPosition - width / 2);
			portArray[0].set_yPosition(yPosition);
			break;
		default:
		}
		return portArray;
	}
	,updateOutPortPosition: function(portArray,xPosition,yPosition,height,width,orientation) {
		switch(orientation[1]) {
		case 0:
			portArray[0].set_xPosition(xPosition);
			portArray[0].set_yPosition(yPosition - height / 2);
			break;
		case 1:
			portArray[0].set_xPosition(xPosition);
			portArray[0].set_yPosition(yPosition + height / 2);
			break;
		case 2:
			portArray[0].set_xPosition(xPosition - width / 2);
			portArray[0].set_yPosition(yPosition);
			break;
		case 3:
			portArray[0].set_xPosition(xPosition + width / 2);
			portArray[0].set_yPosition(yPosition);
			break;
		default:
		}
		return portArray;
	}
	,drawComponent: function(drawingAdapter,highLight,linkAndComponentArray) {
		var drawComponent = new com_mun_view_drawComponents_DrawInput(this.component,drawingAdapter);
		if(highLight) {
			drawComponent.drawCorrespondingComponent("red");
		} else {
			drawComponent.drawCorrespondingComponent("black");
		}
	}
	,__class__: com_mun_model_gates_Input
});
var com_mun_model_gates_MUX = function() {
	this.delay = 0;
	this.Attr = [];
	this.nameOfTheComponentKind = "MUX";
	com_mun_model_gates_GateAbstract.call(this,2);
	this.Attr.push(new com_mun_model_attribute_IntAttr("delay"));
	this.Attr.push(new com_mun_model_attribute_StringAttr("name"));
	this.Attr.push(new com_mun_model_attribute_OrientationAttr());
};
$hxClasses["com.mun.model.gates.MUX"] = com_mun_model_gates_MUX;
com_mun_model_gates_MUX.__name__ = ["com","mun","model","gates","MUX"];
com_mun_model_gates_MUX.__interfaces__ = [com_mun_model_gates_ComponentKind];
com_mun_model_gates_MUX.__super__ = com_mun_model_gates_GateAbstract;
com_mun_model_gates_MUX.prototype = $extend(com_mun_model_gates_GateAbstract.prototype,{
	nameOfTheComponentKind: null
	,Attr: null
	,delay: null
	,getAttr: function() {
		return this.Attr;
	}
	,setname: function(s) {
		this.nameOfTheComponentKind = s;
	}
	,getDelay: function() {
		return this.delay;
	}
	,setDelay: function(value) {
		var a = this.delay;
		this.delay = value;
		return a;
	}
	,getname: function() {
		return this.nameOfTheComponentKind;
	}
	,algorithm: function(portArray) {
		var port;
		var value = com_mun_model_enumeration_VALUE_$LOGIC.TRUE;
		var selectValue = com_mun_model_enumeration_VALUE_$LOGIC.FALSE;
		var _g = 0;
		while(_g < portArray.length) {
			var port1 = portArray[_g];
			++_g;
			if(port1.get_portDescription() == com_mun_model_enumeration_IOTYPE.S) {
				selectValue = port1.get_value();
				break;
			}
		}
		if(selectValue == com_mun_model_enumeration_VALUE_$LOGIC.TRUE) {
			var _g1 = 0;
			while(_g1 < portArray.length) {
				var port2 = portArray[_g1];
				++_g1;
				if(port2.get_sequence() == 1) {
					value = port2.get_value();
					break;
				}
			}
		} else if(selectValue == com_mun_model_enumeration_VALUE_$LOGIC.FALSE) {
			var _g2 = 0;
			while(_g2 < portArray.length) {
				var port3 = portArray[_g2];
				++_g2;
				if(port3.get_sequence() == 0) {
					value = port3.get_value();
					break;
				}
			}
		}
		var _g3 = 0;
		while(_g3 < portArray.length) {
			var port4 = portArray[_g3];
			++_g3;
			if(port4.get_portDescription() == com_mun_model_enumeration_IOTYPE.OUTPUT) {
				port4.set_value(value);
				break;
			}
		}
		return portArray;
	}
	,createPorts: function(xPosition,yPosition,height,width,orientation,inportNum) {
		var portArray = [];
		switch(orientation[1]) {
		case 0:
			var inport_S = new com_mun_model_component_Inport(xPosition + width / 2,yPosition);
			inport_S.set_portDescription(com_mun_model_enumeration_IOTYPE.S);
			portArray.push(inport_S);
			var inport_1 = new com_mun_model_component_Inport(xPosition - width / 2 + height / 3 * 2,yPosition + height / 2);
			inport_1.set_portDescription(com_mun_model_enumeration_IOTYPE.INPUT);
			portArray.push(inport_1);
			var inport_2 = new com_mun_model_component_Inport(xPosition - width / 2 + width / 3,yPosition + height / 2);
			inport_2.set_portDescription(com_mun_model_enumeration_IOTYPE.INPUT);
			portArray.push(inport_2);
			var outport_ = new com_mun_model_component_Outport(xPosition,yPosition - height / 2);
			outport_.set_portDescription(com_mun_model_enumeration_IOTYPE.OUTPUT);
			portArray.push(outport_);
			break;
		case 1:
			var inport_S1 = new com_mun_model_component_Inport(xPosition - width / 2,yPosition);
			inport_S1.set_portDescription(com_mun_model_enumeration_IOTYPE.S);
			portArray.push(inport_S1);
			var inport_11 = new com_mun_model_component_Inport(xPosition - width / 2 + height / 3 * 2,yPosition - height / 2);
			inport_11.set_portDescription(com_mun_model_enumeration_IOTYPE.INPUT);
			portArray.push(inport_11);
			var inport_21 = new com_mun_model_component_Inport(xPosition - width / 2 + width / 3,yPosition - height / 2);
			inport_21.set_portDescription(com_mun_model_enumeration_IOTYPE.INPUT);
			portArray.push(inport_21);
			var outport_1 = new com_mun_model_component_Outport(xPosition,yPosition + height / 2);
			outport_1.set_portDescription(com_mun_model_enumeration_IOTYPE.OUTPUT);
			portArray.push(outport_1);
			break;
		case 2:
			var inport_S2 = new com_mun_model_component_Inport(xPosition,yPosition - height / 2);
			inport_S2.set_portDescription(com_mun_model_enumeration_IOTYPE.S);
			portArray.push(inport_S2);
			var inport_12 = new com_mun_model_component_Inport(xPosition + width / 2,height / 3 + (yPosition - height / 2));
			inport_12.set_portDescription(com_mun_model_enumeration_IOTYPE.INPUT);
			portArray.push(inport_12);
			var inport_22 = new com_mun_model_component_Inport(xPosition + width / 2,height / 3 * 2 + (yPosition - height / 2));
			inport_22.set_portDescription(com_mun_model_enumeration_IOTYPE.INPUT);
			portArray.push(inport_22);
			var outport_2 = new com_mun_model_component_Outport(xPosition - width / 2,yPosition);
			outport_2.set_portDescription(com_mun_model_enumeration_IOTYPE.OUTPUT);
			portArray.push(outport_2);
			break;
		case 3:
			var inport_S3 = new com_mun_model_component_Inport(xPosition,yPosition - height / 2);
			inport_S3.set_portDescription(com_mun_model_enumeration_IOTYPE.S);
			portArray.push(inport_S3);
			var inport_13 = new com_mun_model_component_Inport(xPosition - width / 2,height / 3 + (yPosition - height / 2));
			inport_13.set_portDescription(com_mun_model_enumeration_IOTYPE.INPUT);
			portArray.push(inport_13);
			var inport_23 = new com_mun_model_component_Inport(xPosition - width / 2,height / 3 * 2 + (yPosition - height / 2));
			inport_23.set_portDescription(com_mun_model_enumeration_IOTYPE.INPUT);
			portArray.push(inport_23);
			var outport_3 = new com_mun_model_component_Outport(xPosition + width / 2,yPosition);
			outport_3.set_portDescription(com_mun_model_enumeration_IOTYPE.OUTPUT);
			portArray.push(outport_3);
			break;
		default:
		}
		return portArray;
	}
	,updateInPortPosition: function(portArray,xPosition,yPosition,height,width,orientation) {
		switch(orientation[1]) {
		case 0:
			var _g1 = 0;
			var _g = portArray.length;
			while(_g1 < _g) {
				var i = _g1++;
				if(portArray[i].get_portDescription() != com_mun_model_enumeration_IOTYPE.S) {
					portArray[i].set_xPosition(xPosition - width / 2 + width / (portArray.length + 1) * (i + 1));
					portArray[i].set_yPosition(yPosition + height / 2);
				} else {
					portArray[i].set_xPosition(xPosition - width / 2);
					portArray[i].set_yPosition(yPosition);
				}
			}
			break;
		case 1:
			var _g11 = 0;
			var _g2 = portArray.length;
			while(_g11 < _g2) {
				var i1 = _g11++;
				if(portArray[i1].get_portDescription() != com_mun_model_enumeration_IOTYPE.S) {
					portArray[i1].set_xPosition(xPosition - width / 2 + width / (portArray.length + 1) * (i1 + 1));
					portArray[i1].set_yPosition(yPosition - height / 2);
				} else {
					portArray[i1].set_xPosition(xPosition + width / 2);
					portArray[i1].set_yPosition(yPosition);
				}
			}
			break;
		case 2:
			var _g12 = 0;
			var _g3 = portArray.length;
			while(_g12 < _g3) {
				var i2 = _g12++;
				if(portArray[i2].get_portDescription() != com_mun_model_enumeration_IOTYPE.S) {
					portArray[i2].set_xPosition(xPosition + width / 2);
					portArray[i2].set_yPosition(height / (portArray.length + 1) * (i2 + 1) + (yPosition - height / 2));
				} else {
					portArray[i2].set_xPosition(xPosition);
					portArray[i2].set_yPosition(yPosition - height / 2);
				}
			}
			break;
		case 3:
			var _g13 = 0;
			var _g4 = portArray.length;
			while(_g13 < _g4) {
				var i3 = _g13++;
				if(portArray[i3].get_portDescription() != com_mun_model_enumeration_IOTYPE.S) {
					portArray[i3].set_xPosition(xPosition - width / 2);
					portArray[i3].set_yPosition(height / (portArray.length + 1) * (i3 + 1) + (yPosition - height / 2));
				} else {
					portArray[i3].set_xPosition(xPosition);
					portArray[i3].set_yPosition(yPosition - height / 2);
				}
			}
			break;
		default:
		}
		return portArray;
	}
	,drawComponent: function(drawingAdapter,highLight,linkAndComponentArray) {
		var drawComponent = new com_mun_view_drawComponents_DrawMUX(this.component,drawingAdapter);
		if(highLight) {
			drawComponent.drawCorrespondingComponent("red");
		} else {
			drawComponent.drawCorrespondingComponent("black");
		}
	}
	,__class__: com_mun_model_gates_MUX
});
var com_mun_model_gates_NAND = function() {
	this.delay = 0;
	this.Attr = [];
	this.nameOfTheComponentKind = "NAND";
	com_mun_model_gates_GateAbstract.call(this,2);
	this.Attr.push(new com_mun_model_attribute_IntAttr("delay"));
	this.Attr.push(new com_mun_model_attribute_StringAttr("name"));
	this.Attr.push(new com_mun_model_attribute_OrientationAttr());
};
$hxClasses["com.mun.model.gates.NAND"] = com_mun_model_gates_NAND;
com_mun_model_gates_NAND.__name__ = ["com","mun","model","gates","NAND"];
com_mun_model_gates_NAND.__interfaces__ = [com_mun_model_gates_ComponentKind];
com_mun_model_gates_NAND.__super__ = com_mun_model_gates_GateAbstract;
com_mun_model_gates_NAND.prototype = $extend(com_mun_model_gates_GateAbstract.prototype,{
	nameOfTheComponentKind: null
	,Attr: null
	,delay: null
	,getAttr: function() {
		return this.Attr;
	}
	,getDelay: function() {
		return this.delay;
	}
	,setname: function(s) {
		this.nameOfTheComponentKind = s;
	}
	,setDelay: function(value) {
		var a = this.delay;
		this.delay = value;
		return a;
	}
	,getname: function() {
		return this.nameOfTheComponentKind;
	}
	,algorithm: function(portArray) {
		var port;
		var value = com_mun_model_enumeration_VALUE_$LOGIC.FALSE;
		var _g = 0;
		while(_g < portArray.length) {
			var port1 = portArray[_g];
			++_g;
			if(port1.get_portDescription() == com_mun_model_enumeration_IOTYPE.INPUT && port1.get_value() == com_mun_model_enumeration_VALUE_$LOGIC.FALSE) {
				value = com_mun_model_enumeration_VALUE_$LOGIC.TRUE;
				break;
			}
		}
		var _g1 = 0;
		while(_g1 < portArray.length) {
			var port2 = portArray[_g1];
			++_g1;
			if(port2.get_portDescription() == com_mun_model_enumeration_IOTYPE.OUTPUT) {
				port2.set_value(value);
			}
		}
		return portArray;
	}
	,createPorts: function(xPosition,yPosition,height,width,orientation,inportNum) {
		var portArray = [];
		if(inportNum == null || inportNum < 2) {
			inportNum = 2;
		}
		switch(orientation[1]) {
		case 0:
			var counter = 0;
			while(counter < inportNum) {
				var inport = new com_mun_model_component_Inport(xPosition - width / 2 + width / (inportNum + 1) * (counter + 1),yPosition + height / 2);
				inport.set_portDescription(com_mun_model_enumeration_IOTYPE.INPUT);
				portArray.push(inport);
				++counter;
			}
			var outport_ = new com_mun_model_component_Outport(xPosition,yPosition - height / 2);
			outport_.set_portDescription(com_mun_model_enumeration_IOTYPE.OUTPUT);
			portArray.push(outport_);
			break;
		case 1:
			var counter1 = 0;
			while(counter1 < inportNum) {
				var inport1 = new com_mun_model_component_Inport(xPosition - width / 2 + width / (inportNum + 1) * (counter1 + 1),yPosition - height / 2);
				inport1.set_portDescription(com_mun_model_enumeration_IOTYPE.INPUT);
				portArray.push(inport1);
				++counter1;
			}
			var outport_1 = new com_mun_model_component_Outport(xPosition,yPosition + height / 2);
			outport_1.set_portDescription(com_mun_model_enumeration_IOTYPE.OUTPUT);
			portArray.push(outport_1);
			break;
		case 2:
			var counter2 = 0;
			while(counter2 < inportNum) {
				var inport2 = new com_mun_model_component_Inport(xPosition + width / 2,height / (inportNum + 1) * (counter2 + 1) + (yPosition - height / 2));
				inport2.set_portDescription(com_mun_model_enumeration_IOTYPE.INPUT);
				portArray.push(inport2);
				++counter2;
			}
			var outport_2 = new com_mun_model_component_Outport(xPosition - width / 2,yPosition);
			outport_2.set_portDescription(com_mun_model_enumeration_IOTYPE.OUTPUT);
			portArray.push(outport_2);
			break;
		case 3:
			var counter3 = 0;
			while(counter3 < inportNum) {
				var inport3 = new com_mun_model_component_Inport(xPosition - width / 2,height / (inportNum + 1) * (counter3 + 1) + (yPosition - height / 2));
				inport3.set_portDescription(com_mun_model_enumeration_IOTYPE.INPUT);
				portArray.push(inport3);
				++counter3;
			}
			var outport_3 = new com_mun_model_component_Outport(xPosition + width / 2,yPosition);
			outport_3.set_portDescription(com_mun_model_enumeration_IOTYPE.OUTPUT);
			portArray.push(outport_3);
			break;
		default:
		}
		return portArray;
	}
	,drawComponent: function(drawingAdapter,highLight,linkAndComponentArray) {
		var drawComponent = new com_mun_view_drawComponents_DrawNAND(this.component,drawingAdapter);
		if(highLight) {
			drawComponent.drawCorrespondingComponent("red");
		} else {
			drawComponent.drawCorrespondingComponent("black");
		}
	}
	,__class__: com_mun_model_gates_NAND
});
var com_mun_model_gates_NOR = function() {
	this.delay = 0;
	this.Attr = [];
	this.nameOfTheComponentKind = "NOR";
	com_mun_model_gates_GateAbstract.call(this,2);
	this.Attr.push(new com_mun_model_attribute_IntAttr("delay"));
	this.Attr.push(new com_mun_model_attribute_StringAttr("name"));
	this.Attr.push(new com_mun_model_attribute_OrientationAttr());
};
$hxClasses["com.mun.model.gates.NOR"] = com_mun_model_gates_NOR;
com_mun_model_gates_NOR.__name__ = ["com","mun","model","gates","NOR"];
com_mun_model_gates_NOR.__interfaces__ = [com_mun_model_gates_ComponentKind];
com_mun_model_gates_NOR.__super__ = com_mun_model_gates_GateAbstract;
com_mun_model_gates_NOR.prototype = $extend(com_mun_model_gates_GateAbstract.prototype,{
	nameOfTheComponentKind: null
	,Attr: null
	,delay: null
	,getAttr: function() {
		return this.Attr;
	}
	,setname: function(s) {
		this.nameOfTheComponentKind = s;
	}
	,getDelay: function() {
		return this.delay;
	}
	,setDelay: function(value) {
		var a = this.delay;
		this.delay = value;
		return a;
	}
	,getname: function() {
		return this.nameOfTheComponentKind;
	}
	,algorithm: function(portArray) {
		var port;
		var value = com_mun_model_enumeration_VALUE_$LOGIC.TRUE;
		var _g = 0;
		while(_g < portArray.length) {
			var port1 = portArray[_g];
			++_g;
			if(port1.get_portDescription() == com_mun_model_enumeration_IOTYPE.INPUT && port1.get_value() == com_mun_model_enumeration_VALUE_$LOGIC.TRUE) {
				value = com_mun_model_enumeration_VALUE_$LOGIC.FALSE;
				break;
			}
		}
		var _g1 = 0;
		while(_g1 < portArray.length) {
			var port2 = portArray[_g1];
			++_g1;
			if(port2.get_portDescription() == com_mun_model_enumeration_IOTYPE.OUTPUT) {
				port2.set_value(value);
			}
		}
		return portArray;
	}
	,createPorts: function(xPosition,yPosition,height,width,orientation,inportNum) {
		var portArray = [];
		if(inportNum == null || inportNum < 2) {
			inportNum = 2;
		}
		switch(orientation[1]) {
		case 0:
			var counter = 0;
			while(counter < inportNum) {
				var inport = new com_mun_model_component_Inport(xPosition - width / 2 + width / (inportNum + 1) * (counter + 1),yPosition + height / 2);
				inport.set_portDescription(com_mun_model_enumeration_IOTYPE.INPUT);
				portArray.push(inport);
				++counter;
			}
			var outport_ = new com_mun_model_component_Outport(xPosition,yPosition - height / 2);
			outport_.set_portDescription(com_mun_model_enumeration_IOTYPE.OUTPUT);
			portArray.push(outport_);
			break;
		case 1:
			var counter1 = 0;
			while(counter1 < inportNum) {
				var inport1 = new com_mun_model_component_Inport(xPosition - width / 2 + width / (inportNum + 1) * (counter1 + 1),yPosition - height / 2);
				inport1.set_portDescription(com_mun_model_enumeration_IOTYPE.INPUT);
				portArray.push(inport1);
				++counter1;
			}
			var outport_1 = new com_mun_model_component_Outport(xPosition,yPosition + height / 2);
			outport_1.set_portDescription(com_mun_model_enumeration_IOTYPE.OUTPUT);
			portArray.push(outport_1);
			break;
		case 2:
			var counter2 = 0;
			while(counter2 < inportNum) {
				var inport2 = new com_mun_model_component_Inport(xPosition + width / 2,height / (inportNum + 1) * (counter2 + 1) + (yPosition - height / 2));
				inport2.set_portDescription(com_mun_model_enumeration_IOTYPE.INPUT);
				portArray.push(inport2);
				++counter2;
			}
			var outport_2 = new com_mun_model_component_Outport(xPosition - width / 2,yPosition);
			outport_2.set_portDescription(com_mun_model_enumeration_IOTYPE.OUTPUT);
			portArray.push(outport_2);
			break;
		case 3:
			var counter3 = 0;
			while(counter3 < inportNum) {
				var inport3 = new com_mun_model_component_Inport(xPosition - width / 2,height / (inportNum + 1) * (counter3 + 1) + (yPosition - height / 2));
				inport3.set_portDescription(com_mun_model_enumeration_IOTYPE.INPUT);
				portArray.push(inport3);
				++counter3;
			}
			var outport_3 = new com_mun_model_component_Outport(xPosition + width / 2,yPosition);
			outport_3.set_portDescription(com_mun_model_enumeration_IOTYPE.OUTPUT);
			portArray.push(outport_3);
			break;
		default:
		}
		return portArray;
	}
	,drawComponent: function(drawingAdapter,highLight,linkAndComponentArray) {
		var drawComponent = new com_mun_view_drawComponents_DrawNOR(this.component,drawingAdapter);
		if(highLight) {
			drawComponent.drawCorrespondingComponent("red");
		} else {
			drawComponent.drawCorrespondingComponent("black");
		}
	}
	,__class__: com_mun_model_gates_NOR
});
var com_mun_model_gates_NOT = function() {
	this.delay = 0;
	this.Attr = [];
	this.nameOfTheComponentKind = "NOT";
	com_mun_model_gates_GateAbstract.call(this,2);
	this.Attr.push(new com_mun_model_attribute_IntAttr("delay"));
	this.Attr.push(new com_mun_model_attribute_StringAttr("name"));
	this.Attr.push(new com_mun_model_attribute_OrientationAttr());
};
$hxClasses["com.mun.model.gates.NOT"] = com_mun_model_gates_NOT;
com_mun_model_gates_NOT.__name__ = ["com","mun","model","gates","NOT"];
com_mun_model_gates_NOT.__interfaces__ = [com_mun_model_gates_ComponentKind];
com_mun_model_gates_NOT.__super__ = com_mun_model_gates_GateAbstract;
com_mun_model_gates_NOT.prototype = $extend(com_mun_model_gates_GateAbstract.prototype,{
	nameOfTheComponentKind: null
	,Attr: null
	,delay: null
	,getAttr: function() {
		return this.Attr;
	}
	,setname: function(s) {
		this.nameOfTheComponentKind = s;
	}
	,getDelay: function() {
		return this.delay;
	}
	,setDelay: function(value) {
		var a = this.delay;
		this.delay = value;
		return a;
	}
	,getname: function() {
		return this.nameOfTheComponentKind;
	}
	,algorithm: function(portArray) {
		var port;
		var value = com_mun_model_enumeration_VALUE_$LOGIC.TRUE;
		var _g = 0;
		while(_g < portArray.length) {
			var port1 = portArray[_g];
			++_g;
			if(port1.get_portDescription() == com_mun_model_enumeration_IOTYPE.INPUT) {
				value = port1.get_value();
				break;
			}
		}
		var _g1 = 0;
		while(_g1 < portArray.length) {
			var port2 = portArray[_g1];
			++_g1;
			if(port2.get_portDescription() == com_mun_model_enumeration_IOTYPE.OUTPUT) {
				if(value == com_mun_model_enumeration_VALUE_$LOGIC.TRUE) {
					port2.set_value(com_mun_model_enumeration_VALUE_$LOGIC.FALSE);
				} else if(value == com_mun_model_enumeration_VALUE_$LOGIC.FALSE) {
					port2.set_value(com_mun_model_enumeration_VALUE_$LOGIC.TRUE);
				}
			}
		}
		return portArray;
	}
	,createPorts: function(xPosition,yPosition,height,width,orientation,inportNum) {
		var portArray = [];
		inportNum = 1;
		switch(orientation[1]) {
		case 0:
			var counter = 0;
			while(counter < inportNum) {
				var inport = new com_mun_model_component_Inport(xPosition - width / 2 + width / (inportNum + 1) * (counter + 1),yPosition + height / 2);
				inport.set_portDescription(com_mun_model_enumeration_IOTYPE.INPUT);
				portArray.push(inport);
				++counter;
			}
			var outport_ = new com_mun_model_component_Outport(xPosition,yPosition - height / 2);
			outport_.set_portDescription(com_mun_model_enumeration_IOTYPE.OUTPUT);
			portArray.push(outport_);
			break;
		case 1:
			var counter1 = 0;
			while(counter1 < inportNum) {
				var inport1 = new com_mun_model_component_Inport(xPosition - width / 2 + width / (inportNum + 1) * (counter1 + 1),yPosition - height / 2);
				inport1.set_portDescription(com_mun_model_enumeration_IOTYPE.INPUT);
				portArray.push(inport1);
				++counter1;
			}
			var outport_1 = new com_mun_model_component_Outport(xPosition,yPosition + height / 2);
			outport_1.set_portDescription(com_mun_model_enumeration_IOTYPE.OUTPUT);
			portArray.push(outport_1);
			break;
		case 2:
			var counter2 = 0;
			while(counter2 < inportNum) {
				var inport2 = new com_mun_model_component_Inport(xPosition + width / 2,height / (inportNum + 1) * (counter2 + 1) + (yPosition - height / 2));
				inport2.set_portDescription(com_mun_model_enumeration_IOTYPE.INPUT);
				portArray.push(inport2);
				++counter2;
			}
			var outport_2 = new com_mun_model_component_Outport(xPosition - width / 2,yPosition);
			outport_2.set_portDescription(com_mun_model_enumeration_IOTYPE.OUTPUT);
			portArray.push(outport_2);
			break;
		case 3:
			var counter3 = 0;
			while(counter3 < inportNum) {
				var inport3 = new com_mun_model_component_Inport(xPosition - width / 2,height / (inportNum + 1) * (counter3 + 1) + (yPosition - height / 2));
				inport3.set_portDescription(com_mun_model_enumeration_IOTYPE.INPUT);
				portArray.push(inport3);
				++counter3;
			}
			var outport_3 = new com_mun_model_component_Outport(xPosition + width / 2,yPosition);
			outport_3.set_portDescription(com_mun_model_enumeration_IOTYPE.OUTPUT);
			portArray.push(outport_3);
			break;
		default:
		}
		return portArray;
	}
	,drawComponent: function(drawingAdapter,highLight,linkAndComponentArray) {
		var drawComponent = new com_mun_view_drawComponents_DrawNOT(this.component,drawingAdapter);
		if(highLight) {
			drawComponent.drawCorrespondingComponent("red");
		} else {
			drawComponent.drawCorrespondingComponent("black");
		}
	}
	,__class__: com_mun_model_gates_NOT
});
var com_mun_model_gates_OR = function() {
	this.delay = 0;
	this.Attr = [];
	this.nameOfTheComponentKind = "OR";
	com_mun_model_gates_GateAbstract.call(this,2);
	this.Attr.push(new com_mun_model_attribute_IntAttr("delay"));
	this.Attr.push(new com_mun_model_attribute_StringAttr("name"));
	this.Attr.push(new com_mun_model_attribute_OrientationAttr());
};
$hxClasses["com.mun.model.gates.OR"] = com_mun_model_gates_OR;
com_mun_model_gates_OR.__name__ = ["com","mun","model","gates","OR"];
com_mun_model_gates_OR.__interfaces__ = [com_mun_model_gates_ComponentKind];
com_mun_model_gates_OR.__super__ = com_mun_model_gates_GateAbstract;
com_mun_model_gates_OR.prototype = $extend(com_mun_model_gates_GateAbstract.prototype,{
	nameOfTheComponentKind: null
	,Attr: null
	,delay: null
	,getAttr: function() {
		return this.Attr;
	}
	,setname: function(s) {
		this.nameOfTheComponentKind = s;
	}
	,getDelay: function() {
		return this.delay;
	}
	,setDelay: function(value) {
		var a = this.delay;
		this.delay = value;
		return a;
	}
	,getname: function() {
		return this.nameOfTheComponentKind;
	}
	,algorithm: function(portArray) {
		var port;
		var value = com_mun_model_enumeration_VALUE_$LOGIC.FALSE;
		var _g = 0;
		while(_g < portArray.length) {
			var port1 = portArray[_g];
			++_g;
			if(port1.get_portDescription() == com_mun_model_enumeration_IOTYPE.INPUT && port1.get_value() == com_mun_model_enumeration_VALUE_$LOGIC.TRUE) {
				value = com_mun_model_enumeration_VALUE_$LOGIC.TRUE;
				break;
			}
		}
		var _g1 = 0;
		while(_g1 < portArray.length) {
			var port2 = portArray[_g1];
			++_g1;
			if(port2.get_portDescription() == com_mun_model_enumeration_IOTYPE.OUTPUT) {
				port2.set_value(value);
			}
		}
		return portArray;
	}
	,createPorts: function(xPosition,yPosition,height,width,orientation,inportNum) {
		var portArray = [];
		if(inportNum == null || inportNum < 3) {
			inportNum = 2;
		}
		switch(orientation[1]) {
		case 0:
			var counter = 0;
			while(counter < inportNum) {
				var inport = new com_mun_model_component_Inport(xPosition - width / 2 + width / (inportNum + 1) * (counter + 1),yPosition + height / 2);
				inport.set_portDescription(com_mun_model_enumeration_IOTYPE.INPUT);
				portArray.push(inport);
				++counter;
			}
			var outport_ = new com_mun_model_component_Outport(xPosition,yPosition - height / 2);
			outport_.set_portDescription(com_mun_model_enumeration_IOTYPE.OUTPUT);
			portArray.push(outport_);
			break;
		case 1:
			var counter1 = 0;
			while(counter1 < inportNum) {
				var inport1 = new com_mun_model_component_Inport(xPosition - width / 2 + width / (inportNum + 1) * (counter1 + 1),yPosition - height / 2);
				inport1.set_portDescription(com_mun_model_enumeration_IOTYPE.INPUT);
				portArray.push(inport1);
				++counter1;
			}
			var outport_1 = new com_mun_model_component_Outport(xPosition,yPosition + height / 2);
			outport_1.set_portDescription(com_mun_model_enumeration_IOTYPE.OUTPUT);
			portArray.push(outport_1);
			break;
		case 2:
			var counter2 = 0;
			while(counter2 < inportNum) {
				var inport2 = new com_mun_model_component_Inport(xPosition + width / 2,height / (inportNum + 1) * (counter2 + 1) + (yPosition - height / 2));
				inport2.set_portDescription(com_mun_model_enumeration_IOTYPE.INPUT);
				portArray.push(inport2);
				++counter2;
			}
			var outport_2 = new com_mun_model_component_Outport(xPosition - width / 2,yPosition);
			outport_2.set_portDescription(com_mun_model_enumeration_IOTYPE.OUTPUT);
			portArray.push(outport_2);
			break;
		case 3:
			var counter3 = 0;
			while(counter3 < inportNum) {
				var inport3 = new com_mun_model_component_Inport(xPosition - width / 2,height / (inportNum + 1) * (counter3 + 1) + (yPosition - height / 2));
				inport3.set_portDescription(com_mun_model_enumeration_IOTYPE.INPUT);
				portArray.push(inport3);
				++counter3;
			}
			var outport_3 = new com_mun_model_component_Outport(xPosition + width / 2,yPosition);
			outport_3.set_portDescription(com_mun_model_enumeration_IOTYPE.OUTPUT);
			portArray.push(outport_3);
			break;
		default:
		}
		return portArray;
	}
	,drawComponent: function(drawingAdapter,highLight,linkAndComponentArray) {
		var drawComponent = new com_mun_view_drawComponents_DrawOR(this.component,drawingAdapter);
		if(highLight) {
			drawComponent.drawCorrespondingComponent("red");
		} else {
			drawComponent.drawCorrespondingComponent("black");
		}
	}
	,__class__: com_mun_model_gates_OR
});
var com_mun_model_gates_Output = function() {
	this.delay = 0;
	this.Attr = [];
	this.nameOfTheComponentKind = "Output";
	com_mun_model_gates_GateAbstract.call(this,1);
	this.Attr.push(new com_mun_model_attribute_StringAttr("name"));
};
$hxClasses["com.mun.model.gates.Output"] = com_mun_model_gates_Output;
com_mun_model_gates_Output.__name__ = ["com","mun","model","gates","Output"];
com_mun_model_gates_Output.__interfaces__ = [com_mun_model_gates_ComponentKind];
com_mun_model_gates_Output.__super__ = com_mun_model_gates_GateAbstract;
com_mun_model_gates_Output.prototype = $extend(com_mun_model_gates_GateAbstract.prototype,{
	nameOfTheComponentKind: null
	,Attr: null
	,delay: null
	,getAttr: function() {
		return this.Attr;
	}
	,setname: function(s) {
		this.nameOfTheComponentKind = s;
	}
	,getDelay: function() {
		return this.delay;
	}
	,setDelay: function(value) {
		var a = this.delay;
		this.delay = value;
		return a;
	}
	,getname: function() {
		return this.nameOfTheComponentKind;
	}
	,algorithm: function(portArray) {
		var port;
		var value = com_mun_model_enumeration_VALUE_$LOGIC.TRUE;
		var _g = 0;
		while(_g < portArray.length) {
			var port1 = portArray[_g];
			++_g;
			if(port1.get_portDescription() == com_mun_model_enumeration_IOTYPE.INPUT) {
				value = port1.get_value();
				break;
			}
		}
		var _g1 = 0;
		while(_g1 < portArray.length) {
			var port2 = portArray[_g1];
			++_g1;
			if(port2.get_portDescription() == com_mun_model_enumeration_IOTYPE.OUTPUT) {
				port2.set_value(value);
			}
		}
		return portArray;
	}
	,createPorts: function(xPosition,yPosition,height,width,orientation,inportNum) {
		var portArray = [];
		inportNum = 1;
		switch(orientation[1]) {
		case 0:
			var inport = new com_mun_model_component_Inport(xPosition,yPosition + height / 2);
			inport.set_portDescription(com_mun_model_enumeration_IOTYPE.INPUT);
			portArray.push(inport);
			var outport_ = new com_mun_model_component_Outport(xPosition,yPosition - height / 2);
			outport_.set_portDescription(com_mun_model_enumeration_IOTYPE.OUTPUT);
			portArray.push(outport_);
			break;
		case 1:
			var inport1 = new com_mun_model_component_Inport(xPosition,yPosition - height / 2);
			inport1.set_portDescription(com_mun_model_enumeration_IOTYPE.INPUT);
			portArray.push(inport1);
			var outport_1 = new com_mun_model_component_Outport(xPosition,yPosition + height / 2);
			outport_1.set_portDescription(com_mun_model_enumeration_IOTYPE.OUTPUT);
			portArray.push(outport_1);
			break;
		case 2:
			var inport2 = new com_mun_model_component_Inport(xPosition + width / 2,yPosition);
			inport2.set_portDescription(com_mun_model_enumeration_IOTYPE.INPUT);
			portArray.push(inport2);
			var outport_2 = new com_mun_model_component_Outport(xPosition - width / 2,yPosition);
			outport_2.set_portDescription(com_mun_model_enumeration_IOTYPE.OUTPUT);
			portArray.push(outport_2);
			break;
		case 3:
			var inport3 = new com_mun_model_component_Inport(xPosition - width / 2,yPosition);
			inport3.set_portDescription(com_mun_model_enumeration_IOTYPE.INPUT);
			portArray.push(inport3);
			var outport_3 = new com_mun_model_component_Outport(xPosition + width / 2,yPosition);
			outport_3.set_portDescription(com_mun_model_enumeration_IOTYPE.OUTPUT);
			portArray.push(outport_3);
			break;
		default:
		}
		return portArray;
	}
	,updateInPortPosition: function(portArray,xPosition,yPosition,height,width,orientation) {
		switch(orientation[1]) {
		case 0:
			portArray[0].set_xPosition(xPosition);
			portArray[0].set_yPosition(yPosition + height / 2);
			break;
		case 1:
			portArray[0].set_xPosition(xPosition);
			portArray[0].set_yPosition(yPosition - height / 2);
			break;
		case 2:
			portArray[0].set_xPosition(xPosition + width / 2);
			portArray[0].set_yPosition(yPosition);
			break;
		case 3:
			portArray[0].set_xPosition(xPosition - width / 2);
			portArray[0].set_yPosition(yPosition);
			break;
		default:
		}
		return portArray;
	}
	,updateOutPortPosition: function(portArray,xPosition,yPosition,height,width,orientation) {
		switch(orientation[1]) {
		case 0:
			portArray[0].set_xPosition(xPosition);
			portArray[0].set_yPosition(yPosition - height / 2);
			break;
		case 1:
			portArray[0].set_xPosition(xPosition);
			portArray[0].set_yPosition(yPosition + height / 2);
			break;
		case 2:
			portArray[0].set_xPosition(xPosition - width / 2);
			portArray[0].set_yPosition(yPosition);
			break;
		case 3:
			portArray[0].set_xPosition(xPosition + width / 2);
			portArray[0].set_yPosition(yPosition);
			break;
		default:
		}
		return portArray;
	}
	,drawComponent: function(drawingAdapter,highLight,linkAndComponentArray) {
		var drawComponent = new com_mun_view_drawComponents_DrawOutput(this.component,drawingAdapter);
		if(highLight) {
			drawComponent.drawCorrespondingComponent("red");
		} else {
			drawComponent.drawCorrespondingComponent("black");
		}
	}
	,__class__: com_mun_model_gates_Output
});
var com_mun_model_gates_XOR = function() {
	this.delay = 0;
	this.Attr = [];
	this.nameOfTheComponentKind = "XOR";
	com_mun_model_gates_GateAbstract.call(this,2);
	this.Attr.push(new com_mun_model_attribute_IntAttr("delay"));
	this.Attr.push(new com_mun_model_attribute_StringAttr("name"));
	this.Attr.push(new com_mun_model_attribute_OrientationAttr());
};
$hxClasses["com.mun.model.gates.XOR"] = com_mun_model_gates_XOR;
com_mun_model_gates_XOR.__name__ = ["com","mun","model","gates","XOR"];
com_mun_model_gates_XOR.__interfaces__ = [com_mun_model_gates_ComponentKind];
com_mun_model_gates_XOR.__super__ = com_mun_model_gates_GateAbstract;
com_mun_model_gates_XOR.prototype = $extend(com_mun_model_gates_GateAbstract.prototype,{
	nameOfTheComponentKind: null
	,Attr: null
	,delay: null
	,getAttr: function() {
		return this.Attr;
	}
	,setname: function(s) {
		this.nameOfTheComponentKind = s;
	}
	,getDelay: function() {
		return this.delay;
	}
	,setDelay: function(value) {
		var a = this.delay;
		this.delay = value;
		return a;
	}
	,getname: function() {
		return this.nameOfTheComponentKind;
	}
	,algorithm: function(portArray) {
		var port;
		var value;
		var counter = 0;
		var _g = 0;
		while(_g < portArray.length) {
			var port1 = portArray[_g];
			++_g;
			if(port1.get_portDescription() == com_mun_model_enumeration_IOTYPE.INPUT && port1.get_value() == com_mun_model_enumeration_VALUE_$LOGIC.TRUE) {
				++counter;
			}
		}
		if(counter % 2 == 0) {
			value = com_mun_model_enumeration_VALUE_$LOGIC.FALSE;
		} else {
			value = com_mun_model_enumeration_VALUE_$LOGIC.TRUE;
		}
		var _g1 = 0;
		while(_g1 < portArray.length) {
			var port2 = portArray[_g1];
			++_g1;
			if(port2.get_portDescription() == com_mun_model_enumeration_IOTYPE.OUTPUT) {
				port2.set_value(value);
			}
		}
		return portArray;
	}
	,createPorts: function(xPosition,yPosition,height,width,orientation,inportNum) {
		var portArray = [];
		if(inportNum == null || inportNum < 2) {
			inportNum = 2;
		}
		switch(orientation[1]) {
		case 0:
			var counter = 0;
			while(counter < inportNum) {
				var inport = new com_mun_model_component_Inport(xPosition - width / 2 + width / (inportNum + 1) * (counter + 1),yPosition + height / 2);
				inport.set_portDescription(com_mun_model_enumeration_IOTYPE.INPUT);
				portArray.push(inport);
				++counter;
			}
			var outport_ = new com_mun_model_component_Outport(xPosition,yPosition - height / 2);
			outport_.set_portDescription(com_mun_model_enumeration_IOTYPE.OUTPUT);
			portArray.push(outport_);
			break;
		case 1:
			var counter1 = 0;
			while(counter1 < inportNum) {
				var inport1 = new com_mun_model_component_Inport(xPosition - width / 2 + width / (inportNum + 1) * (counter1 + 1),yPosition - height / 2);
				inport1.set_portDescription(com_mun_model_enumeration_IOTYPE.INPUT);
				portArray.push(inport1);
				++counter1;
			}
			var outport_1 = new com_mun_model_component_Outport(xPosition,yPosition + height / 2);
			outport_1.set_portDescription(com_mun_model_enumeration_IOTYPE.OUTPUT);
			portArray.push(outport_1);
			break;
		case 2:
			var counter2 = 0;
			while(counter2 < inportNum) {
				var inport2 = new com_mun_model_component_Inport(xPosition + width / 2,height / (inportNum + 1) * (counter2 + 1) + (yPosition - height / 2));
				inport2.set_portDescription(com_mun_model_enumeration_IOTYPE.INPUT);
				portArray.push(inport2);
				++counter2;
			}
			var outport_2 = new com_mun_model_component_Outport(xPosition - width / 2,yPosition);
			outport_2.set_portDescription(com_mun_model_enumeration_IOTYPE.OUTPUT);
			portArray.push(outport_2);
			break;
		case 3:
			var counter3 = 0;
			while(counter3 < inportNum) {
				var inport3 = new com_mun_model_component_Inport(xPosition - width / 2,height / (inportNum + 1) * (counter3 + 1) + (yPosition - height / 2));
				inport3.set_portDescription(com_mun_model_enumeration_IOTYPE.INPUT);
				portArray.push(inport3);
				++counter3;
			}
			var outport_3 = new com_mun_model_component_Outport(xPosition + width / 2,yPosition);
			outport_3.set_portDescription(com_mun_model_enumeration_IOTYPE.OUTPUT);
			portArray.push(outport_3);
			break;
		default:
		}
		return portArray;
	}
	,drawComponent: function(drawingAdapter,highLight,linkAndComponentArray) {
		var drawComponent = new com_mun_view_drawComponents_DrawXOR(this.component,drawingAdapter);
		if(highLight) {
			drawComponent.drawCorrespondingComponent("red");
		} else {
			drawComponent.drawCorrespondingComponent("black");
		}
	}
	,__class__: com_mun_model_gates_XOR
});
var com_mun_type_Coordinate = function(xPosition,yPosition) {
	this.set_xPosition(xPosition);
	this.set_yPosition(yPosition);
};
$hxClasses["com.mun.type.Coordinate"] = com_mun_type_Coordinate;
com_mun_type_Coordinate.__name__ = ["com","mun","type","Coordinate"];
com_mun_type_Coordinate.prototype = {
	xPosition: null
	,yPosition: null
	,get_xPosition: function() {
		return this.xPosition;
	}
	,set_xPosition: function(value) {
		return this.xPosition = value;
	}
	,get_yPosition: function() {
		return this.yPosition;
	}
	,set_yPosition: function(value) {
		return this.yPosition = value;
	}
	,__class__: com_mun_type_Coordinate
	,__properties__: {set_yPosition:"set_yPosition",get_yPosition:"get_yPosition",set_xPosition:"set_xPosition",get_xPosition:"get_xPosition"}
};
var com_mun_type_HitObject = function() {
};
$hxClasses["com.mun.type.HitObject"] = com_mun_type_HitObject;
com_mun_type_HitObject.__name__ = ["com","mun","type","HitObject"];
com_mun_type_HitObject.prototype = {
	circuitDiagram: null
	,component: null
	,link: null
	,port: null
	,endpoint: null
	,hitNothing: function() {
		if(this.component == null && this.link == null && this.port == null && this.endpoint == null) {
			return true;
		} else {
			return false;
		}
	}
	,get_circuitDiagram: function() {
		return this.circuitDiagram;
	}
	,set_circuitDiagram: function(value) {
		return this.circuitDiagram = value;
	}
	,get_component: function() {
		return this.component;
	}
	,set_component: function(value) {
		return this.component = value;
	}
	,get_link: function() {
		return this.link;
	}
	,set_link: function(value) {
		return this.link = value;
	}
	,get_port: function() {
		return this.port;
	}
	,set_port: function(value) {
		return this.port = value;
	}
	,get_endpoint: function() {
		return this.endpoint;
	}
	,set_endpoint: function(value) {
		return this.endpoint = value;
	}
	,__class__: com_mun_type_HitObject
};
var com_mun_type_LinkAndComponentAndEndpointAndPortArray = function() {
	this.linkArray = [];
	this.componentArray = [];
	this.endponentArray = [];
	this.portArray = [];
};
$hxClasses["com.mun.type.LinkAndComponentAndEndpointAndPortArray"] = com_mun_type_LinkAndComponentAndEndpointAndPortArray;
com_mun_type_LinkAndComponentAndEndpointAndPortArray.__name__ = ["com","mun","type","LinkAndComponentAndEndpointAndPortArray"];
com_mun_type_LinkAndComponentAndEndpointAndPortArray.prototype = {
	linkArray: null
	,componentArray: null
	,endponentArray: null
	,portArray: null
	,addLink: function(link) {
		if(this.linkArray.indexOf(link) == -1 && link != null) {
			this.linkArray.push(link);
		}
	}
	,addComponent: function(component) {
		if(this.componentArray.indexOf(component) == -1 && component != null) {
			this.componentArray.push(component);
		}
	}
	,addEndpoint: function(endpoint) {
		if(this.endponentArray.indexOf(endpoint) == -1 && endpoint != null) {
			this.endponentArray.push(endpoint);
		}
	}
	,addPort: function(port) {
		if(this.portArray.indexOf(port) == -1 && port != null) {
			this.portArray.push(port);
		}
	}
	,removeLink: function(link) {
		if(this.linkArray.indexOf(link) != -1 && link != null) {
			HxOverrides.remove(this.linkArray,link);
		}
	}
	,removeComponent: function(component) {
		if(this.componentArray.indexOf(component) != -1 && component != null) {
			HxOverrides.remove(this.componentArray,component);
		}
	}
	,removeEndpoint: function(endpoint) {
		if(this.endponentArray.indexOf(endpoint) != -1 && endpoint != null) {
			HxOverrides.remove(this.endponentArray,endpoint);
		}
	}
	,removePort: function(port) {
		if(this.portArray.indexOf(port) != -1 && port != null) {
			HxOverrides.remove(this.portArray,port);
		}
	}
	,get_linkIterator: function() {
		return HxOverrides.iter(this.linkArray);
	}
	,get_componentIterator: function() {
		return HxOverrides.iter(this.componentArray);
	}
	,get_endpointIterator: function() {
		return HxOverrides.iter(this.endponentArray);
	}
	,get_portIterator: function() {
		return HxOverrides.iter(this.portArray);
	}
	,getLinkIteratorLength: function() {
		return this.linkArray.length;
	}
	,getEndppointIteratorLength: function() {
		return this.endponentArray.length;
	}
	,getComponentIteratorLength: function() {
		return this.componentArray.length;
	}
	,getPortIteratorLength: function() {
		return this.portArray.length;
	}
	,getComponentFromIndex: function(index) {
		return this.componentArray[index];
	}
	,getLinkFromIndex: function(index) {
		return this.linkArray[index];
	}
	,getEndpointFromIndex: function(index) {
		return this.endponentArray[index];
	}
	,getPortFromIndex: function(index) {
		return this.portArray[index];
	}
	,setArray: function(array) {
		this.clean();
		var i = array.get_linkIterator();
		while(i.hasNext()) {
			var i1 = i.next();
			this.addLink(i1);
		}
		var i2 = array.get_componentIterator();
		while(i2.hasNext()) {
			var i3 = i2.next();
			this.addComponent(i3);
		}
		var i4 = array.get_portIterator();
		while(i4.hasNext()) {
			var i5 = i4.next();
			this.addPort(i5);
		}
		var i6 = array.get_endpointIterator();
		while(i6.hasNext()) {
			var i7 = i6.next();
			this.addEndpoint(i7);
		}
	}
	,clean: function() {
		this.linkArray.splice(0,this.linkArray.length);
		this.componentArray.splice(0,this.componentArray.length);
		this.endponentArray.splice(0,this.endponentArray.length);
		this.portArray.splice(0,this.portArray.length);
	}
	,isEmpty: function() {
		if(this.linkArray.length == 0 && this.componentArray.length == 0 && this.endponentArray.length == 0 && this.portArray.length == 0) {
			return true;
		} else {
			return false;
		}
	}
	,__class__: com_mun_type_LinkAndComponentAndEndpointAndPortArray
};
var com_mun_type_Object = function() {
};
$hxClasses["com.mun.type.Object"] = com_mun_type_Object;
com_mun_type_Object.__name__ = ["com","mun","type","Object"];
com_mun_type_Object.prototype = {
	link: null
	,component: null
	,endPoint: null
	,port: null
	,get_link: function() {
		return this.link;
	}
	,set_link: function(value) {
		return this.link = value;
	}
	,get_component: function() {
		return this.component;
	}
	,set_component: function(value) {
		return this.component = value;
	}
	,get_endPoint: function() {
		return this.endPoint;
	}
	,set_endPoint: function(value) {
		return this.endPoint = value;
	}
	,get_port: function() {
		return this.port;
	}
	,set_port: function(value) {
		return this.port = value;
	}
	,isEmpty: function() {
		if(this.get_link() == null || this.get_component() == null || this.get_endPoint() == null || this.get_port() == null) {
			return true;
		} else {
			return false;
		}
	}
	,__class__: com_mun_type_Object
	,__properties__: {set_port:"set_port",get_port:"get_port",set_endPoint:"set_endPoint",get_endPoint:"get_endPoint",set_component:"set_component",get_component:"get_component",set_link:"set_link",get_link:"get_link"}
};
var com_mun_type_WorldPoint = function(circuitDiagram,coordinate) {
	this.circuitDiagram = circuitDiagram;
	this.coordinate = coordinate;
};
$hxClasses["com.mun.type.WorldPoint"] = com_mun_type_WorldPoint;
com_mun_type_WorldPoint.__name__ = ["com","mun","type","WorldPoint"];
com_mun_type_WorldPoint.prototype = {
	circuitDiagram: null
	,coordinate: null
	,get_circuitDiagram: function() {
		return this.circuitDiagram;
	}
	,set_circuitDiagram: function(value) {
		return this.circuitDiagram = value;
	}
	,get_coordinate: function() {
		return this.coordinate;
	}
	,set_coordinate: function(value) {
		return this.coordinate = value;
	}
	,__class__: com_mun_type_WorldPoint
};
var com_mun_view_drawComponents_DrawComponent = function() { };
$hxClasses["com.mun.view.drawComponents.DrawComponent"] = com_mun_view_drawComponents_DrawComponent;
com_mun_view_drawComponents_DrawComponent.__name__ = ["com","mun","view","drawComponents","DrawComponent"];
com_mun_view_drawComponents_DrawComponent.prototype = {
	drawCorrespondingComponent: null
	,__class__: com_mun_view_drawComponents_DrawComponent
};
var com_mun_view_drawComponents_DrawAND = function(component,drawingAdapter) {
	this.component = component;
	this.drawingAdapter = drawingAdapter;
};
$hxClasses["com.mun.view.drawComponents.DrawAND"] = com_mun_view_drawComponents_DrawAND;
com_mun_view_drawComponents_DrawAND.__name__ = ["com","mun","view","drawComponents","DrawAND"];
com_mun_view_drawComponents_DrawAND.__interfaces__ = [com_mun_view_drawComponents_DrawComponent];
com_mun_view_drawComponents_DrawAND.prototype = {
	drawingAdapter: null
	,component: null
	,drawCorrespondingComponent: function(strokeColor) {
		if(strokeColor == null || strokeColor == "") {
			strokeColor = "black";
		}
		this.drawingAdapter.setStrokeColor(strokeColor);
		this.drawingAdapter.drawAndShape(this.component.get_xPosition(),this.component.get_yPosition(),this.component.get_width(),this.component.get_height(),this.component.get_orientation());
		var i = this.component.get_inportIterator();
		while(i.hasNext()) {
			var i1 = i.next();
			var port = i1;
			this.drawingAdapter.setFillColor("black");
			this.drawingAdapter.drawCricle(port.get_xPosition(),port.get_yPosition(),com_mun_global_Constant.portRadius);
		}
		var i2 = this.component.get_outportIterator();
		while(i2.hasNext()) {
			var i3 = i2.next();
			var port1 = i3;
			this.drawingAdapter.setFillColor("black");
			this.drawingAdapter.drawCricle(port1.get_xPosition(),port1.get_yPosition(),com_mun_global_Constant.portRadius);
		}
		this.drawingAdapter.resetDrawingParam();
	}
	,__class__: com_mun_view_drawComponents_DrawAND
};
var com_mun_view_drawComponents_DrawCompoundComponent = function(component,drawingAdapter,drawingAdapterTrans) {
	this.component = component;
	this.drawingAdapter = drawingAdapter;
	this.drawingAdapterTrans = drawingAdapterTrans;
};
$hxClasses["com.mun.view.drawComponents.DrawCompoundComponent"] = com_mun_view_drawComponents_DrawCompoundComponent;
com_mun_view_drawComponents_DrawCompoundComponent.__name__ = ["com","mun","view","drawComponents","DrawCompoundComponent"];
com_mun_view_drawComponents_DrawCompoundComponent.__interfaces__ = [com_mun_view_drawComponents_DrawComponent];
com_mun_view_drawComponents_DrawCompoundComponent.prototype = {
	drawingAdapter: null
	,component: null
	,drawingAdapterTrans: null
	,drawCorrespondingComponent: function(strokeColor) {
		if(strokeColor == null || strokeColor == "") {
			strokeColor = "black";
		}
		var i = this.component.get_inportIterator();
		while(i.hasNext()) {
			var i1 = i.next();
			var port = i1;
			this.drawingAdapter.setFillColor("black");
			this.drawingAdapter.drawCricle(port.get_xPosition(),port.get_yPosition(),com_mun_global_Constant.portRadius);
		}
		var i2 = this.component.get_outportIterator();
		while(i2.hasNext()) {
			var i3 = i2.next();
			var port1 = i3;
			this.drawingAdapter.setFillColor("black");
			this.drawingAdapter.drawCricle(port1.get_xPosition(),port1.get_yPosition(),com_mun_global_Constant.portRadius);
		}
		this.drawingAdapter.setStrokeColor(strokeColor);
		if(this.component.get_boxType() == com_mun_model_enumeration_BOX.WHITE_BOX) {
			this.drawingAdapter.setFillColor("white");
		} else {
			this.drawingAdapter.setFillColor("gray");
		}
		this.drawingAdapter.drawRect(this.component.get_xPosition(),this.component.get_yPosition(),this.component.get_width(),this.component.get_height());
		if(this.component.get_boxType() == com_mun_model_enumeration_BOX.BLACK_BOX) {
			this.drawingAdapter.setTextColor("black");
			this.drawingAdapter.drawText(this.component.get_name(),this.component.get_xPosition(),this.component.get_yPosition(),this.component.get_width());
		}
		this.drawInportAndOutport();
		this.drawingAdapter.resetDrawingParam();
	}
	,drawInportAndOutport: function() {
		var i = this.component.get_inportIterator();
		while(i.hasNext()) {
			var i1 = i.next();
			var port = i1;
			this.drawingAdapter.setFillColor("black");
			this.drawingAdapter.drawCricle(port.get_xPosition(),port.get_yPosition(),com_mun_global_Constant.portRadius);
			if(this.component.get_boxType() == com_mun_model_enumeration_BOX.WHITE_BOX) {
				var j = this.component.get_componentKind().getInnerCircuitDiagram().get_componentIterator();
				while(j.hasNext()) {
					var j1 = j.next();
					if(j1.getNameOfTheComponentKind() == "Input") {
						if(i1.get_sequence() == j1.get_componentKind().get_sequence()) {
							var k = j1.get_inportIterator();
							while(k.hasNext()) {
								var k1 = k.next();
								var coordinate = this.drawingAdapterTrans.getTransform().pointConvert(new com_mun_type_Coordinate(k1.get_xPosition(),k1.get_yPosition()));
								coordinate = this.drawingAdapter.getTransform().pointInvert(coordinate);
								this.drawingAdapter.drawLine(i1.get_xPosition(),i1.get_yPosition(),coordinate.get_xPosition(),coordinate.get_yPosition());
							}
						}
					}
				}
			}
		}
		var i2 = this.component.get_outportIterator();
		while(i2.hasNext()) {
			var i3 = i2.next();
			var port1 = i3;
			this.drawingAdapter.setFillColor("black");
			this.drawingAdapter.drawCricle(port1.get_xPosition(),port1.get_yPosition(),com_mun_global_Constant.portRadius);
			if(this.component.get_boxType() == com_mun_model_enumeration_BOX.WHITE_BOX) {
				var j2 = this.component.get_componentKind().getInnerCircuitDiagram().get_componentIterator();
				while(j2.hasNext()) {
					var j3 = j2.next();
					if(j3.getNameOfTheComponentKind() == "Output") {
						if(i3.get_sequence() == j3.get_componentKind().get_sequence()) {
							var k2 = j3.get_outportIterator();
							while(k2.hasNext()) {
								var k3 = k2.next();
								var coordinate1 = this.drawingAdapterTrans.getTransform().pointConvert(new com_mun_type_Coordinate(k3.get_xPosition(),k3.get_yPosition()));
								coordinate1 = this.drawingAdapter.getTransform().pointInvert(coordinate1);
								this.drawingAdapter.drawLine(i3.get_xPosition(),i3.get_yPosition(),coordinate1.get_xPosition(),coordinate1.get_yPosition());
							}
						}
					}
				}
			}
		}
	}
	,__class__: com_mun_view_drawComponents_DrawCompoundComponent
};
var com_mun_view_drawComponents_DrawFlipFlop = function(component,drawingAdapter) {
	this.component = component;
	this.drawingAdapter = drawingAdapter;
};
$hxClasses["com.mun.view.drawComponents.DrawFlipFlop"] = com_mun_view_drawComponents_DrawFlipFlop;
com_mun_view_drawComponents_DrawFlipFlop.__name__ = ["com","mun","view","drawComponents","DrawFlipFlop"];
com_mun_view_drawComponents_DrawFlipFlop.__interfaces__ = [com_mun_view_drawComponents_DrawComponent];
com_mun_view_drawComponents_DrawFlipFlop.prototype = {
	drawingAdapter: null
	,component: null
	,drawCorrespondingComponent: function(strokeColor) {
		if(strokeColor == null || strokeColor == "") {
			strokeColor = "black";
		}
		this.drawingAdapter.setStrokeColor(strokeColor);
		this.drawingAdapter.drawRect(this.component.get_xPosition(),this.component.get_yPosition(),this.component.get_width(),this.component.get_height());
		this.drawingAdapter.drawText("FF",this.component.get_xPosition() - 4,this.component.get_yPosition(),this.component.get_width());
		var i = this.component.get_inportIterator();
		while(i.hasNext()) {
			var i1 = i.next();
			var port = i1;
			this.drawingAdapter.setFillColor("black");
			this.drawingAdapter.drawCricle(port.get_xPosition(),port.get_yPosition(),com_mun_global_Constant.portRadius);
			var _g = this.component.get_orientation();
			switch(_g[1]) {
			case 0:
				if(port.get_portDescription() == com_mun_model_enumeration_IOTYPE.D) {
					this.drawingAdapter.drawText("D",port.get_xPosition() - 2,port.get_yPosition() - 5,this.component.get_width() - 2);
				} else if(port.get_portDescription() == com_mun_model_enumeration_IOTYPE.CLK) {
					this.drawingAdapter.drawText("CLK",port.get_xPosition() - 6,port.get_yPosition() - 5,this.component.get_width() - 2);
				}
				break;
			case 1:
				if(port.get_portDescription() == com_mun_model_enumeration_IOTYPE.D) {
					this.drawingAdapter.drawText("D",port.get_xPosition() - 3,port.get_yPosition() + 10,this.component.get_width() - 2);
				} else if(port.get_portDescription() == com_mun_model_enumeration_IOTYPE.CLK) {
					this.drawingAdapter.drawText("CLK",port.get_xPosition() - 3,port.get_yPosition() + 10,this.component.get_width() - 2);
				}
				break;
			case 2:
				if(port.get_portDescription() == com_mun_model_enumeration_IOTYPE.D) {
					this.drawingAdapter.drawText("D",port.get_xPosition() - 10,port.get_yPosition() + 2,this.component.get_width() - 2);
				} else if(port.get_portDescription() == com_mun_model_enumeration_IOTYPE.CLK) {
					this.drawingAdapter.drawText("CLK",port.get_xPosition() - 20,port.get_yPosition() + 2,this.component.get_width() - 2);
				}
				break;
			case 3:
				if(port.get_portDescription() == com_mun_model_enumeration_IOTYPE.D) {
					this.drawingAdapter.drawText("D",port.get_xPosition() + 3,port.get_yPosition() + 3,this.component.get_width() - 2);
				} else if(port.get_portDescription() == com_mun_model_enumeration_IOTYPE.CLK) {
					this.drawingAdapter.drawText("CLK",port.get_xPosition() + 3,port.get_yPosition() + 3,this.component.get_width() - 2);
				}
				break;
			default:
			}
		}
		var i2 = this.component.get_outportIterator();
		while(i2.hasNext()) {
			var i3 = i2.next();
			var port1 = i3;
			this.drawingAdapter.setFillColor("black");
			this.drawingAdapter.drawCricle(port1.get_xPosition(),port1.get_yPosition(),com_mun_global_Constant.portRadius);
			var _g1 = this.component.get_orientation();
			switch(_g1[1]) {
			case 0:
				if(port1.get_portDescription() == com_mun_model_enumeration_IOTYPE.Q) {
					this.drawingAdapter.drawText("Q",port1.get_xPosition() - 2,port1.get_yPosition() + 10,this.component.get_width() - 2);
				} else if(port1.get_portDescription() == com_mun_model_enumeration_IOTYPE.QN) {
					this.drawingAdapter.drawText("QN",port1.get_xPosition() - 6,port1.get_yPosition() + 10,this.component.get_width() - 2);
				}
				break;
			case 1:
				if(port1.get_portDescription() == com_mun_model_enumeration_IOTYPE.Q) {
					this.drawingAdapter.drawText("Q",port1.get_xPosition() - 3,port1.get_yPosition() - 7,this.component.get_width() - 2);
				} else if(port1.get_portDescription() == com_mun_model_enumeration_IOTYPE.QN) {
					this.drawingAdapter.drawText("QN",port1.get_xPosition() - 3,port1.get_yPosition() - 7,this.component.get_width() - 2);
				}
				break;
			case 2:
				if(port1.get_portDescription() == com_mun_model_enumeration_IOTYPE.Q) {
					this.drawingAdapter.drawText("Q",port1.get_xPosition() + 3,port1.get_yPosition() + 2,this.component.get_width() - 2);
				} else if(port1.get_portDescription() == com_mun_model_enumeration_IOTYPE.QN) {
					this.drawingAdapter.drawText("QN",port1.get_xPosition() + 3,port1.get_yPosition() + 2,this.component.get_width() - 2);
				}
				break;
			case 3:
				if(port1.get_portDescription() == com_mun_model_enumeration_IOTYPE.Q) {
					this.drawingAdapter.drawText("Q",port1.get_xPosition() - 10,port1.get_yPosition() + 3,this.component.get_width() - 2);
				} else if(port1.get_portDescription() == com_mun_model_enumeration_IOTYPE.QN) {
					this.drawingAdapter.drawText("QN",port1.get_xPosition() - 14,port1.get_yPosition() + 3,this.component.get_width() - 2);
				}
				break;
			default:
			}
		}
		this.drawingAdapter.resetDrawingParam();
	}
	,__class__: com_mun_view_drawComponents_DrawFlipFlop
};
var com_mun_view_drawComponents_DrawInput = function(component,drawingAdapter) {
	this.component = component;
	this.drawingAdapter = drawingAdapter;
};
$hxClasses["com.mun.view.drawComponents.DrawInput"] = com_mun_view_drawComponents_DrawInput;
com_mun_view_drawComponents_DrawInput.__name__ = ["com","mun","view","drawComponents","DrawInput"];
com_mun_view_drawComponents_DrawInput.__interfaces__ = [com_mun_view_drawComponents_DrawComponent];
com_mun_view_drawComponents_DrawInput.prototype = {
	drawingAdapter: null
	,component: null
	,drawCorrespondingComponent: function(strokeColor) {
		if(strokeColor == null || strokeColor == "") {
			strokeColor = "black";
		}
		this.drawingAdapter.setStrokeColor(strokeColor);
		this.drawingAdapter.setFillColor("red");
		this.drawingAdapter.drawCricle(this.component.get_xPosition(),this.component.get_yPosition(),7);
		this.drawingAdapter.setTextColor("black");
		var i = this.component.get_outportIterator();
		while(i.hasNext()) {
			var i1 = i.next();
			var port = i1;
			this.drawingAdapter.setFillColor("black");
			this.drawingAdapter.drawCricle(port.get_xPosition(),port.get_yPosition(),com_mun_global_Constant.portRadius);
		}
		this.drawingAdapter.resetDrawingParam();
	}
	,__class__: com_mun_view_drawComponents_DrawInput
};
var com_mun_view_drawComponents_DrawLink = function(link,drawingAdapter) {
	this.link = link;
	this.drawingAdapter = drawingAdapter;
};
$hxClasses["com.mun.view.drawComponents.DrawLink"] = com_mun_view_drawComponents_DrawLink;
com_mun_view_drawComponents_DrawLink.__name__ = ["com","mun","view","drawComponents","DrawLink"];
com_mun_view_drawComponents_DrawLink.__interfaces__ = [com_mun_view_drawComponents_DrawComponent];
com_mun_view_drawComponents_DrawLink.prototype = {
	drawingAdapter: null
	,link: null
	,drawCorrespondingComponent: function(strokeColor) {
		if(strokeColor == null || strokeColor == "") {
			strokeColor = "black";
		}
		this.drawingAdapter.setStrokeColor(strokeColor);
		this.drawingAdapter.drawLine(this.link.get_leftEndpoint().get_xPosition(),this.link.get_leftEndpoint().get_yPosition(),this.link.get_rightEndpoint().get_xPosition(),this.link.get_rightEndpoint().get_yPosition());
	}
	,__class__: com_mun_view_drawComponents_DrawLink
};
var com_mun_view_drawComponents_DrawMUX = function(component,drawingAdapter) {
	this.component = component;
	this.drawingAdapter = drawingAdapter;
};
$hxClasses["com.mun.view.drawComponents.DrawMUX"] = com_mun_view_drawComponents_DrawMUX;
com_mun_view_drawComponents_DrawMUX.__name__ = ["com","mun","view","drawComponents","DrawMUX"];
com_mun_view_drawComponents_DrawMUX.__interfaces__ = [com_mun_view_drawComponents_DrawComponent];
com_mun_view_drawComponents_DrawMUX.prototype = {
	drawingAdapter: null
	,component: null
	,drawCorrespondingComponent: function(strokeColor) {
		if(strokeColor == null || strokeColor == "") {
			strokeColor = "black";
		}
		this.drawingAdapter.setStrokeColor(strokeColor);
		this.drawingAdapter.drawRect(this.component.get_xPosition(),this.component.get_yPosition(),this.component.get_width(),this.component.get_height());
		this.drawingAdapter.setTextColor("black");
		this.drawingAdapter.drawText("MUX",this.component.get_xPosition(),this.component.get_yPosition(),this.component.get_width());
		var i = this.component.get_inportIterator();
		while(i.hasNext()) {
			var i1 = i.next();
			var port = i1;
			this.drawingAdapter.setFillColor("black");
			this.drawingAdapter.drawCricle(port.get_xPosition(),port.get_yPosition(),com_mun_global_Constant.portRadius);
			this.drawingAdapter.setTextColor("black");
			var _g = this.component.get_orientation();
			switch(_g[1]) {
			case 0:
				if(port.get_portDescription() == com_mun_model_enumeration_IOTYPE.S) {
					this.drawingAdapter.drawText("S",port.get_xPosition() - 7,port.get_yPosition() + 2,this.component.get_width() - 4);
				} else {
					this.drawingAdapter.drawText(port.get_sequence() + "",port.get_xPosition() - 2,port.get_yPosition() - 5,this.component.get_width() - 4);
				}
				break;
			case 1:
				if(port.get_portDescription() == com_mun_model_enumeration_IOTYPE.S) {
					this.drawingAdapter.drawText("S",port.get_xPosition() + 3,port.get_yPosition(),this.component.get_width() - 4);
				} else {
					this.drawingAdapter.drawText(port.get_sequence() + "",port.get_xPosition(),port.get_yPosition() + 10,this.component.get_width() - 4);
				}
				break;
			case 2:
				if(port.get_portDescription() == com_mun_model_enumeration_IOTYPE.S) {
					this.drawingAdapter.drawText("S",port.get_xPosition() - 2,port.get_yPosition() + 10,this.component.get_width() - 4);
				} else {
					this.drawingAdapter.drawText(port.get_sequence() + "",port.get_xPosition() - 8,port.get_yPosition(),this.component.get_width() - 4);
				}
				break;
			case 3:
				if(port.get_portDescription() == com_mun_model_enumeration_IOTYPE.S) {
					this.drawingAdapter.drawText("S",port.get_xPosition() - 2,port.get_yPosition() + 10,this.component.get_width() - 4);
				} else {
					this.drawingAdapter.drawText(port.get_sequence() + "",port.get_xPosition() + 3,port.get_yPosition() + 2,this.component.get_width() - 4);
				}
				break;
			default:
			}
		}
		var i2 = this.component.get_outportIterator();
		while(i2.hasNext()) {
			var i3 = i2.next();
			var port1 = i3;
			this.drawingAdapter.setFillColor("black");
			this.drawingAdapter.drawCricle(port1.get_xPosition(),port1.get_yPosition(),com_mun_global_Constant.portRadius);
		}
		this.drawingAdapter.resetDrawingParam();
	}
	,__class__: com_mun_view_drawComponents_DrawMUX
};
var com_mun_view_drawComponents_DrawNAND = function(component,drawingAdapter) {
	this.component = component;
	this.drawingAdapter = drawingAdapter;
};
$hxClasses["com.mun.view.drawComponents.DrawNAND"] = com_mun_view_drawComponents_DrawNAND;
com_mun_view_drawComponents_DrawNAND.__name__ = ["com","mun","view","drawComponents","DrawNAND"];
com_mun_view_drawComponents_DrawNAND.__interfaces__ = [com_mun_view_drawComponents_DrawComponent];
com_mun_view_drawComponents_DrawNAND.prototype = {
	drawingAdapter: null
	,component: null
	,drawCorrespondingComponent: function(strokeColor) {
		if(strokeColor == null || strokeColor == "") {
			strokeColor = "black";
		}
		this.drawingAdapter.setStrokeColor(strokeColor);
		this.drawingAdapter.drawNAndShape(this.component.get_xPosition(),this.component.get_yPosition(),this.component.get_width(),this.component.get_height(),this.component.get_orientation());
		var i = this.component.get_inportIterator();
		while(i.hasNext()) {
			var i1 = i.next();
			var port = i1;
			this.drawingAdapter.setFillColor("black");
			this.drawingAdapter.drawCricle(port.get_xPosition(),port.get_yPosition(),com_mun_global_Constant.portRadius);
		}
		var i2 = this.component.get_outportIterator();
		while(i2.hasNext()) {
			var i3 = i2.next();
			var port1 = i3;
			this.drawingAdapter.setFillColor("black");
			this.drawingAdapter.drawCricle(port1.get_xPosition(),port1.get_yPosition(),com_mun_global_Constant.portRadius);
		}
		this.drawingAdapter.resetDrawingParam();
	}
	,__class__: com_mun_view_drawComponents_DrawNAND
};
var com_mun_view_drawComponents_DrawNOR = function(component,drawingAdapter) {
	this.component = component;
	this.drawingAdapter = drawingAdapter;
};
$hxClasses["com.mun.view.drawComponents.DrawNOR"] = com_mun_view_drawComponents_DrawNOR;
com_mun_view_drawComponents_DrawNOR.__name__ = ["com","mun","view","drawComponents","DrawNOR"];
com_mun_view_drawComponents_DrawNOR.__interfaces__ = [com_mun_view_drawComponents_DrawComponent];
com_mun_view_drawComponents_DrawNOR.prototype = {
	drawingAdapter: null
	,component: null
	,drawCorrespondingComponent: function(strokeColor) {
		if(strokeColor == null || strokeColor == "") {
			strokeColor = "black";
		}
		this.drawingAdapter.setStrokeColor(strokeColor);
		this.drawingAdapter.drawNOrShape(this.component.get_xPosition(),this.component.get_yPosition(),this.component.get_width(),this.component.get_height(),this.component.get_orientation());
		var i = this.component.get_inportIterator();
		while(i.hasNext()) {
			var i1 = i.next();
			var port = i1;
			this.drawingAdapter.setFillColor("black");
			this.drawingAdapter.drawCricle(port.get_xPosition(),port.get_yPosition(),com_mun_global_Constant.portRadius);
		}
		var i2 = this.component.get_outportIterator();
		while(i2.hasNext()) {
			var i3 = i2.next();
			var port1 = i3;
			this.drawingAdapter.setFillColor("black");
			this.drawingAdapter.drawCricle(port1.get_xPosition(),port1.get_yPosition(),com_mun_global_Constant.portRadius);
		}
		this.drawingAdapter.resetDrawingParam();
	}
	,__class__: com_mun_view_drawComponents_DrawNOR
};
var com_mun_view_drawComponents_DrawNOT = function(component,drawingAdapter) {
	this.component = component;
	this.drawingAdapter = drawingAdapter;
};
$hxClasses["com.mun.view.drawComponents.DrawNOT"] = com_mun_view_drawComponents_DrawNOT;
com_mun_view_drawComponents_DrawNOT.__name__ = ["com","mun","view","drawComponents","DrawNOT"];
com_mun_view_drawComponents_DrawNOT.__interfaces__ = [com_mun_view_drawComponents_DrawComponent];
com_mun_view_drawComponents_DrawNOT.prototype = {
	drawingAdapter: null
	,component: null
	,drawCorrespondingComponent: function(strokeColor) {
		if(strokeColor == null || strokeColor == "") {
			strokeColor = "black";
		}
		this.drawingAdapter.setStrokeColor(strokeColor);
		this.drawingAdapter.drawNotShape(this.component.get_xPosition(),this.component.get_yPosition(),this.component.get_width(),this.component.get_height(),this.component.get_orientation());
		var i = this.component.get_inportIterator();
		while(i.hasNext()) {
			var i1 = i.next();
			var port = i1;
			this.drawingAdapter.setFillColor("black");
			this.drawingAdapter.drawCricle(port.get_xPosition(),port.get_yPosition(),com_mun_global_Constant.portRadius);
		}
		var i2 = this.component.get_outportIterator();
		while(i2.hasNext()) {
			var i3 = i2.next();
			var port1 = i3;
			this.drawingAdapter.setFillColor("black");
			this.drawingAdapter.drawCricle(port1.get_xPosition(),port1.get_yPosition(),com_mun_global_Constant.portRadius);
		}
		this.drawingAdapter.resetDrawingParam();
	}
	,__class__: com_mun_view_drawComponents_DrawNOT
};
var com_mun_view_drawComponents_DrawOR = function(component,drawingAdapter) {
	this.component = component;
	this.drawingAdapter = drawingAdapter;
};
$hxClasses["com.mun.view.drawComponents.DrawOR"] = com_mun_view_drawComponents_DrawOR;
com_mun_view_drawComponents_DrawOR.__name__ = ["com","mun","view","drawComponents","DrawOR"];
com_mun_view_drawComponents_DrawOR.__interfaces__ = [com_mun_view_drawComponents_DrawComponent];
com_mun_view_drawComponents_DrawOR.prototype = {
	drawingAdapter: null
	,component: null
	,drawCorrespondingComponent: function(strokeColor) {
		if(strokeColor == null || strokeColor == "") {
			strokeColor = "black";
		}
		this.drawingAdapter.setStrokeColor(strokeColor);
		this.drawingAdapter.drawOrShape(this.component.get_xPosition(),this.component.get_yPosition(),this.component.get_width(),this.component.get_height(),this.component.get_orientation());
		var i = this.component.get_inportIterator();
		while(i.hasNext()) {
			var i1 = i.next();
			var port = i1;
			this.drawingAdapter.setFillColor("black");
			this.drawingAdapter.drawCricle(port.get_xPosition(),port.get_yPosition(),com_mun_global_Constant.portRadius);
		}
		var i2 = this.component.get_outportIterator();
		while(i2.hasNext()) {
			var i3 = i2.next();
			var port1 = i3;
			this.drawingAdapter.setFillColor("black");
			this.drawingAdapter.drawCricle(port1.get_xPosition(),port1.get_yPosition(),com_mun_global_Constant.portRadius);
		}
		this.drawingAdapter.resetDrawingParam();
	}
	,__class__: com_mun_view_drawComponents_DrawOR
};
var com_mun_view_drawComponents_DrawOutput = function(component,drawingAdapter) {
	this.component = component;
	this.drawingAdapter = drawingAdapter;
};
$hxClasses["com.mun.view.drawComponents.DrawOutput"] = com_mun_view_drawComponents_DrawOutput;
com_mun_view_drawComponents_DrawOutput.__name__ = ["com","mun","view","drawComponents","DrawOutput"];
com_mun_view_drawComponents_DrawOutput.__interfaces__ = [com_mun_view_drawComponents_DrawComponent];
com_mun_view_drawComponents_DrawOutput.prototype = {
	drawingAdapter: null
	,component: null
	,drawCorrespondingComponent: function(strokeColor) {
		if(strokeColor == null || strokeColor == "") {
			strokeColor = "black";
		}
		this.drawingAdapter.setStrokeColor(strokeColor);
		this.drawingAdapter.setFillColor("black");
		this.drawingAdapter.drawCricle(this.component.get_xPosition(),this.component.get_yPosition(),7);
		this.drawingAdapter.setTextColor("white");
		var i = this.component.get_inportIterator();
		while(i.hasNext()) {
			var i1 = i.next();
			var port = i1;
			this.drawingAdapter.setFillColor("black");
			this.drawingAdapter.drawCricle(port.get_xPosition(),port.get_yPosition(),com_mun_global_Constant.portRadius);
		}
		this.drawingAdapter.resetDrawingParam();
	}
	,__class__: com_mun_view_drawComponents_DrawOutput
};
var com_mun_view_drawComponents_DrawXOR = function(component,drawingAdapter) {
	this.component = component;
	this.drawingAdapter = drawingAdapter;
};
$hxClasses["com.mun.view.drawComponents.DrawXOR"] = com_mun_view_drawComponents_DrawXOR;
com_mun_view_drawComponents_DrawXOR.__name__ = ["com","mun","view","drawComponents","DrawXOR"];
com_mun_view_drawComponents_DrawXOR.__interfaces__ = [com_mun_view_drawComponents_DrawComponent];
com_mun_view_drawComponents_DrawXOR.prototype = {
	drawingAdapter: null
	,component: null
	,drawCorrespondingComponent: function(strokeColor) {
		if(strokeColor == null || strokeColor == "") {
			strokeColor = "black";
		}
		this.drawingAdapter.setStrokeColor(strokeColor);
		this.drawingAdapter.drawXorShape(this.component.get_xPosition(),this.component.get_yPosition(),this.component.get_width(),this.component.get_height(),this.component.get_orientation());
		var i = this.component.get_inportIterator();
		while(i.hasNext()) {
			var i1 = i.next();
			var port = i1;
			this.drawingAdapter.setFillColor("black");
			this.drawingAdapter.drawCricle(port.get_xPosition(),port.get_yPosition(),com_mun_global_Constant.portRadius);
		}
		var i2 = this.component.get_outportIterator();
		while(i2.hasNext()) {
			var i3 = i2.next();
			var port1 = i3;
			this.drawingAdapter.setFillColor("black");
			this.drawingAdapter.drawCricle(port1.get_xPosition(),port1.get_yPosition(),com_mun_global_Constant.portRadius);
		}
		this.drawingAdapter.resetDrawingParam();
	}
	,__class__: com_mun_view_drawComponents_DrawXOR
};
var com_mun_view_drawingImpl_Box = function(x_position,y_position,width,height,orientation,transform) {
	var wnw = new com_mun_type_Coordinate(x_position - width / 2,y_position - height / 2);
	var wse = new com_mun_type_Coordinate(x_position + width / 2,y_position + height / 2);
	var vnw = transform.pointConvert(wnw);
	var vse = transform.pointConvert(wse);
	var x0 = vnw.get_xPosition();
	var y0 = vnw.get_yPosition();
	var x1 = vse.get_xPosition();
	var y1 = vse.get_yPosition();
	switch(orientation[1]) {
	case 0:
		this.xb = x0;
		this.yb = y0;
		this.xc = x1;
		this.yc = y0;
		this.xd = x1;
		this.yd = y1;
		this.xa = x0;
		this.ya = y1;
		break;
	case 1:
		this.xd = x0;
		this.yd = y0;
		this.xa = x1;
		this.ya = y0;
		this.xb = x1;
		this.yb = y1;
		this.xc = x0;
		this.yc = y1;
		break;
	case 2:
		this.xc = x0;
		this.yc = y0;
		this.xd = x1;
		this.yd = y0;
		this.xa = x1;
		this.ya = y1;
		this.xb = x0;
		this.yb = y1;
		break;
	case 3:
		this.xa = x0;
		this.ya = y0;
		this.xb = x1;
		this.yb = y0;
		this.xc = x1;
		this.yc = y1;
		this.xd = x0;
		this.yd = y1;
		break;
	default:
	}
};
$hxClasses["com.mun.view.drawingImpl.Box"] = com_mun_view_drawingImpl_Box;
com_mun_view_drawingImpl_Box.__name__ = ["com","mun","view","drawingImpl","Box"];
com_mun_view_drawingImpl_Box.prototype = {
	xa: null
	,ya: null
	,xb: null
	,yb: null
	,xc: null
	,yc: null
	,xd: null
	,yd: null
	,get_xa: function() {
		return this.xa;
	}
	,get_ya: function() {
		return this.ya;
	}
	,get_xb: function() {
		return this.xb;
	}
	,get_yb: function() {
		return this.yb;
	}
	,get_xc: function() {
		return this.xc;
	}
	,get_yc: function() {
		return this.yc;
	}
	,get_xd: function() {
		return this.xd;
	}
	,get_yd: function() {
		return this.yd;
	}
	,__class__: com_mun_view_drawingImpl_Box
};
var com_mun_view_drawingImpl_DrawingAdapter = function(transform,context) {
	this.font = "8px serif";
	this.lineWidth = 1.0;
	this.textColor = "black";
	this.fillColor = "gray";
	this.strokeColor = "black";
	this.trans = transform;
	this.cxt = context;
};
$hxClasses["com.mun.view.drawingImpl.DrawingAdapter"] = com_mun_view_drawingImpl_DrawingAdapter;
com_mun_view_drawingImpl_DrawingAdapter.__name__ = ["com","mun","view","drawingImpl","DrawingAdapter"];
com_mun_view_drawingImpl_DrawingAdapter.__interfaces__ = [com_mun_model_drawingInterface_DrawingAdapterI];
com_mun_view_drawingImpl_DrawingAdapter.prototype = {
	cxt: null
	,strokeColor: null
	,fillColor: null
	,textColor: null
	,lineWidth: null
	,font: null
	,trans: null
	,resetDrawingParam: function() {
		this.strokeColor = "black";
		this.fillColor = "gray";
		this.textColor = "black";
		this.lineWidth = 1.0;
		this.font = "8px serif";
	}
	,setStrokeColor: function(color) {
		this.strokeColor = color;
	}
	,setFillColor: function(color) {
		this.fillColor = color;
	}
	,setTextColor: function(color) {
		this.textColor = color;
	}
	,setTextFont: function(font) {
		this.font = font;
	}
	,setLineWidth: function(width) {
		this.cxt.lineWidth = width;
	}
	,get_cxt: function() {
		return this.cxt;
	}
	,set_cxt: function(value) {
		this.cxt = value;
	}
	,getTransform: function() {
		return this.trans;
	}
	,transform: function(transform) {
		var drawingAdapter = new com_mun_view_drawingImpl_DrawingAdapter(transform.compose(this.trans),this.cxt);
		return drawingAdapter;
	}
	,drawAndShape: function(x,y,width,height,orientation) {
		var r = new com_mun_view_drawingImpl_Box(x,y,width,height,orientation,this.trans);
		var vCenterCoordinate = this.trans.pointConvert(new com_mun_type_Coordinate(x,y));
		this.cxt.beginPath();
		this.cxt.moveTo(r.get_xa(),r.get_ya());
		this.cxt.lineTo((r.get_xa() + r.get_xb()) / 2,(r.get_ya() + r.get_yb()) / 2);
		var cxmin = Math.min(Math.min(r.get_xa(),r.get_xb()),Math.min(r.get_xc(),r.get_xd()));
		var cymin = Math.min(Math.min(r.get_ya(),r.get_yb()),Math.min(r.get_yc(),r.get_yd()));
		var cxmax = Math.max(Math.max(r.get_xa(),r.get_xb()),Math.max(r.get_xc(),r.get_xd()));
		var cymax = Math.max(Math.max(r.get_ya(),r.get_yb()),Math.max(r.get_yc(),r.get_yd()));
		switch(orientation[1]) {
		case 0:
			this.cxt.ellipse(vCenterCoordinate.get_xPosition(),vCenterCoordinate.get_yPosition(),(cxmax - cxmin) / 2,(cymax - cymin) / 2,180 * Math.PI / 180,0,Math.PI);
			break;
		case 1:
			this.cxt.ellipse(vCenterCoordinate.get_xPosition(),vCenterCoordinate.get_yPosition(),(cxmax - cxmin) / 2,(cymax - cymin) / 2,0 * Math.PI / 180,0,Math.PI);
			break;
		case 2:
			this.cxt.ellipse(vCenterCoordinate.get_xPosition(),vCenterCoordinate.get_yPosition(),(cxmax - cxmin) / 2,(cymax - cymin) / 2,90 * Math.PI / 180,0,Math.PI);
			break;
		case 3:
			this.cxt.ellipse(vCenterCoordinate.get_xPosition(),vCenterCoordinate.get_yPosition(),(cxmax - cxmin) / 2,(cymax - cymin) / 2,270 * Math.PI / 180,0,Math.PI);
			break;
		default:
		}
		this.cxt.lineTo(r.get_xd(),r.get_yd());
		this.cxt.closePath();
		this.cxt.fillStyle = this.fillColor;
		this.cxt.strokeStyle = this.strokeColor;
		this.cxt.lineWidth = this.lineWidth;
		this.cxt.fill();
		this.cxt.stroke();
	}
	,drawNAndShape: function(x,y,width,height,orientation) {
		var r = new com_mun_view_drawingImpl_Box(x,y,width,height,orientation,this.trans);
		var vCenterCoordinate = this.trans.pointConvert(new com_mun_type_Coordinate(x,y));
		this.cxt.beginPath();
		this.cxt.moveTo(r.get_xa(),r.get_ya());
		this.cxt.lineTo((r.get_xa() + r.get_xb()) / 2,(r.get_ya() + r.get_yb()) / 2);
		this.cxt.closePath();
		var cxmin = Math.min(Math.min(r.get_xa(),r.get_xb()),Math.min(r.get_xc(),r.get_xd()));
		var cymin = Math.min(Math.min(r.get_ya(),r.get_yb()),Math.min(r.get_yc(),r.get_yd()));
		var cxmax = Math.max(Math.max(r.get_xa(),r.get_xb()),Math.max(r.get_xc(),r.get_xd()));
		var cymax = Math.max(Math.max(r.get_ya(),r.get_yb()),Math.max(r.get_yc(),r.get_yd()));
		var circleCentreX = (r.get_xb() + r.get_xc()) / 2;
		var circleCentreY = (r.get_yb() + r.get_yc()) / 2;
		var radius = Math.sqrt((r.get_xb() - r.get_xc()) * (r.get_xb() - r.get_xc()) + (r.get_yb() - r.get_yc()) * (r.get_yb() - r.get_yc())) / 20;
		switch(orientation[1]) {
		case 0:
			this.cxt.ellipse(vCenterCoordinate.get_xPosition(),vCenterCoordinate.get_yPosition(),(cxmax - cxmin) / 2,(cymax - cymin) / 2 - 2 * radius,180 * Math.PI / 180,0,Math.PI);
			break;
		case 1:
			this.cxt.ellipse(vCenterCoordinate.get_xPosition(),vCenterCoordinate.get_yPosition(),(cxmax - cxmin) / 2,(cymax - cymin) / 2 - 2 * radius,0 * Math.PI / 180,0,Math.PI);
			break;
		case 2:
			this.cxt.ellipse(vCenterCoordinate.get_xPosition(),vCenterCoordinate.get_yPosition(),(cxmax - cxmin) / 2,(cymax - cymin) / 2 - 2 * radius,90 * Math.PI / 180,0,Math.PI);
			break;
		case 3:
			this.cxt.ellipse(vCenterCoordinate.get_xPosition(),vCenterCoordinate.get_yPosition(),(cxmax - cxmin) / 2,(cymax - cymin) / 2 - 2 * radius,270 * Math.PI / 180,0,Math.PI);
			break;
		default:
		}
		this.cxt.lineTo(r.get_xd(),r.get_yd());
		this.cxt.closePath();
		this.cxt.moveTo(vCenterCoordinate.get_xPosition() + (cymax - cymin) / 2 - 2 * radius,vCenterCoordinate.get_yPosition());
		this.cxt.arc(vCenterCoordinate.get_xPosition() + (cymax - cymin) / 2 - 2 * radius,vCenterCoordinate.get_yPosition(),radius,0,2 * Math.PI,false);
		this.cxt.closePath();
		this.cxt.fillStyle = this.fillColor;
		this.cxt.strokeStyle = this.strokeColor;
		this.cxt.lineWidth = this.lineWidth;
		this.cxt.fill();
		this.cxt.stroke();
	}
	,drawOrShape: function(x,y,width,height,orientation) {
		var r = new com_mun_view_drawingImpl_Box(x,y,width,height,orientation,this.trans);
		this.cxt.beginPath();
		this.cxt.moveTo(r.get_xa(),r.get_ya());
		this.cxt.quadraticCurveTo((r.get_xa() + r.get_xb()) / 2,(r.get_ya() + r.get_yb()) / 2,(r.get_xb() + r.get_xc()) / 2,(r.get_yb() + r.get_yc()) / 2);
		this.cxt.quadraticCurveTo((r.get_xc() + r.get_xd()) / 2,(r.get_yc() + r.get_yd()) / 2,r.get_xd(),r.get_yd());
		this.cxt.quadraticCurveTo(0.25 * (r.get_xa() + r.get_xb() + r.get_xc() + r.get_xd()),0.25 * (r.get_ya() + r.get_yb() + r.get_yc() + r.get_yd()),r.get_xa(),r.get_ya());
		this.cxt.closePath();
		this.cxt.fillStyle = this.fillColor;
		this.cxt.strokeStyle = this.strokeColor;
		this.cxt.lineWidth = this.lineWidth;
		this.cxt.fill();
		this.cxt.stroke();
	}
	,drawNOrShape: function(x,y,width,height,orientation) {
		var r = new com_mun_view_drawingImpl_Box(x,y,width,height,orientation,this.trans);
		var radius = Math.sqrt((r.get_xb() - r.get_xc()) * (r.get_xb() - r.get_xc()) + (r.get_yb() - r.get_yc()) * (r.get_yb() - r.get_yc())) / 10;
		this.cxt.beginPath();
		this.cxt.moveTo(r.get_xa(),r.get_ya());
		this.cxt.quadraticCurveTo((r.get_xa() + r.get_xb()) / 2,(r.get_ya() + r.get_yb()) / 2,(r.get_xb() + r.get_xc()) / 2,(r.get_yb() + r.get_yc()) / 2);
		this.cxt.quadraticCurveTo((r.get_xc() + r.get_xd()) / 2,(r.get_yc() + r.get_yd()) / 2,r.get_xd(),r.get_yd());
		this.cxt.quadraticCurveTo(0.25 * (r.get_xa() + r.get_xb() + r.get_xc() + r.get_xd()),0.25 * (r.get_ya() + r.get_yb() + r.get_yc() + r.get_yd()),r.get_xa(),r.get_ya());
		this.cxt.closePath();
		this.cxt.lineWidth = this.lineWidth;
		this.cxt.strokeStyle = this.strokeColor;
		this.cxt.fillStyle = this.fillColor;
		this.cxt.fill();
		this.cxt.stroke();
	}
	,drawBufferShape: function(x,y,width,height,orientation) {
		var r = new com_mun_view_drawingImpl_Box(x,y,width,height,orientation,this.trans);
		this.cxt.beginPath();
		this.cxt.moveTo(r.get_xa(),r.get_ya());
		this.cxt.lineTo((r.get_xb() + r.get_xc()) / 2,(r.get_yb() + r.get_yc()) / 2);
		this.cxt.lineTo(r.get_xd(),r.get_yd());
		this.cxt.fillStyle = this.fillColor;
		this.cxt.strokeStyle = this.strokeColor;
		this.cxt.lineWidth = this.lineWidth;
		this.cxt.closePath();
		this.cxt.fill();
		this.cxt.stroke();
	}
	,drawNotShape: function(x,y,width,height,orientation) {
		var r = new com_mun_view_drawingImpl_Box(x,y,width,height,orientation,this.trans);
		this.cxt.beginPath();
		this.cxt.moveTo(r.get_xa(),r.get_ya());
		this.cxt.lineTo((r.get_xb() + r.get_xc()) / 2,(r.get_yb() + r.get_yc()) / 2);
		this.cxt.lineTo(r.get_xd(),r.get_yd());
		this.cxt.closePath();
		var circleCentreX = (r.get_xb() + r.get_xc()) / 2;
		var circleCentreY = (r.get_yb() + r.get_yc()) / 2;
		var radius = Math.sqrt((r.get_xb() - r.get_xc()) * (r.get_xb() - r.get_xc()) + (r.get_yb() - r.get_yc()) * (r.get_yb() - r.get_yc())) / 10;
		switch(orientation[1]) {
		case 0:
			this.cxt.arc(circleCentreX,circleCentreY + radius / 2,radius,0,2 * Math.PI,false);
			break;
		case 1:
			this.cxt.arc(circleCentreX,circleCentreY - radius / 2,radius,0,2 * Math.PI,false);
			break;
		case 2:
			this.cxt.arc(circleCentreX + radius / 2,circleCentreY,radius,0,2 * Math.PI,false);
			break;
		case 3:
			this.cxt.arc(circleCentreX - radius / 2,circleCentreY,radius,0,2 * Math.PI,false);
			break;
		default:
		}
		this.cxt.lineWidth = this.lineWidth;
		this.cxt.fillStyle = this.fillColor;
		this.cxt.strokeStyle = this.strokeColor;
		this.cxt.fill();
		this.cxt.stroke();
	}
	,drawXorShape: function(x,y,width,height,orientation) {
		var r = new com_mun_view_drawingImpl_Box(x,y,width,height,orientation,this.trans);
		var vCenterCoordinate = this.trans.pointConvert(new com_mun_type_Coordinate(x,y));
		this.cxt.beginPath();
		this.cxt.moveTo(r.get_xa(),r.get_ya());
		this.cxt.quadraticCurveTo((r.get_xa() + r.get_xb()) / 2,(r.get_ya() + r.get_yb()) / 2,(r.get_xb() + r.get_xc()) / 2,(r.get_yb() + r.get_yc()) / 2);
		this.cxt.quadraticCurveTo((r.get_xc() + r.get_xd()) / 2,(r.get_yc() + r.get_yd()) / 2,r.get_xd(),r.get_yd());
		this.cxt.quadraticCurveTo(0.25 * (r.get_xa() + r.get_xb() + r.get_xc() + r.get_xd()),0.25 * (r.get_ya() + r.get_yb() + r.get_yc() + r.get_yd()),r.get_xa(),r.get_ya());
		this.cxt.closePath();
		this.cxt.lineWidth = this.lineWidth;
		this.cxt.fillStyle = this.fillColor;
		this.cxt.strokeStyle = this.strokeColor;
		this.cxt.fill();
		switch(orientation[1]) {
		case 0:
			this.cxt.moveTo(r.get_xa() + (r.get_xb() - r.get_xa()) / 8,r.get_ya());
			this.cxt.quadraticCurveTo(vCenterCoordinate.get_xPosition(),vCenterCoordinate.get_yPosition() + (r.get_yc() - r.get_yb()) / 7,r.get_xa() + (r.get_xb() - r.get_xa()) / 8 * 7,r.get_ya());
			break;
		case 1:
			this.cxt.moveTo(r.get_xa() - (r.get_xb() - r.get_xa()) / 8,r.get_ya());
			this.cxt.quadraticCurveTo(vCenterCoordinate.get_xPosition(),vCenterCoordinate.get_yPosition() - (r.get_yc() - r.get_yb()) / 7,r.get_xa() - (r.get_xb() - r.get_xa()) / 8 * 7,r.get_ya());
			break;
		case 2:
			this.cxt.moveTo(r.get_xa(),r.get_ya() - (r.get_xb() - r.get_xa()) / 8);
			this.cxt.quadraticCurveTo(vCenterCoordinate.get_xPosition() + (r.get_xb() - r.get_xa()) / 7,vCenterCoordinate.get_yPosition(),r.get_xa(),r.get_ya() - (r.get_xb() - r.get_xa()) / 8 * 7);
			break;
		case 3:
			this.cxt.moveTo(r.get_xa(),r.get_ya() + (r.get_xb() - r.get_xa()) / 8);
			this.cxt.quadraticCurveTo(vCenterCoordinate.get_xPosition() - (r.get_xb() - r.get_xa()) / 7,vCenterCoordinate.get_yPosition(),r.get_xa(),r.get_ya() + (r.get_xb() - r.get_xa()) / 8 * 7);
			break;
		default:
		}
		this.cxt.stroke();
	}
	,drawRect: function(x,y,width,height) {
		var wnw = new com_mun_type_Coordinate(x - width / 2,y - height / 2);
		var wse = new com_mun_type_Coordinate(x + width / 2,y + height / 2);
		var vnw = this.trans.pointConvert(wnw);
		var vse = this.trans.pointConvert(wse);
		var x0 = vnw.get_xPosition();
		var y0 = vnw.get_yPosition();
		var x1 = vse.get_xPosition();
		var y1 = vse.get_yPosition();
		this.cxt.beginPath();
		this.cxt.rect(Math.min(x0,x1),Math.min(y0,y1),Math.abs(x1 - x0),Math.abs(y1 - y0));
		this.cxt.closePath();
		this.cxt.lineWidth = this.lineWidth;
		this.cxt.fillStyle = this.fillColor;
		this.cxt.strokeStyle = this.strokeColor;
		this.cxt.fillRect(Math.min(x0,x1),Math.min(y0,y1),Math.abs(x1 - x0),Math.abs(y1 - y0));
		this.cxt.stroke();
	}
	,drawText: function(str,x,y,width) {
		var wCoordinate = new com_mun_type_Coordinate(x - width / 2,y);
		var eCoordinate = new com_mun_type_Coordinate(x + width / 2,y);
		var vwCoordinate = this.trans.pointConvert(wCoordinate);
		var veCoordinate = this.trans.pointConvert(eCoordinate);
		var x0 = vwCoordinate.get_xPosition();
		var y0 = vwCoordinate.get_yPosition();
		this.cxt.lineWidth = this.lineWidth;
		this.cxt.font = this.font;
		this.cxt.fillStyle = this.textColor;
		this.cxt.strokeStyle = this.strokeColor;
		this.cxt.beginPath();
		this.cxt.fillText(str,x0,y0,veCoordinate.get_xPosition() - vwCoordinate.get_xPosition());
		this.cxt.closePath();
	}
	,drawCricle: function(x,y,radius) {
		var wnw = new com_mun_type_Coordinate(x - radius,y);
		var wse = new com_mun_type_Coordinate(x + radius,y);
		var vnw = this.trans.pointConvert(wnw);
		var vse = this.trans.pointConvert(wse);
		radius = (vse.get_xPosition() - vnw.get_xPosition()) / 2;
		var x0 = vnw.get_xPosition() + radius;
		var y0 = vse.get_yPosition();
		this.cxt.beginPath();
		this.cxt.arc(x0,y0,radius,0,2 * Math.PI,false);
		this.cxt.closePath();
		this.cxt.lineWidth = this.lineWidth;
		this.cxt.fillStyle = this.fillColor;
		this.cxt.strokeStyle = this.strokeColor;
		this.cxt.fill();
		this.cxt.stroke();
	}
	,drawLine: function(x0,y0,x1,y1) {
		var coordinate0 = this.trans.pointConvert(new com_mun_type_Coordinate(x0,y0));
		var coordinate1 = this.trans.pointConvert(new com_mun_type_Coordinate(x1,y1));
		var x01 = coordinate0.get_xPosition();
		var y01 = coordinate0.get_yPosition();
		var x11 = coordinate1.get_xPosition();
		var y11 = coordinate1.get_yPosition();
		this.cxt.beginPath();
		this.cxt.moveTo(x01,y01);
		this.cxt.lineTo(x11,y11);
		this.cxt.closePath();
		this.cxt.lineWidth = this.lineWidth;
		this.cxt.fillStyle = this.fillColor;
		this.cxt.strokeStyle = this.strokeColor;
		this.cxt.fill();
		this.cxt.stroke();
	}
	,__class__: com_mun_view_drawingImpl_DrawingAdapter
};
var com_mun_view_drawingImpl_RectangleI = function() { };
$hxClasses["com.mun.view.drawingImpl.RectangleI"] = com_mun_view_drawingImpl_RectangleI;
com_mun_view_drawingImpl_RectangleI.__name__ = ["com","mun","view","drawingImpl","RectangleI"];
com_mun_view_drawingImpl_RectangleI.prototype = {
	min: null
	,max: null
	,width: null
	,height: null
	,set_minCoordinate: null
	,set_maxCoordinate: null
	,__class__: com_mun_view_drawingImpl_RectangleI
};
var com_mun_view_drawingImpl_Rectangle = function(corner0,corner1) {
	this.minCoordinate = new com_mun_type_Coordinate(Math.min(corner0.get_xPosition(),corner1.get_xPosition()),Math.min(corner0.get_yPosition(),corner1.get_yPosition()));
	this.maxCoordinate = new com_mun_type_Coordinate(Math.max(corner0.get_xPosition(),corner1.get_xPosition()),Math.max(corner0.get_yPosition(),corner1.get_yPosition()));
	this.updateWidthAndHeight();
};
$hxClasses["com.mun.view.drawingImpl.Rectangle"] = com_mun_view_drawingImpl_Rectangle;
com_mun_view_drawingImpl_Rectangle.__name__ = ["com","mun","view","drawingImpl","Rectangle"];
com_mun_view_drawingImpl_Rectangle.__interfaces__ = [com_mun_view_drawingImpl_RectangleI];
com_mun_view_drawingImpl_Rectangle.prototype = {
	minCoordinate: null
	,maxCoordinate: null
	,width_: null
	,height_: null
	,min: function() {
		return this.minCoordinate;
	}
	,max: function() {
		return this.maxCoordinate;
	}
	,width: function() {
		return this.width_;
	}
	,height: function() {
		return this.height_;
	}
	,set_minCoordinate: function(value) {
		this.minCoordinate = value;
		this.updateWidthAndHeight();
	}
	,set_maxCoordinate: function(value) {
		this.maxCoordinate = value;
		this.updateWidthAndHeight();
	}
	,updateWidthAndHeight: function() {
		this.width_ = this.maxCoordinate.get_xPosition() - this.minCoordinate.get_xPosition();
		this.height_ = this.maxCoordinate.get_yPosition() - this.minCoordinate.get_yPosition();
	}
	,__class__: com_mun_view_drawingImpl_Rectangle
};
var com_mun_view_drawingImpl_Transform = function(m,im) {
	this.convertMatrix = m;
	this.invertMatrix = im;
};
$hxClasses["com.mun.view.drawingImpl.Transform"] = com_mun_view_drawingImpl_Transform;
com_mun_view_drawingImpl_Transform.__name__ = ["com","mun","view","drawingImpl","Transform"];
com_mun_view_drawingImpl_Transform.identity = function() {
	return new com_mun_view_drawingImpl_Transform([1,0,0,0,1,0,0,0,1],[1,0,0,0,1,0,0,0,1]);
};
com_mun_view_drawingImpl_Transform.prototype = {
	convertMatrix: null
	,invertMatrix: null
	,pointConvert: function(c) {
		return new com_mun_type_Coordinate(this.convertMatrix[0] * c.get_xPosition() + this.convertMatrix[1] * c.get_yPosition() + this.convertMatrix[2],this.convertMatrix[3] * c.get_xPosition() + this.convertMatrix[4] * c.get_yPosition() + this.convertMatrix[5]);
	}
	,pointInvert: function(c) {
		return new com_mun_type_Coordinate(this.invertMatrix[0] * c.get_xPosition() + this.invertMatrix[1] * c.get_yPosition() + this.invertMatrix[2],this.invertMatrix[3] * c.get_xPosition() + this.invertMatrix[4] * c.get_yPosition() + this.invertMatrix[5]);
	}
	,rectConvert: function(c) {
		var maxCoordinate = this.pointConvert(c.max());
		var minCoordinate = this.pointConvert(c.min());
		return new com_mun_view_drawingImpl_Rectangle(maxCoordinate,minCoordinate);
	}
	,rectInvert: function(c) {
		var maxCoordinate = this.pointInvert(c.max());
		var minCoordinate = this.pointInvert(c.min());
		return new com_mun_view_drawingImpl_Rectangle(maxCoordinate,minCoordinate);
	}
	,scale: function(xRatio,yRatio) {
		var scaleArray = [xRatio,0,0,0,yRatio,0,0,0,1];
		var invScaleArray = [1 / xRatio,0,0,0,1 / yRatio,0,0,0,1];
		return new com_mun_view_drawingImpl_Transform(this.multiply(scaleArray,this.convertMatrix),this.multiply(this.invertMatrix,invScaleArray));
	}
	,translate: function(xDelta,yDelta) {
		var translateArray = [1,0,xDelta,0,1,yDelta,0,0,1];
		var invTranslateArray = [1,0,-xDelta,0,1,-yDelta,0,0,1];
		return new com_mun_view_drawingImpl_Transform(this.multiply(translateArray,this.convertMatrix),this.multiply(this.invertMatrix,invTranslateArray));
	}
	,quadrantRotate: function(n) {
		return null;
	}
	,compose: function(other) {
		return new com_mun_view_drawingImpl_Transform(this.multiply(other.convertMatrix,this.convertMatrix),this.multiply(this.invertMatrix,other.invertMatrix));
	}
	,multiply: function(matrix1,matrix2) {
		var n = Math.sqrt(matrix1.length);
		var tempArray = [];
		var _g1 = 0;
		var _g = n;
		while(_g1 < _g) {
			var i = _g1++;
			var _g3 = 0;
			var _g2 = n;
			while(_g3 < _g2) {
				var j = _g3++;
				tempArray[n * i + j] = 0;
			}
		}
		var _g11 = 0;
		var _g4 = n;
		while(_g11 < _g4) {
			var i1 = _g11++;
			var _g31 = 0;
			var _g21 = n;
			while(_g31 < _g21) {
				var j1 = _g31++;
				var _g5 = 0;
				var _g41 = n;
				while(_g5 < _g41) {
					var k = _g5++;
					tempArray[n * i1 + j1] += matrix1[n * i1 + k] * matrix2[n * k + j1];
				}
			}
		}
		return tempArray;
	}
	,__class__: com_mun_view_drawingImpl_Transform
};
var haxe_IMap = function() { };
$hxClasses["haxe.IMap"] = haxe_IMap;
haxe_IMap.__name__ = ["haxe","IMap"];
haxe_IMap.prototype = {
	get: null
	,set: null
	,exists: null
	,remove: null
	,keys: null
	,iterator: null
	,toString: null
	,__class__: haxe_IMap
};
var haxe__$Int32_Int32_$Impl_$ = {};
$hxClasses["haxe._Int32.Int32_Impl_"] = haxe__$Int32_Int32_$Impl_$;
haxe__$Int32_Int32_$Impl_$.__name__ = ["haxe","_Int32","Int32_Impl_"];
haxe__$Int32_Int32_$Impl_$.preIncrement = function(this1) {
	this1 = ++this1 | 0;
	return this1;
};
haxe__$Int32_Int32_$Impl_$.postIncrement = function(this1) {
	var ret = this1++;
	this1 |= 0;
	return ret;
};
haxe__$Int32_Int32_$Impl_$.preDecrement = function(this1) {
	this1 = --this1 | 0;
	return this1;
};
haxe__$Int32_Int32_$Impl_$.postDecrement = function(this1) {
	var ret = this1--;
	this1 |= 0;
	return ret;
};
haxe__$Int32_Int32_$Impl_$.add = function(a,b) {
	return a + b | 0;
};
haxe__$Int32_Int32_$Impl_$.addInt = function(a,b) {
	return a + b | 0;
};
haxe__$Int32_Int32_$Impl_$.sub = function(a,b) {
	return a - b | 0;
};
haxe__$Int32_Int32_$Impl_$.subInt = function(a,b) {
	return a - b | 0;
};
haxe__$Int32_Int32_$Impl_$.intSub = function(a,b) {
	return a - b | 0;
};
haxe__$Int32_Int32_$Impl_$.mul = function(a,b) {
	return haxe__$Int32_Int32_$Impl_$._mul(a,b);
};
haxe__$Int32_Int32_$Impl_$.mulInt = function(a,b) {
	return haxe__$Int32_Int32_$Impl_$._mul(a,b);
};
haxe__$Int32_Int32_$Impl_$.toFloat = function(this1) {
	return this1;
};
haxe__$Int32_Int32_$Impl_$.ucompare = function(a,b) {
	if(a < 0) {
		if(b < 0) {
			return ~b - ~a | 0;
		} else {
			return 1;
		}
	}
	if(b < 0) {
		return -1;
	} else {
		return a - b | 0;
	}
};
haxe__$Int32_Int32_$Impl_$.clamp = function(x) {
	return x | 0;
};
var haxe__$Int64_Int64_$Impl_$ = {};
$hxClasses["haxe._Int64.Int64_Impl_"] = haxe__$Int64_Int64_$Impl_$;
haxe__$Int64_Int64_$Impl_$.__name__ = ["haxe","_Int64","Int64_Impl_"];
haxe__$Int64_Int64_$Impl_$.__properties__ = {get_low:"get_low",get_high:"get_high"};
haxe__$Int64_Int64_$Impl_$._new = function(x) {
	var this1 = x;
	return this1;
};
haxe__$Int64_Int64_$Impl_$.copy = function(this1) {
	var this2 = new haxe__$Int64__$_$_$Int64(this1.high,this1.low);
	return this2;
};
haxe__$Int64_Int64_$Impl_$.make = function(high,low) {
	var this1 = new haxe__$Int64__$_$_$Int64(high,low);
	return this1;
};
haxe__$Int64_Int64_$Impl_$.ofInt = function(x) {
	var this1 = new haxe__$Int64__$_$_$Int64(x >> 31,x);
	return this1;
};
haxe__$Int64_Int64_$Impl_$.toInt = function(x) {
	if(x.high != x.low >> 31) {
		throw new js__$Boot_HaxeError("Overflow");
	}
	return x.low;
};
haxe__$Int64_Int64_$Impl_$["is"] = function(val) {
	return js_Boot.__instanceof(val,haxe__$Int64__$_$_$Int64);
};
haxe__$Int64_Int64_$Impl_$.getHigh = function(x) {
	return x.high;
};
haxe__$Int64_Int64_$Impl_$.getLow = function(x) {
	return x.low;
};
haxe__$Int64_Int64_$Impl_$.isNeg = function(x) {
	return x.high < 0;
};
haxe__$Int64_Int64_$Impl_$.isZero = function(x) {
	var this1 = new haxe__$Int64__$_$_$Int64(0,0);
	var b = this1;
	if(x.high == b.high) {
		return x.low == b.low;
	} else {
		return false;
	}
};
haxe__$Int64_Int64_$Impl_$.compare = function(a,b) {
	var v = a.high - b.high | 0;
	if(v != 0) {
		v = v;
	} else {
		v = haxe__$Int32_Int32_$Impl_$.ucompare(a.low,b.low);
	}
	if(a.high < 0) {
		if(b.high < 0) {
			return v;
		} else {
			return -1;
		}
	} else if(b.high >= 0) {
		return v;
	} else {
		return 1;
	}
};
haxe__$Int64_Int64_$Impl_$.ucompare = function(a,b) {
	var v = haxe__$Int32_Int32_$Impl_$.ucompare(a.high,b.high);
	if(v != 0) {
		return v;
	} else {
		return haxe__$Int32_Int32_$Impl_$.ucompare(a.low,b.low);
	}
};
haxe__$Int64_Int64_$Impl_$.toStr = function(x) {
	return haxe__$Int64_Int64_$Impl_$.toString(x);
};
haxe__$Int64_Int64_$Impl_$.toString = function(this1) {
	var i = this1;
	var this2 = new haxe__$Int64__$_$_$Int64(0,0);
	var b = this2;
	if(i.high == b.high && i.low == b.low) {
		return "0";
	}
	var str = "";
	var neg = false;
	if(i.high < 0) {
		neg = true;
	}
	var this3 = new haxe__$Int64__$_$_$Int64(0,10);
	var ten = this3;
	while(true) {
		var this4 = new haxe__$Int64__$_$_$Int64(0,0);
		var b1 = this4;
		if(!(i.high != b1.high || i.low != b1.low)) {
			break;
		}
		var r = haxe__$Int64_Int64_$Impl_$.divMod(i,ten);
		if(r.modulus.high < 0) {
			var x = r.modulus;
			var high = ~x.high;
			var low = -x.low;
			if(low == 0) {
				var ret = high++;
				high = high | 0;
			}
			var this5 = new haxe__$Int64__$_$_$Int64(high,low);
			str = this5.low + str;
			var x1 = r.quotient;
			var high1 = ~x1.high;
			var low1 = -x1.low;
			if(low1 == 0) {
				var ret1 = high1++;
				high1 = high1 | 0;
			}
			var this6 = new haxe__$Int64__$_$_$Int64(high1,low1);
			i = this6;
		} else {
			str = r.modulus.low + str;
			i = r.quotient;
		}
	}
	if(neg) {
		str = "-" + str;
	}
	return str;
};
haxe__$Int64_Int64_$Impl_$.parseString = function(sParam) {
	return haxe_Int64Helper.parseString(sParam);
};
haxe__$Int64_Int64_$Impl_$.fromFloat = function(f) {
	return haxe_Int64Helper.fromFloat(f);
};
haxe__$Int64_Int64_$Impl_$.divMod = function(dividend,divisor) {
	if(divisor.high == 0) {
		var _g = divisor.low;
		switch(_g) {
		case 0:
			throw new js__$Boot_HaxeError("divide by zero");
			break;
		case 1:
			var this1 = new haxe__$Int64__$_$_$Int64(dividend.high,dividend.low);
			var this2 = new haxe__$Int64__$_$_$Int64(0,0);
			return { quotient : this1, modulus : this2};
		}
	}
	var divSign = dividend.high < 0 != divisor.high < 0;
	var modulus;
	if(dividend.high < 0) {
		var high = ~dividend.high;
		var low = -dividend.low;
		if(low == 0) {
			var ret = high++;
			high = high | 0;
		}
		var this3 = new haxe__$Int64__$_$_$Int64(high,low);
		modulus = this3;
	} else {
		var this4 = new haxe__$Int64__$_$_$Int64(dividend.high,dividend.low);
		modulus = this4;
	}
	if(divisor.high < 0) {
		var high1 = ~divisor.high;
		var low1 = -divisor.low;
		if(low1 == 0) {
			var ret1 = high1++;
			high1 = high1 | 0;
		}
		var this5 = new haxe__$Int64__$_$_$Int64(high1,low1);
		divisor = this5;
	} else {
		divisor = divisor;
	}
	var this6 = new haxe__$Int64__$_$_$Int64(0,0);
	var quotient = this6;
	var this7 = new haxe__$Int64__$_$_$Int64(0,1);
	var mask = this7;
	while(!(divisor.high < 0)) {
		var v = haxe__$Int32_Int32_$Impl_$.ucompare(divisor.high,modulus.high);
		var cmp = v != 0 ? v : haxe__$Int32_Int32_$Impl_$.ucompare(divisor.low,modulus.low);
		var b = 1;
		b &= 63;
		if(b == 0) {
			var this8 = new haxe__$Int64__$_$_$Int64(divisor.high,divisor.low);
			divisor = this8;
		} else if(b < 32) {
			var this9 = new haxe__$Int64__$_$_$Int64(divisor.high << b | divisor.low >>> 32 - b,divisor.low << b);
			divisor = this9;
		} else {
			var this10 = new haxe__$Int64__$_$_$Int64(divisor.low << b - 32,0);
			divisor = this10;
		}
		var b1 = 1;
		b1 &= 63;
		if(b1 == 0) {
			var this11 = new haxe__$Int64__$_$_$Int64(mask.high,mask.low);
			mask = this11;
		} else if(b1 < 32) {
			var this12 = new haxe__$Int64__$_$_$Int64(mask.high << b1 | mask.low >>> 32 - b1,mask.low << b1);
			mask = this12;
		} else {
			var this13 = new haxe__$Int64__$_$_$Int64(mask.low << b1 - 32,0);
			mask = this13;
		}
		if(cmp >= 0) {
			break;
		}
	}
	while(true) {
		var this14 = new haxe__$Int64__$_$_$Int64(0,0);
		var b2 = this14;
		if(!(mask.high != b2.high || mask.low != b2.low)) {
			break;
		}
		var v1 = haxe__$Int32_Int32_$Impl_$.ucompare(modulus.high,divisor.high);
		if((v1 != 0 ? v1 : haxe__$Int32_Int32_$Impl_$.ucompare(modulus.low,divisor.low)) >= 0) {
			var this15 = new haxe__$Int64__$_$_$Int64(quotient.high | mask.high,quotient.low | mask.low);
			quotient = this15;
			var high2 = modulus.high - divisor.high | 0;
			var low2 = modulus.low - divisor.low | 0;
			if(haxe__$Int32_Int32_$Impl_$.ucompare(modulus.low,divisor.low) < 0) {
				var ret2 = high2--;
				high2 = high2 | 0;
			}
			var this16 = new haxe__$Int64__$_$_$Int64(high2,low2);
			modulus = this16;
		}
		var b3 = 1;
		b3 &= 63;
		if(b3 == 0) {
			var this17 = new haxe__$Int64__$_$_$Int64(mask.high,mask.low);
			mask = this17;
		} else if(b3 < 32) {
			var this18 = new haxe__$Int64__$_$_$Int64(mask.high >>> b3,mask.high << 32 - b3 | mask.low >>> b3);
			mask = this18;
		} else {
			var this19 = new haxe__$Int64__$_$_$Int64(0,mask.high >>> b3 - 32);
			mask = this19;
		}
		var b4 = 1;
		b4 &= 63;
		if(b4 == 0) {
			var this20 = new haxe__$Int64__$_$_$Int64(divisor.high,divisor.low);
			divisor = this20;
		} else if(b4 < 32) {
			var this21 = new haxe__$Int64__$_$_$Int64(divisor.high >>> b4,divisor.high << 32 - b4 | divisor.low >>> b4);
			divisor = this21;
		} else {
			var this22 = new haxe__$Int64__$_$_$Int64(0,divisor.high >>> b4 - 32);
			divisor = this22;
		}
	}
	if(divSign) {
		var high3 = ~quotient.high;
		var low3 = -quotient.low;
		if(low3 == 0) {
			var ret3 = high3++;
			high3 = high3 | 0;
		}
		var this23 = new haxe__$Int64__$_$_$Int64(high3,low3);
		quotient = this23;
	}
	if(dividend.high < 0) {
		var high4 = ~modulus.high;
		var low4 = -modulus.low;
		if(low4 == 0) {
			var ret4 = high4++;
			high4 = high4 | 0;
		}
		var this24 = new haxe__$Int64__$_$_$Int64(high4,low4);
		modulus = this24;
	}
	return { quotient : quotient, modulus : modulus};
};
haxe__$Int64_Int64_$Impl_$.neg = function(x) {
	var high = ~x.high;
	var low = -x.low;
	if(low == 0) {
		var ret = high++;
		high = high | 0;
	}
	var this1 = new haxe__$Int64__$_$_$Int64(high,low);
	return this1;
};
haxe__$Int64_Int64_$Impl_$.preIncrement = function(this1) {
	var this2 = new haxe__$Int64__$_$_$Int64(this1.high,this1.low);
	this1 = this2;
	var ret = this1.low++;
	this1.low = this1.low | 0;
	if(this1.low == 0) {
		var ret1 = this1.high++;
		this1.high = this1.high | 0;
	}
	return this1;
};
haxe__$Int64_Int64_$Impl_$.postIncrement = function(this1) {
	var ret = this1;
	var this2 = new haxe__$Int64__$_$_$Int64(this1.high,this1.low);
	this1 = this2;
	var ret1 = this1.low++;
	this1.low = this1.low | 0;
	if(this1.low == 0) {
		var ret2 = this1.high++;
		this1.high = this1.high | 0;
	}
	return ret;
};
haxe__$Int64_Int64_$Impl_$.preDecrement = function(this1) {
	var this2 = new haxe__$Int64__$_$_$Int64(this1.high,this1.low);
	this1 = this2;
	if(this1.low == 0) {
		var ret = this1.high--;
		this1.high = this1.high | 0;
	}
	var ret1 = this1.low--;
	this1.low = this1.low | 0;
	return this1;
};
haxe__$Int64_Int64_$Impl_$.postDecrement = function(this1) {
	var ret = this1;
	var this2 = new haxe__$Int64__$_$_$Int64(this1.high,this1.low);
	this1 = this2;
	if(this1.low == 0) {
		var ret1 = this1.high--;
		this1.high = this1.high | 0;
	}
	var ret2 = this1.low--;
	this1.low = this1.low | 0;
	return ret;
};
haxe__$Int64_Int64_$Impl_$.add = function(a,b) {
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this1 = new haxe__$Int64__$_$_$Int64(high,low);
	return this1;
};
haxe__$Int64_Int64_$Impl_$.addInt = function(a,b) {
	var this1 = new haxe__$Int64__$_$_$Int64(b >> 31,b);
	var b1 = this1;
	var high = a.high + b1.high | 0;
	var low = a.low + b1.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this2 = new haxe__$Int64__$_$_$Int64(high,low);
	return this2;
};
haxe__$Int64_Int64_$Impl_$.sub = function(a,b) {
	var high = a.high - b.high | 0;
	var low = a.low - b.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(a.low,b.low) < 0) {
		var ret = high--;
		high = high | 0;
	}
	var this1 = new haxe__$Int64__$_$_$Int64(high,low);
	return this1;
};
haxe__$Int64_Int64_$Impl_$.subInt = function(a,b) {
	var this1 = new haxe__$Int64__$_$_$Int64(b >> 31,b);
	var b1 = this1;
	var high = a.high - b1.high | 0;
	var low = a.low - b1.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(a.low,b1.low) < 0) {
		var ret = high--;
		high = high | 0;
	}
	var this2 = new haxe__$Int64__$_$_$Int64(high,low);
	return this2;
};
haxe__$Int64_Int64_$Impl_$.intSub = function(a,b) {
	var this1 = new haxe__$Int64__$_$_$Int64(a >> 31,a);
	var a1 = this1;
	var high = a1.high - b.high | 0;
	var low = a1.low - b.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(a1.low,b.low) < 0) {
		var ret = high--;
		high = high | 0;
	}
	var this2 = new haxe__$Int64__$_$_$Int64(high,low);
	return this2;
};
haxe__$Int64_Int64_$Impl_$.mul = function(a,b) {
	var mask = 65535;
	var al = a.low & mask;
	var ah = a.low >>> 16;
	var bl = b.low & mask;
	var bh = b.low >>> 16;
	var p00 = haxe__$Int32_Int32_$Impl_$._mul(al,bl);
	var p10 = haxe__$Int32_Int32_$Impl_$._mul(ah,bl);
	var p01 = haxe__$Int32_Int32_$Impl_$._mul(al,bh);
	var p11 = haxe__$Int32_Int32_$Impl_$._mul(ah,bh);
	var low = p00;
	var high = (p11 + (p01 >>> 16) | 0) + (p10 >>> 16) | 0;
	p01 = p01 << 16;
	low = low + p01 | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,p01) < 0) {
		var ret = high++;
		high = high | 0;
	}
	p10 = p10 << 16;
	low = low + p10 | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,p10) < 0) {
		var ret1 = high++;
		high = high | 0;
	}
	high = high + (haxe__$Int32_Int32_$Impl_$._mul(a.low,b.high) + haxe__$Int32_Int32_$Impl_$._mul(a.high,b.low) | 0) | 0;
	var this1 = new haxe__$Int64__$_$_$Int64(high,low);
	return this1;
};
haxe__$Int64_Int64_$Impl_$.mulInt = function(a,b) {
	var this1 = new haxe__$Int64__$_$_$Int64(b >> 31,b);
	var b1 = this1;
	var mask = 65535;
	var al = a.low & mask;
	var ah = a.low >>> 16;
	var bl = b1.low & mask;
	var bh = b1.low >>> 16;
	var p00 = haxe__$Int32_Int32_$Impl_$._mul(al,bl);
	var p10 = haxe__$Int32_Int32_$Impl_$._mul(ah,bl);
	var p01 = haxe__$Int32_Int32_$Impl_$._mul(al,bh);
	var p11 = haxe__$Int32_Int32_$Impl_$._mul(ah,bh);
	var low = p00;
	var high = (p11 + (p01 >>> 16) | 0) + (p10 >>> 16) | 0;
	p01 = p01 << 16;
	low = low + p01 | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,p01) < 0) {
		var ret = high++;
		high = high | 0;
	}
	p10 = p10 << 16;
	low = low + p10 | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,p10) < 0) {
		var ret1 = high++;
		high = high | 0;
	}
	high = high + (haxe__$Int32_Int32_$Impl_$._mul(a.low,b1.high) + haxe__$Int32_Int32_$Impl_$._mul(a.high,b1.low) | 0) | 0;
	var this2 = new haxe__$Int64__$_$_$Int64(high,low);
	return this2;
};
haxe__$Int64_Int64_$Impl_$.div = function(a,b) {
	return haxe__$Int64_Int64_$Impl_$.divMod(a,b).quotient;
};
haxe__$Int64_Int64_$Impl_$.divInt = function(a,b) {
	var this1 = new haxe__$Int64__$_$_$Int64(b >> 31,b);
	return haxe__$Int64_Int64_$Impl_$.divMod(a,this1).quotient;
};
haxe__$Int64_Int64_$Impl_$.intDiv = function(a,b) {
	var this1 = new haxe__$Int64__$_$_$Int64(a >> 31,a);
	var x = haxe__$Int64_Int64_$Impl_$.divMod(this1,b).quotient;
	if(x.high != x.low >> 31) {
		throw new js__$Boot_HaxeError("Overflow");
	}
	var x1 = x.low;
	var this2 = new haxe__$Int64__$_$_$Int64(x1 >> 31,x1);
	return this2;
};
haxe__$Int64_Int64_$Impl_$.mod = function(a,b) {
	return haxe__$Int64_Int64_$Impl_$.divMod(a,b).modulus;
};
haxe__$Int64_Int64_$Impl_$.modInt = function(a,b) {
	var this1 = new haxe__$Int64__$_$_$Int64(b >> 31,b);
	var x = haxe__$Int64_Int64_$Impl_$.divMod(a,this1).modulus;
	if(x.high != x.low >> 31) {
		throw new js__$Boot_HaxeError("Overflow");
	}
	var x1 = x.low;
	var this2 = new haxe__$Int64__$_$_$Int64(x1 >> 31,x1);
	return this2;
};
haxe__$Int64_Int64_$Impl_$.intMod = function(a,b) {
	var this1 = new haxe__$Int64__$_$_$Int64(a >> 31,a);
	var x = haxe__$Int64_Int64_$Impl_$.divMod(this1,b).modulus;
	if(x.high != x.low >> 31) {
		throw new js__$Boot_HaxeError("Overflow");
	}
	var x1 = x.low;
	var this2 = new haxe__$Int64__$_$_$Int64(x1 >> 31,x1);
	return this2;
};
haxe__$Int64_Int64_$Impl_$.eq = function(a,b) {
	if(a.high == b.high) {
		return a.low == b.low;
	} else {
		return false;
	}
};
haxe__$Int64_Int64_$Impl_$.eqInt = function(a,b) {
	var this1 = new haxe__$Int64__$_$_$Int64(b >> 31,b);
	var b1 = this1;
	if(a.high == b1.high) {
		return a.low == b1.low;
	} else {
		return false;
	}
};
haxe__$Int64_Int64_$Impl_$.neq = function(a,b) {
	if(!(a.high != b.high)) {
		return a.low != b.low;
	} else {
		return true;
	}
};
haxe__$Int64_Int64_$Impl_$.neqInt = function(a,b) {
	var this1 = new haxe__$Int64__$_$_$Int64(b >> 31,b);
	var b1 = this1;
	if(!(a.high != b1.high)) {
		return a.low != b1.low;
	} else {
		return true;
	}
};
haxe__$Int64_Int64_$Impl_$.lt = function(a,b) {
	var v = a.high - b.high | 0;
	if(v != 0) {
		v = v;
	} else {
		v = haxe__$Int32_Int32_$Impl_$.ucompare(a.low,b.low);
	}
	return (a.high < 0 ? b.high < 0 ? v : -1 : b.high >= 0 ? v : 1) < 0;
};
haxe__$Int64_Int64_$Impl_$.ltInt = function(a,b) {
	var this1 = new haxe__$Int64__$_$_$Int64(b >> 31,b);
	var b1 = this1;
	var v = a.high - b1.high | 0;
	if(v != 0) {
		v = v;
	} else {
		v = haxe__$Int32_Int32_$Impl_$.ucompare(a.low,b1.low);
	}
	return (a.high < 0 ? b1.high < 0 ? v : -1 : b1.high >= 0 ? v : 1) < 0;
};
haxe__$Int64_Int64_$Impl_$.intLt = function(a,b) {
	var this1 = new haxe__$Int64__$_$_$Int64(a >> 31,a);
	var a1 = this1;
	var v = a1.high - b.high | 0;
	if(v != 0) {
		v = v;
	} else {
		v = haxe__$Int32_Int32_$Impl_$.ucompare(a1.low,b.low);
	}
	return (a1.high < 0 ? b.high < 0 ? v : -1 : b.high >= 0 ? v : 1) < 0;
};
haxe__$Int64_Int64_$Impl_$.lte = function(a,b) {
	var v = a.high - b.high | 0;
	if(v != 0) {
		v = v;
	} else {
		v = haxe__$Int32_Int32_$Impl_$.ucompare(a.low,b.low);
	}
	return (a.high < 0 ? b.high < 0 ? v : -1 : b.high >= 0 ? v : 1) <= 0;
};
haxe__$Int64_Int64_$Impl_$.lteInt = function(a,b) {
	var this1 = new haxe__$Int64__$_$_$Int64(b >> 31,b);
	var b1 = this1;
	var v = a.high - b1.high | 0;
	if(v != 0) {
		v = v;
	} else {
		v = haxe__$Int32_Int32_$Impl_$.ucompare(a.low,b1.low);
	}
	return (a.high < 0 ? b1.high < 0 ? v : -1 : b1.high >= 0 ? v : 1) <= 0;
};
haxe__$Int64_Int64_$Impl_$.intLte = function(a,b) {
	var this1 = new haxe__$Int64__$_$_$Int64(a >> 31,a);
	var a1 = this1;
	var v = a1.high - b.high | 0;
	if(v != 0) {
		v = v;
	} else {
		v = haxe__$Int32_Int32_$Impl_$.ucompare(a1.low,b.low);
	}
	return (a1.high < 0 ? b.high < 0 ? v : -1 : b.high >= 0 ? v : 1) <= 0;
};
haxe__$Int64_Int64_$Impl_$.gt = function(a,b) {
	var v = a.high - b.high | 0;
	if(v != 0) {
		v = v;
	} else {
		v = haxe__$Int32_Int32_$Impl_$.ucompare(a.low,b.low);
	}
	return (a.high < 0 ? b.high < 0 ? v : -1 : b.high >= 0 ? v : 1) > 0;
};
haxe__$Int64_Int64_$Impl_$.gtInt = function(a,b) {
	var this1 = new haxe__$Int64__$_$_$Int64(b >> 31,b);
	var b1 = this1;
	var v = a.high - b1.high | 0;
	if(v != 0) {
		v = v;
	} else {
		v = haxe__$Int32_Int32_$Impl_$.ucompare(a.low,b1.low);
	}
	return (a.high < 0 ? b1.high < 0 ? v : -1 : b1.high >= 0 ? v : 1) > 0;
};
haxe__$Int64_Int64_$Impl_$.intGt = function(a,b) {
	var this1 = new haxe__$Int64__$_$_$Int64(a >> 31,a);
	var a1 = this1;
	var v = a1.high - b.high | 0;
	if(v != 0) {
		v = v;
	} else {
		v = haxe__$Int32_Int32_$Impl_$.ucompare(a1.low,b.low);
	}
	return (a1.high < 0 ? b.high < 0 ? v : -1 : b.high >= 0 ? v : 1) > 0;
};
haxe__$Int64_Int64_$Impl_$.gte = function(a,b) {
	var v = a.high - b.high | 0;
	if(v != 0) {
		v = v;
	} else {
		v = haxe__$Int32_Int32_$Impl_$.ucompare(a.low,b.low);
	}
	return (a.high < 0 ? b.high < 0 ? v : -1 : b.high >= 0 ? v : 1) >= 0;
};
haxe__$Int64_Int64_$Impl_$.gteInt = function(a,b) {
	var this1 = new haxe__$Int64__$_$_$Int64(b >> 31,b);
	var b1 = this1;
	var v = a.high - b1.high | 0;
	if(v != 0) {
		v = v;
	} else {
		v = haxe__$Int32_Int32_$Impl_$.ucompare(a.low,b1.low);
	}
	return (a.high < 0 ? b1.high < 0 ? v : -1 : b1.high >= 0 ? v : 1) >= 0;
};
haxe__$Int64_Int64_$Impl_$.intGte = function(a,b) {
	var this1 = new haxe__$Int64__$_$_$Int64(a >> 31,a);
	var a1 = this1;
	var v = a1.high - b.high | 0;
	if(v != 0) {
		v = v;
	} else {
		v = haxe__$Int32_Int32_$Impl_$.ucompare(a1.low,b.low);
	}
	return (a1.high < 0 ? b.high < 0 ? v : -1 : b.high >= 0 ? v : 1) >= 0;
};
haxe__$Int64_Int64_$Impl_$.complement = function(a) {
	var this1 = new haxe__$Int64__$_$_$Int64(~a.high,~a.low);
	return this1;
};
haxe__$Int64_Int64_$Impl_$.and = function(a,b) {
	var this1 = new haxe__$Int64__$_$_$Int64(a.high & b.high,a.low & b.low);
	return this1;
};
haxe__$Int64_Int64_$Impl_$.or = function(a,b) {
	var this1 = new haxe__$Int64__$_$_$Int64(a.high | b.high,a.low | b.low);
	return this1;
};
haxe__$Int64_Int64_$Impl_$.xor = function(a,b) {
	var this1 = new haxe__$Int64__$_$_$Int64(a.high ^ b.high,a.low ^ b.low);
	return this1;
};
haxe__$Int64_Int64_$Impl_$.shl = function(a,b) {
	b &= 63;
	if(b == 0) {
		var this1 = new haxe__$Int64__$_$_$Int64(a.high,a.low);
		return this1;
	} else if(b < 32) {
		var this2 = new haxe__$Int64__$_$_$Int64(a.high << b | a.low >>> 32 - b,a.low << b);
		return this2;
	} else {
		var this3 = new haxe__$Int64__$_$_$Int64(a.low << b - 32,0);
		return this3;
	}
};
haxe__$Int64_Int64_$Impl_$.shr = function(a,b) {
	b &= 63;
	if(b == 0) {
		var this1 = new haxe__$Int64__$_$_$Int64(a.high,a.low);
		return this1;
	} else if(b < 32) {
		var this2 = new haxe__$Int64__$_$_$Int64(a.high >> b,a.high << 32 - b | a.low >>> b);
		return this2;
	} else {
		var this3 = new haxe__$Int64__$_$_$Int64(a.high >> 31,a.high >> b - 32);
		return this3;
	}
};
haxe__$Int64_Int64_$Impl_$.ushr = function(a,b) {
	b &= 63;
	if(b == 0) {
		var this1 = new haxe__$Int64__$_$_$Int64(a.high,a.low);
		return this1;
	} else if(b < 32) {
		var this2 = new haxe__$Int64__$_$_$Int64(a.high >>> b,a.high << 32 - b | a.low >>> b);
		return this2;
	} else {
		var this3 = new haxe__$Int64__$_$_$Int64(0,a.high >>> b - 32);
		return this3;
	}
};
haxe__$Int64_Int64_$Impl_$.get_high = function(this1) {
	return this1.high;
};
haxe__$Int64_Int64_$Impl_$.set_high = function(this1,x) {
	return this1.high = x;
};
haxe__$Int64_Int64_$Impl_$.get_low = function(this1) {
	return this1.low;
};
haxe__$Int64_Int64_$Impl_$.set_low = function(this1,x) {
	return this1.low = x;
};
var haxe__$Int64__$_$_$Int64 = function(high,low) {
	this.high = high;
	this.low = low;
};
$hxClasses["haxe._Int64.___Int64"] = haxe__$Int64__$_$_$Int64;
haxe__$Int64__$_$_$Int64.__name__ = ["haxe","_Int64","___Int64"];
haxe__$Int64__$_$_$Int64.prototype = {
	high: null
	,low: null
	,toString: function() {
		return haxe__$Int64_Int64_$Impl_$.toString(this);
	}
	,__class__: haxe__$Int64__$_$_$Int64
};
var haxe_Int64Helper = function() { };
$hxClasses["haxe.Int64Helper"] = haxe_Int64Helper;
haxe_Int64Helper.__name__ = ["haxe","Int64Helper"];
haxe_Int64Helper.parseString = function(sParam) {
	var this1 = new haxe__$Int64__$_$_$Int64(0,10);
	var base = this1;
	var this2 = new haxe__$Int64__$_$_$Int64(0,0);
	var current = this2;
	var this3 = new haxe__$Int64__$_$_$Int64(0,1);
	var multiplier = this3;
	var sIsNegative = false;
	var s = StringTools.trim(sParam);
	if(s.charAt(0) == "-") {
		sIsNegative = true;
		s = s.substring(1,s.length);
	}
	var len = s.length;
	var _g1 = 0;
	var _g = len;
	while(_g1 < _g) {
		var i = _g1++;
		var digitInt = HxOverrides.cca(s,len - 1 - i) - 48;
		if(digitInt < 0 || digitInt > 9) {
			throw new js__$Boot_HaxeError("NumberFormatError");
		}
		var this4 = new haxe__$Int64__$_$_$Int64(digitInt >> 31,digitInt);
		var digit = this4;
		if(sIsNegative) {
			var mask = 65535;
			var al = multiplier.low & mask;
			var ah = multiplier.low >>> 16;
			var bl = digit.low & mask;
			var bh = digit.low >>> 16;
			var p00 = haxe__$Int32_Int32_$Impl_$._mul(al,bl);
			var p10 = haxe__$Int32_Int32_$Impl_$._mul(ah,bl);
			var p01 = haxe__$Int32_Int32_$Impl_$._mul(al,bh);
			var p11 = haxe__$Int32_Int32_$Impl_$._mul(ah,bh);
			var low = p00;
			var high = (p11 + (p01 >>> 16) | 0) + (p10 >>> 16) | 0;
			p01 = p01 << 16;
			low = low + p01 | 0;
			if(haxe__$Int32_Int32_$Impl_$.ucompare(low,p01) < 0) {
				var ret = high++;
				high = high | 0;
			}
			p10 = p10 << 16;
			low = low + p10 | 0;
			if(haxe__$Int32_Int32_$Impl_$.ucompare(low,p10) < 0) {
				var ret1 = high++;
				high = high | 0;
			}
			high = high + (haxe__$Int32_Int32_$Impl_$._mul(multiplier.low,digit.high) + haxe__$Int32_Int32_$Impl_$._mul(multiplier.high,digit.low) | 0) | 0;
			var this5 = new haxe__$Int64__$_$_$Int64(high,low);
			var b = this5;
			var high1 = current.high - b.high | 0;
			var low1 = current.low - b.low | 0;
			if(haxe__$Int32_Int32_$Impl_$.ucompare(current.low,b.low) < 0) {
				var ret2 = high1--;
				high1 = high1 | 0;
			}
			var this6 = new haxe__$Int64__$_$_$Int64(high1,low1);
			current = this6;
			if(!(current.high < 0)) {
				throw new js__$Boot_HaxeError("NumberFormatError: Underflow");
			}
		} else {
			var mask1 = 65535;
			var al1 = multiplier.low & mask1;
			var ah1 = multiplier.low >>> 16;
			var bl1 = digit.low & mask1;
			var bh1 = digit.low >>> 16;
			var p001 = haxe__$Int32_Int32_$Impl_$._mul(al1,bl1);
			var p101 = haxe__$Int32_Int32_$Impl_$._mul(ah1,bl1);
			var p011 = haxe__$Int32_Int32_$Impl_$._mul(al1,bh1);
			var p111 = haxe__$Int32_Int32_$Impl_$._mul(ah1,bh1);
			var low2 = p001;
			var high2 = (p111 + (p011 >>> 16) | 0) + (p101 >>> 16) | 0;
			p011 = p011 << 16;
			low2 = low2 + p011 | 0;
			if(haxe__$Int32_Int32_$Impl_$.ucompare(low2,p011) < 0) {
				var ret3 = high2++;
				high2 = high2 | 0;
			}
			p101 = p101 << 16;
			low2 = low2 + p101 | 0;
			if(haxe__$Int32_Int32_$Impl_$.ucompare(low2,p101) < 0) {
				var ret4 = high2++;
				high2 = high2 | 0;
			}
			high2 = high2 + (haxe__$Int32_Int32_$Impl_$._mul(multiplier.low,digit.high) + haxe__$Int32_Int32_$Impl_$._mul(multiplier.high,digit.low) | 0) | 0;
			var this7 = new haxe__$Int64__$_$_$Int64(high2,low2);
			var b1 = this7;
			var high3 = current.high + b1.high | 0;
			var low3 = current.low + b1.low | 0;
			if(haxe__$Int32_Int32_$Impl_$.ucompare(low3,current.low) < 0) {
				var ret5 = high3++;
				high3 = high3 | 0;
			}
			var this8 = new haxe__$Int64__$_$_$Int64(high3,low3);
			current = this8;
			if(current.high < 0) {
				throw new js__$Boot_HaxeError("NumberFormatError: Overflow");
			}
		}
		var mask2 = 65535;
		var al2 = multiplier.low & mask2;
		var ah2 = multiplier.low >>> 16;
		var bl2 = base.low & mask2;
		var bh2 = base.low >>> 16;
		var p002 = haxe__$Int32_Int32_$Impl_$._mul(al2,bl2);
		var p102 = haxe__$Int32_Int32_$Impl_$._mul(ah2,bl2);
		var p012 = haxe__$Int32_Int32_$Impl_$._mul(al2,bh2);
		var p112 = haxe__$Int32_Int32_$Impl_$._mul(ah2,bh2);
		var low4 = p002;
		var high4 = (p112 + (p012 >>> 16) | 0) + (p102 >>> 16) | 0;
		p012 = p012 << 16;
		low4 = low4 + p012 | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low4,p012) < 0) {
			var ret6 = high4++;
			high4 = high4 | 0;
		}
		p102 = p102 << 16;
		low4 = low4 + p102 | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low4,p102) < 0) {
			var ret7 = high4++;
			high4 = high4 | 0;
		}
		high4 = high4 + (haxe__$Int32_Int32_$Impl_$._mul(multiplier.low,base.high) + haxe__$Int32_Int32_$Impl_$._mul(multiplier.high,base.low) | 0) | 0;
		var this9 = new haxe__$Int64__$_$_$Int64(high4,low4);
		multiplier = this9;
	}
	return current;
};
haxe_Int64Helper.fromFloat = function(f) {
	if(isNaN(f) || !isFinite(f)) {
		throw new js__$Boot_HaxeError("Number is NaN or Infinite");
	}
	var noFractions = f - f % 1;
	if(noFractions > 9007199254740991) {
		throw new js__$Boot_HaxeError("Conversion overflow");
	}
	if(noFractions < -9007199254740991) {
		throw new js__$Boot_HaxeError("Conversion underflow");
	}
	var this1 = new haxe__$Int64__$_$_$Int64(0,0);
	var result = this1;
	var neg = noFractions < 0;
	var rest = neg ? -noFractions : noFractions;
	var i = 0;
	while(rest >= 1) {
		var curr = rest % 2;
		rest /= 2;
		if(curr >= 1) {
			var this2 = new haxe__$Int64__$_$_$Int64(0,1);
			var a = this2;
			var b = i;
			b &= 63;
			var b1;
			if(b == 0) {
				var this3 = new haxe__$Int64__$_$_$Int64(a.high,a.low);
				b1 = this3;
			} else if(b < 32) {
				var this4 = new haxe__$Int64__$_$_$Int64(a.high << b | a.low >>> 32 - b,a.low << b);
				b1 = this4;
			} else {
				var this5 = new haxe__$Int64__$_$_$Int64(a.low << b - 32,0);
				b1 = this5;
			}
			var high = result.high + b1.high | 0;
			var low = result.low + b1.low | 0;
			if(haxe__$Int32_Int32_$Impl_$.ucompare(low,result.low) < 0) {
				var ret = high++;
				high = high | 0;
			}
			var this6 = new haxe__$Int64__$_$_$Int64(high,low);
			result = this6;
		}
		++i;
	}
	if(neg) {
		var high1 = ~result.high;
		var low1 = -result.low;
		if(low1 == 0) {
			var ret1 = high1++;
			high1 = high1 | 0;
		}
		var this7 = new haxe__$Int64__$_$_$Int64(high1,low1);
		result = this7;
	}
	return result;
};
var haxe_Log = function() { };
$hxClasses["haxe.Log"] = haxe_Log;
haxe_Log.__name__ = ["haxe","Log"];
haxe_Log.trace = function(v,infos) {
	js_Boot.__trace(v,infos);
};
haxe_Log.clear = function() {
	js_Boot.__clear_trace();
};
var haxe_Serializer = function() {
	this.buf = new StringBuf();
	this.cache = [];
	this.useCache = haxe_Serializer.USE_CACHE;
	this.useEnumIndex = haxe_Serializer.USE_ENUM_INDEX;
	this.shash = new haxe_ds_StringMap();
	this.scount = 0;
};
$hxClasses["haxe.Serializer"] = haxe_Serializer;
haxe_Serializer.__name__ = ["haxe","Serializer"];
haxe_Serializer.run = function(v) {
	var s = new haxe_Serializer();
	s.serialize(v);
	return s.toString();
};
haxe_Serializer.prototype = {
	buf: null
	,cache: null
	,shash: null
	,scount: null
	,useCache: null
	,useEnumIndex: null
	,toString: function() {
		return this.buf.b;
	}
	,serializeString: function(s) {
		var _this = this.shash;
		var x = __map_reserved[s] != null ? _this.getReserved(s) : _this.h[s];
		if(x != null) {
			this.buf.b += "R";
			this.buf.b += x == null ? "null" : "" + x;
			return;
		}
		var _this1 = this.shash;
		var value = this.scount++;
		if(__map_reserved[s] != null) {
			_this1.setReserved(s,value);
		} else {
			_this1.h[s] = value;
		}
		this.buf.b += "y";
		s = encodeURIComponent(s);
		this.buf.b += Std.string(s.length);
		this.buf.b += ":";
		this.buf.b += s == null ? "null" : "" + s;
	}
	,serializeRef: function(v) {
		var vt = typeof(v);
		var _g1 = 0;
		var _g = this.cache.length;
		while(_g1 < _g) {
			var i = _g1++;
			var ci = this.cache[i];
			if(typeof(ci) == vt && ci == v) {
				this.buf.b += "r";
				this.buf.b += i == null ? "null" : "" + i;
				return true;
			}
		}
		this.cache.push(v);
		return false;
	}
	,serializeFields: function(v) {
		var _g = 0;
		var _g1 = Reflect.fields(v);
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			this.serializeString(f);
			this.serialize(Reflect.field(v,f));
		}
		this.buf.b += "g";
	}
	,serialize: function(v) {
		var _g = Type["typeof"](v);
		switch(_g[1]) {
		case 0:
			this.buf.b += "n";
			break;
		case 1:
			var v1 = v;
			if(v1 == 0) {
				this.buf.b += "z";
				return;
			}
			this.buf.b += "i";
			this.buf.b += v1 == null ? "null" : "" + v1;
			break;
		case 2:
			var v2 = v;
			if(isNaN(v2)) {
				this.buf.b += "k";
			} else if(!isFinite(v2)) {
				this.buf.b += v2 < 0 ? "m" : "p";
			} else {
				this.buf.b += "d";
				this.buf.b += v2 == null ? "null" : "" + v2;
			}
			break;
		case 3:
			this.buf.b += v ? "t" : "f";
			break;
		case 4:
			if(js_Boot.__instanceof(v,Class)) {
				var className = Type.getClassName(v);
				this.buf.b += "A";
				this.serializeString(className);
			} else if(js_Boot.__instanceof(v,Enum)) {
				this.buf.b += "B";
				this.serializeString(Type.getEnumName(v));
			} else {
				if(this.useCache && this.serializeRef(v)) {
					return;
				}
				this.buf.b += "o";
				this.serializeFields(v);
			}
			break;
		case 5:
			throw new js__$Boot_HaxeError("Cannot serialize function");
			break;
		case 6:
			var c = _g[2];
			if(c == String) {
				this.serializeString(v);
				return;
			}
			if(this.useCache && this.serializeRef(v)) {
				return;
			}
			switch(c) {
			case Array:
				var ucount = 0;
				this.buf.b += "a";
				var l = v["length"];
				var _g1 = 0;
				var _g2 = l;
				while(_g1 < _g2) {
					var i = _g1++;
					if(v[i] == null) {
						++ucount;
					} else {
						if(ucount > 0) {
							if(ucount == 1) {
								this.buf.b += "n";
							} else {
								this.buf.b += "u";
								this.buf.b += ucount == null ? "null" : "" + ucount;
							}
							ucount = 0;
						}
						this.serialize(v[i]);
					}
				}
				if(ucount > 0) {
					if(ucount == 1) {
						this.buf.b += "n";
					} else {
						this.buf.b += "u";
						this.buf.b += ucount == null ? "null" : "" + ucount;
					}
				}
				this.buf.b += "h";
				break;
			case Date:
				var d = v;
				this.buf.b += "v";
				this.buf.b += Std.string(d.getTime());
				break;
			case List:
				this.buf.b += "l";
				var v3 = v;
				var _g_head = v3.h;
				while(_g_head != null) {
					var val = _g_head.item;
					_g_head = _g_head.next;
					var i1 = val;
					this.serialize(i1);
				}
				this.buf.b += "h";
				break;
			case haxe_ds_IntMap:
				this.buf.b += "q";
				var v4 = v;
				var k = v4.keys();
				while(k.hasNext()) {
					var k1 = k.next();
					this.buf.b += ":";
					this.buf.b += k1 == null ? "null" : "" + k1;
					this.serialize(v4.h[k1]);
				}
				this.buf.b += "h";
				break;
			case haxe_ds_ObjectMap:
				this.buf.b += "M";
				var v5 = v;
				var k2 = v5.keys();
				while(k2.hasNext()) {
					var k3 = k2.next();
					var id = Reflect.field(k3,"__id__");
					Reflect.deleteField(k3,"__id__");
					this.serialize(k3);
					k3["__id__"] = id;
					this.serialize(v5.h[k3.__id__]);
				}
				this.buf.b += "h";
				break;
			case haxe_ds_StringMap:
				this.buf.b += "b";
				var v6 = v;
				var k4 = v6.keys();
				while(k4.hasNext()) {
					var k5 = k4.next();
					this.serializeString(k5);
					this.serialize(__map_reserved[k5] != null ? v6.getReserved(k5) : v6.h[k5]);
				}
				this.buf.b += "h";
				break;
			case haxe_io_Bytes:
				var v7 = v;
				this.buf.b += "s";
				this.buf.b += Std.string(Math.ceil(v7.length * 8 / 6));
				this.buf.b += ":";
				var i2 = 0;
				var max = v7.length - 2;
				var b64 = haxe_Serializer.BASE64_CODES;
				if(b64 == null) {
					var length = haxe_Serializer.BASE64.length;
					var this1 = new Array(length);
					b64 = this1;
					var _g11 = 0;
					var _g3 = haxe_Serializer.BASE64.length;
					while(_g11 < _g3) {
						var i3 = _g11++;
						b64[i3] = HxOverrides.cca(haxe_Serializer.BASE64,i3);
					}
					haxe_Serializer.BASE64_CODES = b64;
				}
				while(i2 < max) {
					var b1 = v7.b[i2++];
					var b2 = v7.b[i2++];
					var b3 = v7.b[i2++];
					this.buf.b += String.fromCharCode(b64[b1 >> 2]);
					this.buf.b += String.fromCharCode(b64[(b1 << 4 | b2 >> 4) & 63]);
					this.buf.b += String.fromCharCode(b64[(b2 << 2 | b3 >> 6) & 63]);
					this.buf.b += String.fromCharCode(b64[b3 & 63]);
				}
				if(i2 == max) {
					var b11 = v7.b[i2++];
					var b21 = v7.b[i2++];
					this.buf.b += String.fromCharCode(b64[b11 >> 2]);
					this.buf.b += String.fromCharCode(b64[(b11 << 4 | b21 >> 4) & 63]);
					this.buf.b += String.fromCharCode(b64[b21 << 2 & 63]);
				} else if(i2 == max + 1) {
					var b12 = v7.b[i2++];
					this.buf.b += String.fromCharCode(b64[b12 >> 2]);
					this.buf.b += String.fromCharCode(b64[b12 << 4 & 63]);
				}
				break;
			default:
				if(this.useCache) {
					this.cache.pop();
				}
				if(v.hxSerialize != null) {
					this.buf.b += "C";
					this.serializeString(Type.getClassName(c));
					if(this.useCache) {
						this.cache.push(v);
					}
					v.hxSerialize(this);
					this.buf.b += "g";
				} else {
					this.buf.b += "c";
					this.serializeString(Type.getClassName(c));
					if(this.useCache) {
						this.cache.push(v);
					}
					this.serializeFields(v);
				}
			}
			break;
		case 7:
			var e = _g[2];
			if(this.useCache) {
				if(this.serializeRef(v)) {
					return;
				}
				this.cache.pop();
			}
			this.buf.b += Std.string(this.useEnumIndex ? "j" : "w");
			this.serializeString(Type.getEnumName(e));
			if(this.useEnumIndex) {
				this.buf.b += ":";
				this.buf.b += Std.string(v[1]);
			} else {
				this.serializeString(v[0]);
			}
			this.buf.b += ":";
			var l1 = v["length"];
			this.buf.b += Std.string(l1 - 2);
			var _g12 = 2;
			var _g4 = l1;
			while(_g12 < _g4) {
				var i4 = _g12++;
				this.serialize(v[i4]);
			}
			if(this.useCache) {
				this.cache.push(v);
			}
			break;
		default:
			throw new js__$Boot_HaxeError("Cannot serialize " + Std.string(v));
		}
	}
	,serializeException: function(e) {
		this.buf.b += "x";
		this.serialize(e);
	}
	,__class__: haxe_Serializer
};
var haxe__$Unserializer_DefaultResolver = function() {
};
$hxClasses["haxe._Unserializer.DefaultResolver"] = haxe__$Unserializer_DefaultResolver;
haxe__$Unserializer_DefaultResolver.__name__ = ["haxe","_Unserializer","DefaultResolver"];
haxe__$Unserializer_DefaultResolver.prototype = {
	resolveClass: function(name) {
		return Type.resolveClass(name);
	}
	,resolveEnum: function(name) {
		return Type.resolveEnum(name);
	}
	,__class__: haxe__$Unserializer_DefaultResolver
};
var haxe_Unserializer = function(buf) {
	this.buf = buf;
	this.length = buf.length;
	this.pos = 0;
	this.scache = [];
	this.cache = [];
	var r = haxe_Unserializer.DEFAULT_RESOLVER;
	if(r == null) {
		r = new haxe__$Unserializer_DefaultResolver();
		haxe_Unserializer.DEFAULT_RESOLVER = r;
	}
	this.resolver = r;
};
$hxClasses["haxe.Unserializer"] = haxe_Unserializer;
haxe_Unserializer.__name__ = ["haxe","Unserializer"];
haxe_Unserializer.initCodes = function() {
	var codes = [];
	var _g1 = 0;
	var _g = haxe_Unserializer.BASE64.length;
	while(_g1 < _g) {
		var i = _g1++;
		codes[haxe_Unserializer.BASE64.charCodeAt(i)] = i;
	}
	return codes;
};
haxe_Unserializer.run = function(v) {
	return new haxe_Unserializer(v).unserialize();
};
haxe_Unserializer.prototype = {
	buf: null
	,pos: null
	,length: null
	,cache: null
	,scache: null
	,resolver: null
	,setResolver: function(r) {
		if(r == null) {
			if(haxe__$Unserializer_NullResolver.instance == null) {
				haxe__$Unserializer_NullResolver.instance = new haxe__$Unserializer_NullResolver();
			}
			this.resolver = haxe__$Unserializer_NullResolver.instance;
		} else {
			this.resolver = r;
		}
	}
	,getResolver: function() {
		return this.resolver;
	}
	,get: function(p) {
		return this.buf.charCodeAt(p);
	}
	,readDigits: function() {
		var k = 0;
		var s = false;
		var fpos = this.pos;
		while(true) {
			var c = this.buf.charCodeAt(this.pos);
			if(c != c) {
				break;
			}
			if(c == 45) {
				if(this.pos != fpos) {
					break;
				}
				s = true;
				this.pos++;
				continue;
			}
			if(c < 48 || c > 57) {
				break;
			}
			k = k * 10 + (c - 48);
			this.pos++;
		}
		if(s) {
			k *= -1;
		}
		return k;
	}
	,readFloat: function() {
		var p1 = this.pos;
		while(true) {
			var c = this.buf.charCodeAt(this.pos);
			if(c != c) {
				break;
			}
			if(c >= 43 && c < 58 || c == 101 || c == 69) {
				this.pos++;
			} else {
				break;
			}
		}
		return parseFloat(HxOverrides.substr(this.buf,p1,this.pos - p1));
	}
	,unserializeObject: function(o) {
		while(true) {
			if(this.pos >= this.length) {
				throw new js__$Boot_HaxeError("Invalid object");
			}
			if(this.buf.charCodeAt(this.pos) == 103) {
				break;
			}
			var k = this.unserialize();
			if(typeof(k) != "string") {
				throw new js__$Boot_HaxeError("Invalid object key");
			}
			var v = this.unserialize();
			o[k] = v;
		}
		this.pos++;
	}
	,unserializeEnum: function(edecl,tag) {
		if(this.buf.charCodeAt(this.pos++) != 58) {
			throw new js__$Boot_HaxeError("Invalid enum format");
		}
		var nargs = this.readDigits();
		if(nargs == 0) {
			return Type.createEnum(edecl,tag);
		}
		var args = [];
		while(nargs-- > 0) args.push(this.unserialize());
		return Type.createEnum(edecl,tag,args);
	}
	,unserialize: function() {
		var _g = this.buf.charCodeAt(this.pos++);
		switch(_g) {
		case 65:
			var name = this.unserialize();
			var cl = this.resolver.resolveClass(name);
			if(cl == null) {
				throw new js__$Boot_HaxeError("Class not found " + name);
			}
			return cl;
		case 66:
			var name1 = this.unserialize();
			var e = this.resolver.resolveEnum(name1);
			if(e == null) {
				throw new js__$Boot_HaxeError("Enum not found " + name1);
			}
			return e;
		case 67:
			var name2 = this.unserialize();
			var cl1 = this.resolver.resolveClass(name2);
			if(cl1 == null) {
				throw new js__$Boot_HaxeError("Class not found " + name2);
			}
			var o = Type.createEmptyInstance(cl1);
			this.cache.push(o);
			o.hxUnserialize(this);
			if(this.buf.charCodeAt(this.pos++) != 103) {
				throw new js__$Boot_HaxeError("Invalid custom data");
			}
			return o;
		case 77:
			var h = new haxe_ds_ObjectMap();
			this.cache.push(h);
			var buf = this.buf;
			while(this.buf.charCodeAt(this.pos) != 104) {
				var s = this.unserialize();
				h.set(s,this.unserialize());
			}
			this.pos++;
			return h;
		case 82:
			var n = this.readDigits();
			if(n < 0 || n >= this.scache.length) {
				throw new js__$Boot_HaxeError("Invalid string reference");
			}
			return this.scache[n];
		case 97:
			var buf1 = this.buf;
			var a = [];
			this.cache.push(a);
			while(true) {
				var c = this.buf.charCodeAt(this.pos);
				if(c == 104) {
					this.pos++;
					break;
				}
				if(c == 117) {
					this.pos++;
					var n1 = this.readDigits();
					a[a.length + n1 - 1] = null;
				} else {
					a.push(this.unserialize());
				}
			}
			return a;
		case 98:
			var h1 = new haxe_ds_StringMap();
			this.cache.push(h1);
			var buf2 = this.buf;
			while(this.buf.charCodeAt(this.pos) != 104) {
				var s1 = this.unserialize();
				var value = this.unserialize();
				if(__map_reserved[s1] != null) {
					h1.setReserved(s1,value);
				} else {
					h1.h[s1] = value;
				}
			}
			this.pos++;
			return h1;
		case 99:
			var name3 = this.unserialize();
			var cl2 = this.resolver.resolveClass(name3);
			if(cl2 == null) {
				throw new js__$Boot_HaxeError("Class not found " + name3);
			}
			var o1 = Type.createEmptyInstance(cl2);
			this.cache.push(o1);
			this.unserializeObject(o1);
			return o1;
		case 100:
			return this.readFloat();
		case 102:
			return false;
		case 105:
			return this.readDigits();
		case 106:
			var name4 = this.unserialize();
			var edecl = this.resolver.resolveEnum(name4);
			if(edecl == null) {
				throw new js__$Boot_HaxeError("Enum not found " + name4);
			}
			this.pos++;
			var index = this.readDigits();
			var tag = edecl.__constructs__.slice()[index];
			if(tag == null) {
				throw new js__$Boot_HaxeError("Unknown enum index " + name4 + "@" + index);
			}
			var e1 = this.unserializeEnum(edecl,tag);
			this.cache.push(e1);
			return e1;
		case 107:
			return NaN;
		case 108:
			var l = new List();
			this.cache.push(l);
			var buf3 = this.buf;
			while(this.buf.charCodeAt(this.pos) != 104) l.add(this.unserialize());
			this.pos++;
			return l;
		case 109:
			return -Infinity;
		case 110:
			return null;
		case 111:
			var o2 = { };
			this.cache.push(o2);
			this.unserializeObject(o2);
			return o2;
		case 112:
			return Infinity;
		case 113:
			var h2 = new haxe_ds_IntMap();
			this.cache.push(h2);
			var buf4 = this.buf;
			var c1 = this.buf.charCodeAt(this.pos++);
			while(c1 == 58) {
				var i = this.readDigits();
				var value1 = this.unserialize();
				h2.h[i] = value1;
				c1 = this.buf.charCodeAt(this.pos++);
			}
			if(c1 != 104) {
				throw new js__$Boot_HaxeError("Invalid IntMap format");
			}
			return h2;
		case 114:
			var n2 = this.readDigits();
			if(n2 < 0 || n2 >= this.cache.length) {
				throw new js__$Boot_HaxeError("Invalid reference");
			}
			return this.cache[n2];
		case 115:
			var len = this.readDigits();
			var buf5 = this.buf;
			if(this.buf.charCodeAt(this.pos++) != 58 || this.length - this.pos < len) {
				throw new js__$Boot_HaxeError("Invalid bytes length");
			}
			var codes = haxe_Unserializer.CODES;
			if(codes == null) {
				codes = haxe_Unserializer.initCodes();
				haxe_Unserializer.CODES = codes;
			}
			var i1 = this.pos;
			var rest = len & 3;
			var size = (len >> 2) * 3 + (rest >= 2 ? rest - 1 : 0);
			var max = i1 + (len - rest);
			var bytes = new haxe_io_Bytes(new ArrayBuffer(size));
			var bpos = 0;
			while(i1 < max) {
				var c11 = codes[buf5.charCodeAt(i1++)];
				var c2 = codes[buf5.charCodeAt(i1++)];
				bytes.b[bpos++] = (c11 << 2 | c2 >> 4) & 255;
				var c3 = codes[buf5.charCodeAt(i1++)];
				bytes.b[bpos++] = (c2 << 4 | c3 >> 2) & 255;
				var c4 = codes[buf5.charCodeAt(i1++)];
				bytes.b[bpos++] = (c3 << 6 | c4) & 255;
			}
			if(rest >= 2) {
				var c12 = codes[buf5.charCodeAt(i1++)];
				var c21 = codes[buf5.charCodeAt(i1++)];
				bytes.b[bpos++] = (c12 << 2 | c21 >> 4) & 255;
				if(rest == 3) {
					var c31 = codes[buf5.charCodeAt(i1++)];
					bytes.b[bpos++] = (c21 << 4 | c31 >> 2) & 255;
				}
			}
			this.pos += len;
			this.cache.push(bytes);
			return bytes;
		case 116:
			return true;
		case 118:
			var d;
			if(this.buf.charCodeAt(this.pos) >= 48 && this.buf.charCodeAt(this.pos) <= 57 && this.buf.charCodeAt(this.pos + 1) >= 48 && this.buf.charCodeAt(this.pos + 1) <= 57 && this.buf.charCodeAt(this.pos + 2) >= 48 && this.buf.charCodeAt(this.pos + 2) <= 57 && this.buf.charCodeAt(this.pos + 3) >= 48 && this.buf.charCodeAt(this.pos + 3) <= 57 && this.buf.charCodeAt(this.pos + 4) == 45) {
				d = HxOverrides.strDate(HxOverrides.substr(this.buf,this.pos,19));
				this.pos += 19;
			} else {
				var t = this.readFloat();
				d = new Date(t);
			}
			this.cache.push(d);
			return d;
		case 119:
			var name5 = this.unserialize();
			var edecl1 = this.resolver.resolveEnum(name5);
			if(edecl1 == null) {
				throw new js__$Boot_HaxeError("Enum not found " + name5);
			}
			var e2 = this.unserializeEnum(edecl1,this.unserialize());
			this.cache.push(e2);
			return e2;
		case 120:
			throw js__$Boot_HaxeError.wrap(this.unserialize());
			break;
		case 121:
			var len1 = this.readDigits();
			if(this.buf.charCodeAt(this.pos++) != 58 || this.length - this.pos < len1) {
				throw new js__$Boot_HaxeError("Invalid string length");
			}
			var s2 = HxOverrides.substr(this.buf,this.pos,len1);
			this.pos += len1;
			s2 = decodeURIComponent(s2.split("+").join(" "));
			this.scache.push(s2);
			return s2;
		case 122:
			return 0;
		default:
		}
		this.pos--;
		throw new js__$Boot_HaxeError("Invalid char " + this.buf.charAt(this.pos) + " at position " + this.pos);
	}
	,__class__: haxe_Unserializer
};
var haxe__$Unserializer_NullResolver = function() {
};
$hxClasses["haxe._Unserializer.NullResolver"] = haxe__$Unserializer_NullResolver;
haxe__$Unserializer_NullResolver.__name__ = ["haxe","_Unserializer","NullResolver"];
haxe__$Unserializer_NullResolver.__properties__ = {get_instance:"get_instance"};
haxe__$Unserializer_NullResolver.instance = null;
haxe__$Unserializer_NullResolver.get_instance = function() {
	if(haxe__$Unserializer_NullResolver.instance == null) {
		haxe__$Unserializer_NullResolver.instance = new haxe__$Unserializer_NullResolver();
	}
	return haxe__$Unserializer_NullResolver.instance;
};
haxe__$Unserializer_NullResolver.prototype = {
	resolveClass: function(name) {
		return null;
	}
	,resolveEnum: function(name) {
		return null;
	}
	,__class__: haxe__$Unserializer_NullResolver
};
var haxe_Utf8 = function(size) {
	this.__b = "";
};
$hxClasses["haxe.Utf8"] = haxe_Utf8;
haxe_Utf8.__name__ = ["haxe","Utf8"];
haxe_Utf8.iter = function(s,chars) {
	var _g1 = 0;
	var _g = s.length;
	while(_g1 < _g) {
		var i = _g1++;
		chars(HxOverrides.cca(s,i));
	}
};
haxe_Utf8.encode = function(s) {
	throw new js__$Boot_HaxeError("Not implemented");
};
haxe_Utf8.decode = function(s) {
	throw new js__$Boot_HaxeError("Not implemented");
};
haxe_Utf8.charCodeAt = function(s,index) {
	return HxOverrides.cca(s,index);
};
haxe_Utf8.validate = function(s) {
	return true;
};
haxe_Utf8.compare = function(a,b) {
	if(a > b) {
		return 1;
	} else if(a == b) {
		return 0;
	} else {
		return -1;
	}
};
haxe_Utf8.sub = function(s,pos,len) {
	return HxOverrides.substr(s,pos,len);
};
haxe_Utf8.prototype = {
	__b: null
	,addChar: function(c) {
		this.__b += String.fromCharCode(c);
	}
	,toString: function() {
		return this.__b;
	}
	,__class__: haxe_Utf8
};
var haxe_ds_ArraySort = function() { };
$hxClasses["haxe.ds.ArraySort"] = haxe_ds_ArraySort;
haxe_ds_ArraySort.__name__ = ["haxe","ds","ArraySort"];
haxe_ds_ArraySort.sort = function(a,cmp) {
	haxe_ds_ArraySort.rec(a,cmp,0,a.length);
};
haxe_ds_ArraySort.rec = function(a,cmp,from,to) {
	var middle = from + to >> 1;
	if(to - from < 12) {
		if(to <= from) {
			return;
		}
		var _g1 = from + 1;
		var _g = to;
		while(_g1 < _g) {
			var i = _g1++;
			var j = i;
			while(j > from) {
				if(cmp(a[j],a[j - 1]) < 0) {
					haxe_ds_ArraySort.swap(a,j - 1,j);
				} else {
					break;
				}
				--j;
			}
		}
		return;
	}
	haxe_ds_ArraySort.rec(a,cmp,from,middle);
	haxe_ds_ArraySort.rec(a,cmp,middle,to);
	haxe_ds_ArraySort.doMerge(a,cmp,from,middle,to,middle - from,to - middle);
};
haxe_ds_ArraySort.doMerge = function(a,cmp,from,pivot,to,len1,len2) {
	var first_cut;
	var second_cut;
	var len11;
	var len22;
	var new_mid;
	if(len1 == 0 || len2 == 0) {
		return;
	}
	if(len1 + len2 == 2) {
		if(cmp(a[pivot],a[from]) < 0) {
			haxe_ds_ArraySort.swap(a,pivot,from);
		}
		return;
	}
	if(len1 > len2) {
		len11 = len1 >> 1;
		first_cut = from + len11;
		second_cut = haxe_ds_ArraySort.lower(a,cmp,pivot,to,first_cut);
		len22 = second_cut - pivot;
	} else {
		len22 = len2 >> 1;
		second_cut = pivot + len22;
		first_cut = haxe_ds_ArraySort.upper(a,cmp,from,pivot,second_cut);
		len11 = first_cut - from;
	}
	haxe_ds_ArraySort.rotate(a,cmp,first_cut,pivot,second_cut);
	new_mid = first_cut + len22;
	haxe_ds_ArraySort.doMerge(a,cmp,from,first_cut,new_mid,len11,len22);
	haxe_ds_ArraySort.doMerge(a,cmp,new_mid,second_cut,to,len1 - len11,len2 - len22);
};
haxe_ds_ArraySort.rotate = function(a,cmp,from,mid,to) {
	var n;
	if(from == mid || mid == to) {
		return;
	}
	n = haxe_ds_ArraySort.gcd(to - from,mid - from);
	while(n-- != 0) {
		var val = a[from + n];
		var shift = mid - from;
		var p1 = from + n;
		var p2 = from + n + shift;
		while(p2 != from + n) {
			a[p1] = a[p2];
			p1 = p2;
			if(to - p2 > shift) {
				p2 += shift;
			} else {
				p2 = from + (shift - (to - p2));
			}
		}
		a[p1] = val;
	}
};
haxe_ds_ArraySort.gcd = function(m,n) {
	while(n != 0) {
		var t = m % n;
		m = n;
		n = t;
	}
	return m;
};
haxe_ds_ArraySort.upper = function(a,cmp,from,to,val) {
	var len = to - from;
	var half;
	var mid;
	while(len > 0) {
		half = len >> 1;
		mid = from + half;
		if(cmp(a[val],a[mid]) < 0) {
			len = half;
		} else {
			from = mid + 1;
			len = len - half - 1;
		}
	}
	return from;
};
haxe_ds_ArraySort.lower = function(a,cmp,from,to,val) {
	var len = to - from;
	var half;
	var mid;
	while(len > 0) {
		half = len >> 1;
		mid = from + half;
		if(cmp(a[mid],a[val]) < 0) {
			from = mid + 1;
			len = len - half - 1;
		} else {
			len = half;
		}
	}
	return from;
};
haxe_ds_ArraySort.swap = function(a,i,j) {
	var tmp = a[i];
	a[i] = a[j];
	a[j] = tmp;
};
haxe_ds_ArraySort.compare = function(a,cmp,i,j) {
	return cmp(a[i],a[j]);
};
var haxe_ds_BalancedTree = function() {
};
$hxClasses["haxe.ds.BalancedTree"] = haxe_ds_BalancedTree;
haxe_ds_BalancedTree.__name__ = ["haxe","ds","BalancedTree"];
haxe_ds_BalancedTree.prototype = {
	root: null
	,set: function(key,value) {
		this.root = this.setLoop(key,value,this.root);
	}
	,get: function(key) {
		var node = this.root;
		while(node != null) {
			var c = this.compare(key,node.key);
			if(c == 0) {
				return node.value;
			}
			if(c < 0) {
				node = node.left;
			} else {
				node = node.right;
			}
		}
		return null;
	}
	,remove: function(key) {
		try {
			this.root = this.removeLoop(key,this.root);
			return true;
		} catch( e ) {
			if (e instanceof js__$Boot_HaxeError) e = e.val;
			if( js_Boot.__instanceof(e,String) ) {
				return false;
			} else throw(e);
		}
	}
	,exists: function(key) {
		var node = this.root;
		while(node != null) {
			var c = this.compare(key,node.key);
			if(c == 0) {
				return true;
			} else if(c < 0) {
				node = node.left;
			} else {
				node = node.right;
			}
		}
		return false;
	}
	,iterator: function() {
		var ret = [];
		this.iteratorLoop(this.root,ret);
		return HxOverrides.iter(ret);
	}
	,keys: function() {
		var ret = [];
		this.keysLoop(this.root,ret);
		return HxOverrides.iter(ret);
	}
	,setLoop: function(k,v,node) {
		if(node == null) {
			return new haxe_ds_TreeNode(null,k,v,null);
		}
		var c = this.compare(k,node.key);
		if(c == 0) {
			return new haxe_ds_TreeNode(node.left,k,v,node.right,node == null ? 0 : node._height);
		} else if(c < 0) {
			var nl = this.setLoop(k,v,node.left);
			return this.balance(nl,node.key,node.value,node.right);
		} else {
			var nr = this.setLoop(k,v,node.right);
			return this.balance(node.left,node.key,node.value,nr);
		}
	}
	,removeLoop: function(k,node) {
		if(node == null) {
			throw new js__$Boot_HaxeError("Not_found");
		}
		var c = this.compare(k,node.key);
		if(c == 0) {
			return this.merge(node.left,node.right);
		} else if(c < 0) {
			return this.balance(this.removeLoop(k,node.left),node.key,node.value,node.right);
		} else {
			return this.balance(node.left,node.key,node.value,this.removeLoop(k,node.right));
		}
	}
	,iteratorLoop: function(node,acc) {
		if(node != null) {
			this.iteratorLoop(node.left,acc);
			acc.push(node.value);
			this.iteratorLoop(node.right,acc);
		}
	}
	,keysLoop: function(node,acc) {
		if(node != null) {
			this.keysLoop(node.left,acc);
			acc.push(node.key);
			this.keysLoop(node.right,acc);
		}
	}
	,merge: function(t1,t2) {
		if(t1 == null) {
			return t2;
		}
		if(t2 == null) {
			return t1;
		}
		var t = this.minBinding(t2);
		return this.balance(t1,t.key,t.value,this.removeMinBinding(t2));
	}
	,minBinding: function(t) {
		if(t == null) {
			throw new js__$Boot_HaxeError("Not_found");
		} else if(t.left == null) {
			return t;
		} else {
			return this.minBinding(t.left);
		}
	}
	,removeMinBinding: function(t) {
		if(t.left == null) {
			return t.right;
		} else {
			return this.balance(this.removeMinBinding(t.left),t.key,t.value,t.right);
		}
	}
	,balance: function(l,k,v,r) {
		var hl = l == null ? 0 : l._height;
		var hr = r == null ? 0 : r._height;
		if(hl > hr + 2) {
			var _this = l.left;
			var _this1 = l.right;
			if((_this == null ? 0 : _this._height) >= (_this1 == null ? 0 : _this1._height)) {
				return new haxe_ds_TreeNode(l.left,l.key,l.value,new haxe_ds_TreeNode(l.right,k,v,r));
			} else {
				return new haxe_ds_TreeNode(new haxe_ds_TreeNode(l.left,l.key,l.value,l.right.left),l.right.key,l.right.value,new haxe_ds_TreeNode(l.right.right,k,v,r));
			}
		} else if(hr > hl + 2) {
			var _this2 = r.right;
			var _this3 = r.left;
			if((_this2 == null ? 0 : _this2._height) > (_this3 == null ? 0 : _this3._height)) {
				return new haxe_ds_TreeNode(new haxe_ds_TreeNode(l,k,v,r.left),r.key,r.value,r.right);
			} else {
				return new haxe_ds_TreeNode(new haxe_ds_TreeNode(l,k,v,r.left.left),r.left.key,r.left.value,new haxe_ds_TreeNode(r.left.right,r.key,r.value,r.right));
			}
		} else {
			return new haxe_ds_TreeNode(l,k,v,r,(hl > hr ? hl : hr) + 1);
		}
	}
	,compare: function(k1,k2) {
		return Reflect.compare(k1,k2);
	}
	,toString: function() {
		if(this.root == null) {
			return "{}";
		} else {
			return "{" + this.root.toString() + "}";
		}
	}
	,__class__: haxe_ds_BalancedTree
};
var haxe_ds_TreeNode = function(l,k,v,r,h) {
	if(h == null) {
		h = -1;
	}
	this.left = l;
	this.key = k;
	this.value = v;
	this.right = r;
	if(h == -1) {
		var tmp;
		var _this = this.left;
		var _this1 = this.right;
		if((_this == null ? 0 : _this._height) > (_this1 == null ? 0 : _this1._height)) {
			var _this2 = this.left;
			if(_this2 == null) {
				tmp = 0;
			} else {
				tmp = _this2._height;
			}
		} else {
			var _this3 = this.right;
			if(_this3 == null) {
				tmp = 0;
			} else {
				tmp = _this3._height;
			}
		}
		this._height = tmp + 1;
	} else {
		this._height = h;
	}
};
$hxClasses["haxe.ds.TreeNode"] = haxe_ds_TreeNode;
haxe_ds_TreeNode.__name__ = ["haxe","ds","TreeNode"];
haxe_ds_TreeNode.prototype = {
	left: null
	,right: null
	,key: null
	,value: null
	,_height: null
	,toString: function() {
		return (this.left == null ? "" : this.left.toString() + ", ") + ("" + Std.string(this.key) + "=" + Std.string(this.value)) + (this.right == null ? "" : ", " + this.right.toString());
	}
	,__class__: haxe_ds_TreeNode
};
var haxe_ds_EnumValueMap = function() {
	haxe_ds_BalancedTree.call(this);
};
$hxClasses["haxe.ds.EnumValueMap"] = haxe_ds_EnumValueMap;
haxe_ds_EnumValueMap.__name__ = ["haxe","ds","EnumValueMap"];
haxe_ds_EnumValueMap.__interfaces__ = [haxe_IMap];
haxe_ds_EnumValueMap.__super__ = haxe_ds_BalancedTree;
haxe_ds_EnumValueMap.prototype = $extend(haxe_ds_BalancedTree.prototype,{
	compare: function(k1,k2) {
		var d = k1[1] - k2[1];
		if(d != 0) {
			return d;
		}
		var p1 = k1.slice(2);
		var p2 = k2.slice(2);
		if(p1.length == 0 && p2.length == 0) {
			return 0;
		}
		return this.compareArgs(p1,p2);
	}
	,compareArgs: function(a1,a2) {
		var ld = a1.length - a2.length;
		if(ld != 0) {
			return ld;
		}
		var _g1 = 0;
		var _g = a1.length;
		while(_g1 < _g) {
			var i = _g1++;
			var d = this.compareArg(a1[i],a2[i]);
			if(d != 0) {
				return d;
			}
		}
		return 0;
	}
	,compareArg: function(v1,v2) {
		if(Reflect.isEnumValue(v1) && Reflect.isEnumValue(v2)) {
			return this.compare(v1,v2);
		} else if((v1 instanceof Array) && v1.__enum__ == null && ((v2 instanceof Array) && v2.__enum__ == null)) {
			return this.compareArgs(v1,v2);
		} else {
			return Reflect.compare(v1,v2);
		}
	}
	,__class__: haxe_ds_EnumValueMap
});
var haxe_ds__$HashMap_HashMap_$Impl_$ = {};
$hxClasses["haxe.ds._HashMap.HashMap_Impl_"] = haxe_ds__$HashMap_HashMap_$Impl_$;
haxe_ds__$HashMap_HashMap_$Impl_$.__name__ = ["haxe","ds","_HashMap","HashMap_Impl_"];
haxe_ds__$HashMap_HashMap_$Impl_$._new = function() {
	var this1 = new haxe_ds__$HashMap_HashMapData();
	return this1;
};
haxe_ds__$HashMap_HashMap_$Impl_$.set = function(this1,k,v) {
	var _this = this1.keys;
	var key = k.hashCode();
	_this.h[key] = k;
	var _this1 = this1.values;
	var key1 = k.hashCode();
	_this1.h[key1] = v;
};
haxe_ds__$HashMap_HashMap_$Impl_$.get = function(this1,k) {
	var _this = this1.values;
	var key = k.hashCode();
	return _this.h[key];
};
haxe_ds__$HashMap_HashMap_$Impl_$.exists = function(this1,k) {
	var _this = this1.values;
	var key = k.hashCode();
	return _this.h.hasOwnProperty(key);
};
haxe_ds__$HashMap_HashMap_$Impl_$.remove = function(this1,k) {
	this1.values.remove(k.hashCode());
	return this1.keys.remove(k.hashCode());
};
haxe_ds__$HashMap_HashMap_$Impl_$.keys = function(this1) {
	return this1.keys.iterator();
};
haxe_ds__$HashMap_HashMap_$Impl_$.iterator = function(this1) {
	return this1.values.iterator();
};
var haxe_ds__$HashMap_HashMapData = function() {
	this.keys = new haxe_ds_IntMap();
	this.values = new haxe_ds_IntMap();
};
$hxClasses["haxe.ds._HashMap.HashMapData"] = haxe_ds__$HashMap_HashMapData;
haxe_ds__$HashMap_HashMapData.__name__ = ["haxe","ds","_HashMap","HashMapData"];
haxe_ds__$HashMap_HashMapData.prototype = {
	keys: null
	,values: null
	,__class__: haxe_ds__$HashMap_HashMapData
};
var haxe_ds_IntMap = function() {
	this.h = { };
};
$hxClasses["haxe.ds.IntMap"] = haxe_ds_IntMap;
haxe_ds_IntMap.__name__ = ["haxe","ds","IntMap"];
haxe_ds_IntMap.__interfaces__ = [haxe_IMap];
haxe_ds_IntMap.prototype = {
	h: null
	,set: function(key,value) {
		this.h[key] = value;
	}
	,get: function(key) {
		return this.h[key];
	}
	,exists: function(key) {
		return this.h.hasOwnProperty(key);
	}
	,remove: function(key) {
		if(!this.h.hasOwnProperty(key)) {
			return false;
		}
		delete(this.h[key]);
		return true;
	}
	,keys: function() {
		var a = [];
		for( var key in this.h ) if(this.h.hasOwnProperty(key)) {
			a.push(key | 0);
		}
		return HxOverrides.iter(a);
	}
	,iterator: function() {
		return { ref : this.h, it : this.keys(), hasNext : function() {
			return this.it.hasNext();
		}, next : function() {
			var i = this.it.next();
			return this.ref[i];
		}};
	}
	,toString: function() {
		var s_b = "";
		s_b += "{";
		var it = this.keys();
		var i = it;
		while(i.hasNext()) {
			var i1 = i.next();
			s_b += i1 == null ? "null" : "" + i1;
			s_b += " => ";
			s_b += Std.string(Std.string(this.h[i1]));
			if(it.hasNext()) {
				s_b += ", ";
			}
		}
		s_b += "}";
		return s_b;
	}
	,__class__: haxe_ds_IntMap
};
var haxe_ds_ObjectMap = function() {
	this.h = { __keys__ : { }};
};
$hxClasses["haxe.ds.ObjectMap"] = haxe_ds_ObjectMap;
haxe_ds_ObjectMap.__name__ = ["haxe","ds","ObjectMap"];
haxe_ds_ObjectMap.__interfaces__ = [haxe_IMap];
haxe_ds_ObjectMap.assignId = function(obj) {
	return obj.__id__ = ++haxe_ds_ObjectMap.count;
};
haxe_ds_ObjectMap.getId = function(obj) {
	return obj.__id__;
};
haxe_ds_ObjectMap.prototype = {
	h: null
	,set: function(key,value) {
		var id = key.__id__ || (key.__id__ = ++haxe_ds_ObjectMap.count);
		this.h[id] = value;
		this.h.__keys__[id] = key;
	}
	,get: function(key) {
		return this.h[key.__id__];
	}
	,exists: function(key) {
		return this.h.__keys__[key.__id__] != null;
	}
	,remove: function(key) {
		var id = key.__id__;
		if(this.h.__keys__[id] == null) {
			return false;
		}
		delete(this.h[id]);
		delete(this.h.__keys__[id]);
		return true;
	}
	,keys: function() {
		var a = [];
		for( var key in this.h.__keys__ ) {
		if(this.h.hasOwnProperty(key)) {
			a.push(this.h.__keys__[key]);
		}
		}
		return HxOverrides.iter(a);
	}
	,iterator: function() {
		return { ref : this.h, it : this.keys(), hasNext : function() {
			return this.it.hasNext();
		}, next : function() {
			var i = this.it.next();
			return this.ref[i.__id__];
		}};
	}
	,toString: function() {
		var s_b = "";
		s_b += "{";
		var it = this.keys();
		var i = it;
		while(i.hasNext()) {
			var i1 = i.next();
			s_b += Std.string(Std.string(i1));
			s_b += " => ";
			s_b += Std.string(Std.string(this.h[i1.__id__]));
			if(it.hasNext()) {
				s_b += ", ";
			}
		}
		s_b += "}";
		return s_b;
	}
	,__class__: haxe_ds_ObjectMap
};
var haxe_ds__$StringMap_StringMapIterator = function(map,keys) {
	this.map = map;
	this.keys = keys;
	this.index = 0;
	this.count = keys.length;
};
$hxClasses["haxe.ds._StringMap.StringMapIterator"] = haxe_ds__$StringMap_StringMapIterator;
haxe_ds__$StringMap_StringMapIterator.__name__ = ["haxe","ds","_StringMap","StringMapIterator"];
haxe_ds__$StringMap_StringMapIterator.prototype = {
	map: null
	,keys: null
	,index: null
	,count: null
	,hasNext: function() {
		return this.index < this.count;
	}
	,next: function() {
		var _this = this.map;
		var key = this.keys[this.index++];
		if(__map_reserved[key] != null) {
			return _this.getReserved(key);
		} else {
			return _this.h[key];
		}
	}
	,__class__: haxe_ds__$StringMap_StringMapIterator
};
var haxe_ds_StringMap = function() {
	this.h = { };
};
$hxClasses["haxe.ds.StringMap"] = haxe_ds_StringMap;
haxe_ds_StringMap.__name__ = ["haxe","ds","StringMap"];
haxe_ds_StringMap.__interfaces__ = [haxe_IMap];
haxe_ds_StringMap.prototype = {
	h: null
	,rh: null
	,isReserved: function(key) {
		return __map_reserved[key] != null;
	}
	,set: function(key,value) {
		if(__map_reserved[key] != null) {
			this.setReserved(key,value);
		} else {
			this.h[key] = value;
		}
	}
	,get: function(key) {
		if(__map_reserved[key] != null) {
			return this.getReserved(key);
		}
		return this.h[key];
	}
	,exists: function(key) {
		if(__map_reserved[key] != null) {
			return this.existsReserved(key);
		}
		return this.h.hasOwnProperty(key);
	}
	,setReserved: function(key,value) {
		if(this.rh == null) {
			this.rh = { };
		}
		this.rh["$" + key] = value;
	}
	,getReserved: function(key) {
		if(this.rh == null) {
			return null;
		} else {
			return this.rh["$" + key];
		}
	}
	,existsReserved: function(key) {
		if(this.rh == null) {
			return false;
		}
		return this.rh.hasOwnProperty("$" + key);
	}
	,remove: function(key) {
		if(__map_reserved[key] != null) {
			key = "$" + key;
			if(this.rh == null || !this.rh.hasOwnProperty(key)) {
				return false;
			}
			delete(this.rh[key]);
			return true;
		} else {
			if(!this.h.hasOwnProperty(key)) {
				return false;
			}
			delete(this.h[key]);
			return true;
		}
	}
	,keys: function() {
		return HxOverrides.iter(this.arrayKeys());
	}
	,arrayKeys: function() {
		var out = [];
		for( var key in this.h ) {
		if(this.h.hasOwnProperty(key)) {
			out.push(key);
		}
		}
		if(this.rh != null) {
			for( var key in this.rh ) {
			if(key.charCodeAt(0) == 36) {
				out.push(key.substr(1));
			}
			}
		}
		return out;
	}
	,iterator: function() {
		return new haxe_ds__$StringMap_StringMapIterator(this,this.arrayKeys());
	}
	,toString: function() {
		var s_b = "";
		s_b += "{";
		var keys = this.arrayKeys();
		var _g1 = 0;
		var _g = keys.length;
		while(_g1 < _g) {
			var i = _g1++;
			var k = keys[i];
			s_b += k == null ? "null" : "" + k;
			s_b += " => ";
			s_b += Std.string(Std.string(__map_reserved[k] != null ? this.getReserved(k) : this.h[k]));
			if(i < keys.length - 1) {
				s_b += ", ";
			}
		}
		s_b += "}";
		return s_b;
	}
	,__class__: haxe_ds_StringMap
};
var haxe_ds__$Vector_Vector_$Impl_$ = {};
$hxClasses["haxe.ds._Vector.Vector_Impl_"] = haxe_ds__$Vector_Vector_$Impl_$;
haxe_ds__$Vector_Vector_$Impl_$.__name__ = ["haxe","ds","_Vector","Vector_Impl_"];
haxe_ds__$Vector_Vector_$Impl_$.__properties__ = {get_length:"get_length"};
haxe_ds__$Vector_Vector_$Impl_$._new = function(length) {
	var this1 = new Array(length);
	return this1;
};
haxe_ds__$Vector_Vector_$Impl_$.get = function(this1,index) {
	return this1[index];
};
haxe_ds__$Vector_Vector_$Impl_$.set = function(this1,index,val) {
	return this1[index] = val;
};
haxe_ds__$Vector_Vector_$Impl_$.get_length = function(this1) {
	return this1.length;
};
haxe_ds__$Vector_Vector_$Impl_$.blit = function(src,srcPos,dest,destPos,len) {
	if(src == dest) {
		if(srcPos < destPos) {
			var i = srcPos + len;
			var j = destPos + len;
			var _g1 = 0;
			var _g = len;
			while(_g1 < _g) {
				var k = _g1++;
				--i;
				--j;
				src[j] = src[i];
			}
		} else if(srcPos > destPos) {
			var i1 = srcPos;
			var j1 = destPos;
			var _g11 = 0;
			var _g2 = len;
			while(_g11 < _g2) {
				var k1 = _g11++;
				src[j1] = src[i1];
				++i1;
				++j1;
			}
		}
	} else {
		var _g12 = 0;
		var _g3 = len;
		while(_g12 < _g3) {
			var i2 = _g12++;
			dest[destPos + i2] = src[srcPos + i2];
		}
	}
};
haxe_ds__$Vector_Vector_$Impl_$.toArray = function(this1) {
	return this1.slice(0);
};
haxe_ds__$Vector_Vector_$Impl_$.toData = function(this1) {
	return this1;
};
haxe_ds__$Vector_Vector_$Impl_$.fromData = function(data) {
	return data;
};
haxe_ds__$Vector_Vector_$Impl_$.fromArrayCopy = function(array) {
	return array.slice(0);
};
haxe_ds__$Vector_Vector_$Impl_$.copy = function(this1) {
	var length = this1.length;
	var this2 = new Array(length);
	var r = this2;
	haxe_ds__$Vector_Vector_$Impl_$.blit(this1,0,r,0,this1.length);
	return r;
};
haxe_ds__$Vector_Vector_$Impl_$.join = function(this1,sep) {
	var b_b = "";
	var i = 0;
	var len = this1.length;
	var _g1 = 0;
	var _g = len;
	while(_g1 < _g) {
		var i1 = _g1++;
		b_b += Std.string(Std.string(this1[i1]));
		if(i1 < len - 1) {
			b_b += sep == null ? "null" : "" + sep;
		}
	}
	return b_b;
};
haxe_ds__$Vector_Vector_$Impl_$.map = function(this1,f) {
	var length = this1.length;
	var this2 = new Array(length);
	var r = this2;
	var i = 0;
	var len = length;
	var _g1 = 0;
	var _g = len;
	while(_g1 < _g) {
		var i1 = _g1++;
		var v = f(this1[i1]);
		r[i1] = v;
	}
	return r;
};
haxe_ds__$Vector_Vector_$Impl_$.sort = function(this1,f) {
	this1.sort(f);
};
var haxe_ds_WeakMap = function() {
	throw new js__$Boot_HaxeError("Not implemented for this platform");
};
$hxClasses["haxe.ds.WeakMap"] = haxe_ds_WeakMap;
haxe_ds_WeakMap.__name__ = ["haxe","ds","WeakMap"];
haxe_ds_WeakMap.__interfaces__ = [haxe_IMap];
haxe_ds_WeakMap.prototype = {
	set: function(key,value) {
	}
	,get: function(key) {
		return null;
	}
	,exists: function(key) {
		return false;
	}
	,remove: function(key) {
		return false;
	}
	,keys: function() {
		return null;
	}
	,iterator: function() {
		return null;
	}
	,toString: function() {
		return null;
	}
	,__class__: haxe_ds_WeakMap
};
var haxe_io_Bytes = function(data) {
	this.length = data.byteLength;
	this.b = new Uint8Array(data);
	this.b.bufferValue = data;
	data.hxBytes = this;
	data.bytes = this.b;
};
$hxClasses["haxe.io.Bytes"] = haxe_io_Bytes;
haxe_io_Bytes.__name__ = ["haxe","io","Bytes"];
haxe_io_Bytes.alloc = function(length) {
	return new haxe_io_Bytes(new ArrayBuffer(length));
};
haxe_io_Bytes.ofString = function(s) {
	var a = [];
	var i = 0;
	while(i < s.length) {
		var c = s.charCodeAt(i++);
		if(55296 <= c && c <= 56319) {
			c = c - 55232 << 10 | s.charCodeAt(i++) & 1023;
		}
		if(c <= 127) {
			a.push(c);
		} else if(c <= 2047) {
			a.push(192 | c >> 6);
			a.push(128 | c & 63);
		} else if(c <= 65535) {
			a.push(224 | c >> 12);
			a.push(128 | c >> 6 & 63);
			a.push(128 | c & 63);
		} else {
			a.push(240 | c >> 18);
			a.push(128 | c >> 12 & 63);
			a.push(128 | c >> 6 & 63);
			a.push(128 | c & 63);
		}
	}
	return new haxe_io_Bytes(new Uint8Array(a).buffer);
};
haxe_io_Bytes.ofData = function(b) {
	var hb = b.hxBytes;
	if(hb != null) {
		return hb;
	}
	return new haxe_io_Bytes(b);
};
haxe_io_Bytes.fastGet = function(b,pos) {
	return b.bytes[pos];
};
haxe_io_Bytes.prototype = {
	length: null
	,b: null
	,data: null
	,get: function(pos) {
		return this.b[pos];
	}
	,set: function(pos,v) {
		this.b[pos] = v & 255;
	}
	,blit: function(pos,src,srcpos,len) {
		if(pos < 0 || srcpos < 0 || len < 0 || pos + len > this.length || srcpos + len > src.length) {
			throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		}
		if(srcpos == 0 && len == src.b.byteLength) {
			this.b.set(src.b,pos);
		} else {
			this.b.set(src.b.subarray(srcpos,srcpos + len),pos);
		}
	}
	,fill: function(pos,len,value) {
		var _g1 = 0;
		var _g = len;
		while(_g1 < _g) {
			var i = _g1++;
			this.b[pos++] = value & 255;
		}
	}
	,sub: function(pos,len) {
		if(pos < 0 || len < 0 || pos + len > this.length) {
			throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		}
		return new haxe_io_Bytes(this.b.buffer.slice(pos + this.b.byteOffset,pos + this.b.byteOffset + len));
	}
	,compare: function(other) {
		var b1 = this.b;
		var b2 = other.b;
		var len = this.length < other.length ? this.length : other.length;
		var _g1 = 0;
		var _g = len;
		while(_g1 < _g) {
			var i = _g1++;
			if(b1[i] != b2[i]) {
				return b1[i] - b2[i];
			}
		}
		return this.length - other.length;
	}
	,initData: function() {
		if(this.data == null) {
			this.data = new DataView(this.b.buffer,this.b.byteOffset,this.b.byteLength);
		}
	}
	,getDouble: function(pos) {
		if(this.data == null) {
			this.data = new DataView(this.b.buffer,this.b.byteOffset,this.b.byteLength);
		}
		return this.data.getFloat64(pos,true);
	}
	,getFloat: function(pos) {
		if(this.data == null) {
			this.data = new DataView(this.b.buffer,this.b.byteOffset,this.b.byteLength);
		}
		return this.data.getFloat32(pos,true);
	}
	,setDouble: function(pos,v) {
		if(this.data == null) {
			this.data = new DataView(this.b.buffer,this.b.byteOffset,this.b.byteLength);
		}
		this.data.setFloat64(pos,v,true);
	}
	,setFloat: function(pos,v) {
		if(this.data == null) {
			this.data = new DataView(this.b.buffer,this.b.byteOffset,this.b.byteLength);
		}
		this.data.setFloat32(pos,v,true);
	}
	,getUInt16: function(pos) {
		if(this.data == null) {
			this.data = new DataView(this.b.buffer,this.b.byteOffset,this.b.byteLength);
		}
		return this.data.getUint16(pos,true);
	}
	,setUInt16: function(pos,v) {
		if(this.data == null) {
			this.data = new DataView(this.b.buffer,this.b.byteOffset,this.b.byteLength);
		}
		this.data.setUint16(pos,v,true);
	}
	,getInt32: function(pos) {
		if(this.data == null) {
			this.data = new DataView(this.b.buffer,this.b.byteOffset,this.b.byteLength);
		}
		return this.data.getInt32(pos,true);
	}
	,setInt32: function(pos,v) {
		if(this.data == null) {
			this.data = new DataView(this.b.buffer,this.b.byteOffset,this.b.byteLength);
		}
		this.data.setInt32(pos,v,true);
	}
	,getInt64: function(pos) {
		var this1 = new haxe__$Int64__$_$_$Int64(this.getInt32(pos + 4),this.getInt32(pos));
		return this1;
	}
	,setInt64: function(pos,v) {
		this.setInt32(pos,v.low);
		this.setInt32(pos + 4,v.high);
	}
	,getString: function(pos,len) {
		if(pos < 0 || len < 0 || pos + len > this.length) {
			throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		}
		var s = "";
		var b = this.b;
		var fcc = String.fromCharCode;
		var i = pos;
		var max = pos + len;
		while(i < max) {
			var c = b[i++];
			if(c < 128) {
				if(c == 0) {
					break;
				}
				s += fcc(c);
			} else if(c < 224) {
				s += fcc((c & 63) << 6 | b[i++] & 127);
			} else if(c < 240) {
				var c2 = b[i++];
				s += fcc((c & 31) << 12 | (c2 & 127) << 6 | b[i++] & 127);
			} else {
				var c21 = b[i++];
				var c3 = b[i++];
				var u = (c & 15) << 18 | (c21 & 127) << 12 | (c3 & 127) << 6 | b[i++] & 127;
				s += fcc((u >> 10) + 55232);
				s += fcc(u & 1023 | 56320);
			}
		}
		return s;
	}
	,readString: function(pos,len) {
		return this.getString(pos,len);
	}
	,toString: function() {
		return this.getString(0,this.length);
	}
	,toHex: function() {
		var s_b = "";
		var chars = [];
		var str = "0123456789abcdef";
		var _g1 = 0;
		var _g = str.length;
		while(_g1 < _g) {
			var i = _g1++;
			chars.push(HxOverrides.cca(str,i));
		}
		var _g11 = 0;
		var _g2 = this.length;
		while(_g11 < _g2) {
			var i1 = _g11++;
			var c = this.b[i1];
			s_b += String.fromCharCode(chars[c >> 4]);
			s_b += String.fromCharCode(chars[c & 15]);
		}
		return s_b;
	}
	,getData: function() {
		return this.b.bufferValue;
	}
	,__class__: haxe_io_Bytes
};
var haxe_io_Error = $hxClasses["haxe.io.Error"] = { __ename__ : ["haxe","io","Error"], __constructs__ : ["Blocked","Overflow","OutsideBounds","Custom"] };
haxe_io_Error.Blocked = ["Blocked",0];
haxe_io_Error.Blocked.toString = $estr;
haxe_io_Error.Blocked.__enum__ = haxe_io_Error;
haxe_io_Error.Overflow = ["Overflow",1];
haxe_io_Error.Overflow.toString = $estr;
haxe_io_Error.Overflow.__enum__ = haxe_io_Error;
haxe_io_Error.OutsideBounds = ["OutsideBounds",2];
haxe_io_Error.OutsideBounds.toString = $estr;
haxe_io_Error.OutsideBounds.__enum__ = haxe_io_Error;
haxe_io_Error.Custom = function(e) { var $x = ["Custom",3,e]; $x.__enum__ = haxe_io_Error; $x.toString = $estr; return $x; };
haxe_io_Error.__empty_constructs__ = [haxe_io_Error.Blocked,haxe_io_Error.Overflow,haxe_io_Error.OutsideBounds];
var haxe_io_FPHelper = function() { };
$hxClasses["haxe.io.FPHelper"] = haxe_io_FPHelper;
haxe_io_FPHelper.__name__ = ["haxe","io","FPHelper"];
haxe_io_FPHelper.i32ToFloat = function(i) {
	var sign = 1 - (i >>> 31 << 1);
	var exp = i >>> 23 & 255;
	var sig = i & 8388607;
	if(sig == 0 && exp == 0) {
		return 0.0;
	}
	return sign * (1 + Math.pow(2,-23) * sig) * Math.pow(2,exp - 127);
};
haxe_io_FPHelper.floatToI32 = function(f) {
	if(f == 0) {
		return 0;
	}
	var af = f < 0 ? -f : f;
	var exp = Math.floor(Math.log(af) / 0.6931471805599453);
	if(exp < -127) {
		exp = -127;
	} else if(exp > 128) {
		exp = 128;
	}
	var sig = Math.round((af / Math.pow(2,exp) - 1) * 8388608);
	if(sig == 8388608 && exp < 128) {
		sig = 0;
		++exp;
	}
	return (f < 0 ? -2147483648 : 0) | exp + 127 << 23 | sig;
};
haxe_io_FPHelper.i64ToDouble = function(low,high) {
	var sign = 1 - (high >>> 31 << 1);
	var exp = (high >> 20 & 2047) - 1023;
	var sig = (high & 1048575) * 4294967296. + (low >>> 31) * 2147483648. + (low & 2147483647);
	if(sig == 0 && exp == -1023) {
		return 0.0;
	}
	return sign * (1.0 + Math.pow(2,-52) * sig) * Math.pow(2,exp);
};
haxe_io_FPHelper.doubleToI64 = function(v) {
	var i64 = haxe_io_FPHelper.i64tmp;
	if(v == 0) {
		i64.low = 0;
		i64.high = 0;
	} else if(!isFinite(v)) {
		if(v > 0) {
			i64.low = 0;
			i64.high = 2146435072;
		} else {
			i64.low = 0;
			i64.high = -1048576;
		}
	} else {
		var av = v < 0 ? -v : v;
		var exp = Math.floor(Math.log(av) / 0.6931471805599453);
		var sig = Math.round((av / Math.pow(2,exp) - 1) * 4503599627370496.);
		var sig_l = sig | 0;
		var sig_h = sig / 4294967296.0 | 0;
		i64.low = sig_l;
		i64.high = (v < 0 ? -2147483648 : 0) | exp + 1023 << 20 | sig_h;
	}
	return i64;
};
var haxe_macro_ComplexTypeTools = function() { };
$hxClasses["haxe.macro.ComplexTypeTools"] = haxe_macro_ComplexTypeTools;
haxe_macro_ComplexTypeTools.__name__ = ["haxe","macro","ComplexTypeTools"];
haxe_macro_ComplexTypeTools.toString = function(c) {
	return new haxe_macro_Printer().printComplexType(c);
};
var haxe_macro_Context = function() { };
$hxClasses["haxe.macro.Context"] = haxe_macro_Context;
haxe_macro_Context.__name__ = ["haxe","macro","Context"];
var haxe_macro_Constant = $hxClasses["haxe.macro.Constant"] = { __ename__ : ["haxe","macro","Constant"], __constructs__ : ["CInt","CFloat","CString","CIdent","CRegexp"] };
haxe_macro_Constant.CInt = function(v) { var $x = ["CInt",0,v]; $x.__enum__ = haxe_macro_Constant; $x.toString = $estr; return $x; };
haxe_macro_Constant.CFloat = function(f) { var $x = ["CFloat",1,f]; $x.__enum__ = haxe_macro_Constant; $x.toString = $estr; return $x; };
haxe_macro_Constant.CString = function(s) { var $x = ["CString",2,s]; $x.__enum__ = haxe_macro_Constant; $x.toString = $estr; return $x; };
haxe_macro_Constant.CIdent = function(s) { var $x = ["CIdent",3,s]; $x.__enum__ = haxe_macro_Constant; $x.toString = $estr; return $x; };
haxe_macro_Constant.CRegexp = function(r,opt) { var $x = ["CRegexp",4,r,opt]; $x.__enum__ = haxe_macro_Constant; $x.toString = $estr; return $x; };
haxe_macro_Constant.__empty_constructs__ = [];
var haxe_macro_Binop = $hxClasses["haxe.macro.Binop"] = { __ename__ : ["haxe","macro","Binop"], __constructs__ : ["OpAdd","OpMult","OpDiv","OpSub","OpAssign","OpEq","OpNotEq","OpGt","OpGte","OpLt","OpLte","OpAnd","OpOr","OpXor","OpBoolAnd","OpBoolOr","OpShl","OpShr","OpUShr","OpMod","OpAssignOp","OpInterval","OpArrow"] };
haxe_macro_Binop.OpAdd = ["OpAdd",0];
haxe_macro_Binop.OpAdd.toString = $estr;
haxe_macro_Binop.OpAdd.__enum__ = haxe_macro_Binop;
haxe_macro_Binop.OpMult = ["OpMult",1];
haxe_macro_Binop.OpMult.toString = $estr;
haxe_macro_Binop.OpMult.__enum__ = haxe_macro_Binop;
haxe_macro_Binop.OpDiv = ["OpDiv",2];
haxe_macro_Binop.OpDiv.toString = $estr;
haxe_macro_Binop.OpDiv.__enum__ = haxe_macro_Binop;
haxe_macro_Binop.OpSub = ["OpSub",3];
haxe_macro_Binop.OpSub.toString = $estr;
haxe_macro_Binop.OpSub.__enum__ = haxe_macro_Binop;
haxe_macro_Binop.OpAssign = ["OpAssign",4];
haxe_macro_Binop.OpAssign.toString = $estr;
haxe_macro_Binop.OpAssign.__enum__ = haxe_macro_Binop;
haxe_macro_Binop.OpEq = ["OpEq",5];
haxe_macro_Binop.OpEq.toString = $estr;
haxe_macro_Binop.OpEq.__enum__ = haxe_macro_Binop;
haxe_macro_Binop.OpNotEq = ["OpNotEq",6];
haxe_macro_Binop.OpNotEq.toString = $estr;
haxe_macro_Binop.OpNotEq.__enum__ = haxe_macro_Binop;
haxe_macro_Binop.OpGt = ["OpGt",7];
haxe_macro_Binop.OpGt.toString = $estr;
haxe_macro_Binop.OpGt.__enum__ = haxe_macro_Binop;
haxe_macro_Binop.OpGte = ["OpGte",8];
haxe_macro_Binop.OpGte.toString = $estr;
haxe_macro_Binop.OpGte.__enum__ = haxe_macro_Binop;
haxe_macro_Binop.OpLt = ["OpLt",9];
haxe_macro_Binop.OpLt.toString = $estr;
haxe_macro_Binop.OpLt.__enum__ = haxe_macro_Binop;
haxe_macro_Binop.OpLte = ["OpLte",10];
haxe_macro_Binop.OpLte.toString = $estr;
haxe_macro_Binop.OpLte.__enum__ = haxe_macro_Binop;
haxe_macro_Binop.OpAnd = ["OpAnd",11];
haxe_macro_Binop.OpAnd.toString = $estr;
haxe_macro_Binop.OpAnd.__enum__ = haxe_macro_Binop;
haxe_macro_Binop.OpOr = ["OpOr",12];
haxe_macro_Binop.OpOr.toString = $estr;
haxe_macro_Binop.OpOr.__enum__ = haxe_macro_Binop;
haxe_macro_Binop.OpXor = ["OpXor",13];
haxe_macro_Binop.OpXor.toString = $estr;
haxe_macro_Binop.OpXor.__enum__ = haxe_macro_Binop;
haxe_macro_Binop.OpBoolAnd = ["OpBoolAnd",14];
haxe_macro_Binop.OpBoolAnd.toString = $estr;
haxe_macro_Binop.OpBoolAnd.__enum__ = haxe_macro_Binop;
haxe_macro_Binop.OpBoolOr = ["OpBoolOr",15];
haxe_macro_Binop.OpBoolOr.toString = $estr;
haxe_macro_Binop.OpBoolOr.__enum__ = haxe_macro_Binop;
haxe_macro_Binop.OpShl = ["OpShl",16];
haxe_macro_Binop.OpShl.toString = $estr;
haxe_macro_Binop.OpShl.__enum__ = haxe_macro_Binop;
haxe_macro_Binop.OpShr = ["OpShr",17];
haxe_macro_Binop.OpShr.toString = $estr;
haxe_macro_Binop.OpShr.__enum__ = haxe_macro_Binop;
haxe_macro_Binop.OpUShr = ["OpUShr",18];
haxe_macro_Binop.OpUShr.toString = $estr;
haxe_macro_Binop.OpUShr.__enum__ = haxe_macro_Binop;
haxe_macro_Binop.OpMod = ["OpMod",19];
haxe_macro_Binop.OpMod.toString = $estr;
haxe_macro_Binop.OpMod.__enum__ = haxe_macro_Binop;
haxe_macro_Binop.OpAssignOp = function(op) { var $x = ["OpAssignOp",20,op]; $x.__enum__ = haxe_macro_Binop; $x.toString = $estr; return $x; };
haxe_macro_Binop.OpInterval = ["OpInterval",21];
haxe_macro_Binop.OpInterval.toString = $estr;
haxe_macro_Binop.OpInterval.__enum__ = haxe_macro_Binop;
haxe_macro_Binop.OpArrow = ["OpArrow",22];
haxe_macro_Binop.OpArrow.toString = $estr;
haxe_macro_Binop.OpArrow.__enum__ = haxe_macro_Binop;
haxe_macro_Binop.__empty_constructs__ = [haxe_macro_Binop.OpAdd,haxe_macro_Binop.OpMult,haxe_macro_Binop.OpDiv,haxe_macro_Binop.OpSub,haxe_macro_Binop.OpAssign,haxe_macro_Binop.OpEq,haxe_macro_Binop.OpNotEq,haxe_macro_Binop.OpGt,haxe_macro_Binop.OpGte,haxe_macro_Binop.OpLt,haxe_macro_Binop.OpLte,haxe_macro_Binop.OpAnd,haxe_macro_Binop.OpOr,haxe_macro_Binop.OpXor,haxe_macro_Binop.OpBoolAnd,haxe_macro_Binop.OpBoolOr,haxe_macro_Binop.OpShl,haxe_macro_Binop.OpShr,haxe_macro_Binop.OpUShr,haxe_macro_Binop.OpMod,haxe_macro_Binop.OpInterval,haxe_macro_Binop.OpArrow];
var haxe_macro_Unop = $hxClasses["haxe.macro.Unop"] = { __ename__ : ["haxe","macro","Unop"], __constructs__ : ["OpIncrement","OpDecrement","OpNot","OpNeg","OpNegBits"] };
haxe_macro_Unop.OpIncrement = ["OpIncrement",0];
haxe_macro_Unop.OpIncrement.toString = $estr;
haxe_macro_Unop.OpIncrement.__enum__ = haxe_macro_Unop;
haxe_macro_Unop.OpDecrement = ["OpDecrement",1];
haxe_macro_Unop.OpDecrement.toString = $estr;
haxe_macro_Unop.OpDecrement.__enum__ = haxe_macro_Unop;
haxe_macro_Unop.OpNot = ["OpNot",2];
haxe_macro_Unop.OpNot.toString = $estr;
haxe_macro_Unop.OpNot.__enum__ = haxe_macro_Unop;
haxe_macro_Unop.OpNeg = ["OpNeg",3];
haxe_macro_Unop.OpNeg.toString = $estr;
haxe_macro_Unop.OpNeg.__enum__ = haxe_macro_Unop;
haxe_macro_Unop.OpNegBits = ["OpNegBits",4];
haxe_macro_Unop.OpNegBits.toString = $estr;
haxe_macro_Unop.OpNegBits.__enum__ = haxe_macro_Unop;
haxe_macro_Unop.__empty_constructs__ = [haxe_macro_Unop.OpIncrement,haxe_macro_Unop.OpDecrement,haxe_macro_Unop.OpNot,haxe_macro_Unop.OpNeg,haxe_macro_Unop.OpNegBits];
var haxe_macro_ExprDef = $hxClasses["haxe.macro.ExprDef"] = { __ename__ : ["haxe","macro","ExprDef"], __constructs__ : ["EConst","EArray","EBinop","EField","EParenthesis","EObjectDecl","EArrayDecl","ECall","ENew","EUnop","EVars","EFunction","EBlock","EFor","EIn","EIf","EWhile","ESwitch","ETry","EReturn","EBreak","EContinue","EUntyped","EThrow","ECast","EDisplay","EDisplayNew","ETernary","ECheckType","EMeta"] };
haxe_macro_ExprDef.EConst = function(c) { var $x = ["EConst",0,c]; $x.__enum__ = haxe_macro_ExprDef; $x.toString = $estr; return $x; };
haxe_macro_ExprDef.EArray = function(e1,e2) { var $x = ["EArray",1,e1,e2]; $x.__enum__ = haxe_macro_ExprDef; $x.toString = $estr; return $x; };
haxe_macro_ExprDef.EBinop = function(op,e1,e2) { var $x = ["EBinop",2,op,e1,e2]; $x.__enum__ = haxe_macro_ExprDef; $x.toString = $estr; return $x; };
haxe_macro_ExprDef.EField = function(e,field) { var $x = ["EField",3,e,field]; $x.__enum__ = haxe_macro_ExprDef; $x.toString = $estr; return $x; };
haxe_macro_ExprDef.EParenthesis = function(e) { var $x = ["EParenthesis",4,e]; $x.__enum__ = haxe_macro_ExprDef; $x.toString = $estr; return $x; };
haxe_macro_ExprDef.EObjectDecl = function(fields) { var $x = ["EObjectDecl",5,fields]; $x.__enum__ = haxe_macro_ExprDef; $x.toString = $estr; return $x; };
haxe_macro_ExprDef.EArrayDecl = function(values) { var $x = ["EArrayDecl",6,values]; $x.__enum__ = haxe_macro_ExprDef; $x.toString = $estr; return $x; };
haxe_macro_ExprDef.ECall = function(e,params) { var $x = ["ECall",7,e,params]; $x.__enum__ = haxe_macro_ExprDef; $x.toString = $estr; return $x; };
haxe_macro_ExprDef.ENew = function(t,params) { var $x = ["ENew",8,t,params]; $x.__enum__ = haxe_macro_ExprDef; $x.toString = $estr; return $x; };
haxe_macro_ExprDef.EUnop = function(op,postFix,e) { var $x = ["EUnop",9,op,postFix,e]; $x.__enum__ = haxe_macro_ExprDef; $x.toString = $estr; return $x; };
haxe_macro_ExprDef.EVars = function(vars) { var $x = ["EVars",10,vars]; $x.__enum__ = haxe_macro_ExprDef; $x.toString = $estr; return $x; };
haxe_macro_ExprDef.EFunction = function(name,f) { var $x = ["EFunction",11,name,f]; $x.__enum__ = haxe_macro_ExprDef; $x.toString = $estr; return $x; };
haxe_macro_ExprDef.EBlock = function(exprs) { var $x = ["EBlock",12,exprs]; $x.__enum__ = haxe_macro_ExprDef; $x.toString = $estr; return $x; };
haxe_macro_ExprDef.EFor = function(it,expr) { var $x = ["EFor",13,it,expr]; $x.__enum__ = haxe_macro_ExprDef; $x.toString = $estr; return $x; };
haxe_macro_ExprDef.EIn = function(e1,e2) { var $x = ["EIn",14,e1,e2]; $x.__enum__ = haxe_macro_ExprDef; $x.toString = $estr; return $x; };
haxe_macro_ExprDef.EIf = function(econd,eif,eelse) { var $x = ["EIf",15,econd,eif,eelse]; $x.__enum__ = haxe_macro_ExprDef; $x.toString = $estr; return $x; };
haxe_macro_ExprDef.EWhile = function(econd,e,normalWhile) { var $x = ["EWhile",16,econd,e,normalWhile]; $x.__enum__ = haxe_macro_ExprDef; $x.toString = $estr; return $x; };
haxe_macro_ExprDef.ESwitch = function(e,cases,edef) { var $x = ["ESwitch",17,e,cases,edef]; $x.__enum__ = haxe_macro_ExprDef; $x.toString = $estr; return $x; };
haxe_macro_ExprDef.ETry = function(e,catches) { var $x = ["ETry",18,e,catches]; $x.__enum__ = haxe_macro_ExprDef; $x.toString = $estr; return $x; };
haxe_macro_ExprDef.EReturn = function(e) { var $x = ["EReturn",19,e]; $x.__enum__ = haxe_macro_ExprDef; $x.toString = $estr; return $x; };
haxe_macro_ExprDef.EBreak = ["EBreak",20];
haxe_macro_ExprDef.EBreak.toString = $estr;
haxe_macro_ExprDef.EBreak.__enum__ = haxe_macro_ExprDef;
haxe_macro_ExprDef.EContinue = ["EContinue",21];
haxe_macro_ExprDef.EContinue.toString = $estr;
haxe_macro_ExprDef.EContinue.__enum__ = haxe_macro_ExprDef;
haxe_macro_ExprDef.EUntyped = function(e) { var $x = ["EUntyped",22,e]; $x.__enum__ = haxe_macro_ExprDef; $x.toString = $estr; return $x; };
haxe_macro_ExprDef.EThrow = function(e) { var $x = ["EThrow",23,e]; $x.__enum__ = haxe_macro_ExprDef; $x.toString = $estr; return $x; };
haxe_macro_ExprDef.ECast = function(e,t) { var $x = ["ECast",24,e,t]; $x.__enum__ = haxe_macro_ExprDef; $x.toString = $estr; return $x; };
haxe_macro_ExprDef.EDisplay = function(e,isCall) { var $x = ["EDisplay",25,e,isCall]; $x.__enum__ = haxe_macro_ExprDef; $x.toString = $estr; return $x; };
haxe_macro_ExprDef.EDisplayNew = function(t) { var $x = ["EDisplayNew",26,t]; $x.__enum__ = haxe_macro_ExprDef; $x.toString = $estr; return $x; };
haxe_macro_ExprDef.ETernary = function(econd,eif,eelse) { var $x = ["ETernary",27,econd,eif,eelse]; $x.__enum__ = haxe_macro_ExprDef; $x.toString = $estr; return $x; };
haxe_macro_ExprDef.ECheckType = function(e,t) { var $x = ["ECheckType",28,e,t]; $x.__enum__ = haxe_macro_ExprDef; $x.toString = $estr; return $x; };
haxe_macro_ExprDef.EMeta = function(s,e) { var $x = ["EMeta",29,s,e]; $x.__enum__ = haxe_macro_ExprDef; $x.toString = $estr; return $x; };
haxe_macro_ExprDef.__empty_constructs__ = [haxe_macro_ExprDef.EBreak,haxe_macro_ExprDef.EContinue];
var haxe_macro_ComplexType = $hxClasses["haxe.macro.ComplexType"] = { __ename__ : ["haxe","macro","ComplexType"], __constructs__ : ["TPath","TFunction","TAnonymous","TParent","TExtend","TOptional"] };
haxe_macro_ComplexType.TPath = function(p) { var $x = ["TPath",0,p]; $x.__enum__ = haxe_macro_ComplexType; $x.toString = $estr; return $x; };
haxe_macro_ComplexType.TFunction = function(args,ret) { var $x = ["TFunction",1,args,ret]; $x.__enum__ = haxe_macro_ComplexType; $x.toString = $estr; return $x; };
haxe_macro_ComplexType.TAnonymous = function(fields) { var $x = ["TAnonymous",2,fields]; $x.__enum__ = haxe_macro_ComplexType; $x.toString = $estr; return $x; };
haxe_macro_ComplexType.TParent = function(t) { var $x = ["TParent",3,t]; $x.__enum__ = haxe_macro_ComplexType; $x.toString = $estr; return $x; };
haxe_macro_ComplexType.TExtend = function(p,fields) { var $x = ["TExtend",4,p,fields]; $x.__enum__ = haxe_macro_ComplexType; $x.toString = $estr; return $x; };
haxe_macro_ComplexType.TOptional = function(t) { var $x = ["TOptional",5,t]; $x.__enum__ = haxe_macro_ComplexType; $x.toString = $estr; return $x; };
haxe_macro_ComplexType.__empty_constructs__ = [];
var haxe_macro_TypeParam = $hxClasses["haxe.macro.TypeParam"] = { __ename__ : ["haxe","macro","TypeParam"], __constructs__ : ["TPType","TPExpr"] };
haxe_macro_TypeParam.TPType = function(t) { var $x = ["TPType",0,t]; $x.__enum__ = haxe_macro_TypeParam; $x.toString = $estr; return $x; };
haxe_macro_TypeParam.TPExpr = function(e) { var $x = ["TPExpr",1,e]; $x.__enum__ = haxe_macro_TypeParam; $x.toString = $estr; return $x; };
haxe_macro_TypeParam.__empty_constructs__ = [];
var haxe_macro_Access = $hxClasses["haxe.macro.Access"] = { __ename__ : ["haxe","macro","Access"], __constructs__ : ["APublic","APrivate","AStatic","AOverride","ADynamic","AInline","AMacro"] };
haxe_macro_Access.APublic = ["APublic",0];
haxe_macro_Access.APublic.toString = $estr;
haxe_macro_Access.APublic.__enum__ = haxe_macro_Access;
haxe_macro_Access.APrivate = ["APrivate",1];
haxe_macro_Access.APrivate.toString = $estr;
haxe_macro_Access.APrivate.__enum__ = haxe_macro_Access;
haxe_macro_Access.AStatic = ["AStatic",2];
haxe_macro_Access.AStatic.toString = $estr;
haxe_macro_Access.AStatic.__enum__ = haxe_macro_Access;
haxe_macro_Access.AOverride = ["AOverride",3];
haxe_macro_Access.AOverride.toString = $estr;
haxe_macro_Access.AOverride.__enum__ = haxe_macro_Access;
haxe_macro_Access.ADynamic = ["ADynamic",4];
haxe_macro_Access.ADynamic.toString = $estr;
haxe_macro_Access.ADynamic.__enum__ = haxe_macro_Access;
haxe_macro_Access.AInline = ["AInline",5];
haxe_macro_Access.AInline.toString = $estr;
haxe_macro_Access.AInline.__enum__ = haxe_macro_Access;
haxe_macro_Access.AMacro = ["AMacro",6];
haxe_macro_Access.AMacro.toString = $estr;
haxe_macro_Access.AMacro.__enum__ = haxe_macro_Access;
haxe_macro_Access.__empty_constructs__ = [haxe_macro_Access.APublic,haxe_macro_Access.APrivate,haxe_macro_Access.AStatic,haxe_macro_Access.AOverride,haxe_macro_Access.ADynamic,haxe_macro_Access.AInline,haxe_macro_Access.AMacro];
var haxe_macro_FieldType = $hxClasses["haxe.macro.FieldType"] = { __ename__ : ["haxe","macro","FieldType"], __constructs__ : ["FVar","FFun","FProp"] };
haxe_macro_FieldType.FVar = function(t,e) { var $x = ["FVar",0,t,e]; $x.__enum__ = haxe_macro_FieldType; $x.toString = $estr; return $x; };
haxe_macro_FieldType.FFun = function(f) { var $x = ["FFun",1,f]; $x.__enum__ = haxe_macro_FieldType; $x.toString = $estr; return $x; };
haxe_macro_FieldType.FProp = function(get,set,t,e) { var $x = ["FProp",2,get,set,t,e]; $x.__enum__ = haxe_macro_FieldType; $x.toString = $estr; return $x; };
haxe_macro_FieldType.__empty_constructs__ = [];
var haxe_macro_TypeDefKind = $hxClasses["haxe.macro.TypeDefKind"] = { __ename__ : ["haxe","macro","TypeDefKind"], __constructs__ : ["TDEnum","TDStructure","TDClass","TDAlias","TDAbstract"] };
haxe_macro_TypeDefKind.TDEnum = ["TDEnum",0];
haxe_macro_TypeDefKind.TDEnum.toString = $estr;
haxe_macro_TypeDefKind.TDEnum.__enum__ = haxe_macro_TypeDefKind;
haxe_macro_TypeDefKind.TDStructure = ["TDStructure",1];
haxe_macro_TypeDefKind.TDStructure.toString = $estr;
haxe_macro_TypeDefKind.TDStructure.__enum__ = haxe_macro_TypeDefKind;
haxe_macro_TypeDefKind.TDClass = function(superClass,interfaces,isInterface) { var $x = ["TDClass",2,superClass,interfaces,isInterface]; $x.__enum__ = haxe_macro_TypeDefKind; $x.toString = $estr; return $x; };
haxe_macro_TypeDefKind.TDAlias = function(t) { var $x = ["TDAlias",3,t]; $x.__enum__ = haxe_macro_TypeDefKind; $x.toString = $estr; return $x; };
haxe_macro_TypeDefKind.TDAbstract = function(tthis,from,to) { var $x = ["TDAbstract",4,tthis,from,to]; $x.__enum__ = haxe_macro_TypeDefKind; $x.toString = $estr; return $x; };
haxe_macro_TypeDefKind.__empty_constructs__ = [haxe_macro_TypeDefKind.TDEnum,haxe_macro_TypeDefKind.TDStructure];
var haxe_macro_Error = function(m,p) {
	this.message = m;
	this.pos = p;
};
$hxClasses["haxe.macro.Error"] = haxe_macro_Error;
haxe_macro_Error.__name__ = ["haxe","macro","Error"];
haxe_macro_Error.prototype = {
	message: null
	,pos: null
	,toString: function() {
		return this.message;
	}
	,__class__: haxe_macro_Error
};
var haxe_macro_ImportMode = $hxClasses["haxe.macro.ImportMode"] = { __ename__ : ["haxe","macro","ImportMode"], __constructs__ : ["INormal","IAsName","IAll"] };
haxe_macro_ImportMode.INormal = ["INormal",0];
haxe_macro_ImportMode.INormal.toString = $estr;
haxe_macro_ImportMode.INormal.__enum__ = haxe_macro_ImportMode;
haxe_macro_ImportMode.IAsName = function(alias) { var $x = ["IAsName",1,alias]; $x.__enum__ = haxe_macro_ImportMode; $x.toString = $estr; return $x; };
haxe_macro_ImportMode.IAll = ["IAll",2];
haxe_macro_ImportMode.IAll.toString = $estr;
haxe_macro_ImportMode.IAll.__enum__ = haxe_macro_ImportMode;
haxe_macro_ImportMode.__empty_constructs__ = [haxe_macro_ImportMode.INormal,haxe_macro_ImportMode.IAll];
var haxe_macro_ExprTools = function() { };
$hxClasses["haxe.macro.ExprTools"] = haxe_macro_ExprTools;
haxe_macro_ExprTools.__name__ = ["haxe","macro","ExprTools"];
haxe_macro_ExprTools.toString = function(e) {
	return new haxe_macro_Printer().printExpr(e);
};
haxe_macro_ExprTools.iter = function(e,f) {
	var _g = e.expr;
	switch(_g[1]) {
	case 1:
		var e2 = _g[3];
		var e1 = _g[2];
		f(e1);
		f(e2);
		break;
	case 2:
		var e21 = _g[4];
		var e11 = _g[3];
		f(e11);
		f(e21);
		break;
	case 3:
		var e3 = _g[2];
		f(e3);
		break;
	case 4:
		var e4 = _g[2];
		f(e4);
		break;
	case 5:
		var fl = _g[2];
		var _g1 = 0;
		while(_g1 < fl.length) {
			var fd = fl[_g1];
			++_g1;
			f(fd.expr);
		}
		break;
	case 6:
		var el = _g[2];
		haxe_macro_ExprArrayTools.iter(el,f);
		break;
	case 7:
		var el1 = _g[3];
		var e5 = _g[2];
		f(e5);
		haxe_macro_ExprArrayTools.iter(el1,f);
		break;
	case 8:
		var el2 = _g[3];
		haxe_macro_ExprArrayTools.iter(el2,f);
		break;
	case 9:
		var e6 = _g[4];
		f(e6);
		break;
	case 10:
		var vl = _g[2];
		var _g2 = 0;
		while(_g2 < vl.length) {
			var v = vl[_g2];
			++_g2;
			var e7 = v.expr;
			if(e7 != null) {
				f(e7);
			}
		}
		break;
	case 11:
		var func = _g[3];
		var _g3 = 0;
		var _g11 = func.args;
		while(_g3 < _g11.length) {
			var arg = _g11[_g3];
			++_g3;
			var e8 = arg.value;
			if(e8 != null) {
				f(e8);
			}
		}
		var e9 = func.expr;
		if(e9 != null) {
			f(e9);
		}
		break;
	case 12:
		var el3 = _g[2];
		haxe_macro_ExprArrayTools.iter(el3,f);
		break;
	case 13:
		var e22 = _g[3];
		var e12 = _g[2];
		f(e12);
		f(e22);
		break;
	case 14:
		var e23 = _g[3];
		var e13 = _g[2];
		f(e13);
		f(e23);
		break;
	case 15:
		var e31 = _g[4];
		var e24 = _g[3];
		var e14 = _g[2];
		f(e14);
		f(e24);
		if(e31 != null) {
			f(e31);
		}
		break;
	case 16:
		var e25 = _g[3];
		var e15 = _g[2];
		f(e15);
		f(e25);
		break;
	case 17:
		var edef = _g[4];
		var cl = _g[3];
		var e10 = _g[2];
		f(e10);
		var _g4 = 0;
		while(_g4 < cl.length) {
			var c = cl[_g4];
			++_g4;
			haxe_macro_ExprArrayTools.iter(c.values,f);
			var e16 = c.guard;
			if(e16 != null) {
				f(e16);
			}
			var e17 = c.expr;
			if(e17 != null) {
				f(e17);
			}
		}
		if(edef != null && edef.expr != null) {
			f(edef);
		}
		break;
	case 18:
		var cl1 = _g[3];
		var e18 = _g[2];
		f(e18);
		var _g5 = 0;
		while(_g5 < cl1.length) {
			var c1 = cl1[_g5];
			++_g5;
			f(c1.expr);
		}
		break;
	case 19:
		var e19 = _g[2];
		if(e19 != null) {
			f(e19);
		}
		break;
	case 0:case 20:case 21:case 26:
		break;
	case 22:
		var e20 = _g[2];
		f(e20);
		break;
	case 23:
		var e26 = _g[2];
		f(e26);
		break;
	case 24:
		var e27 = _g[2];
		f(e27);
		break;
	case 25:
		var e28 = _g[2];
		f(e28);
		break;
	case 27:
		var e32 = _g[4];
		var e29 = _g[3];
		var e110 = _g[2];
		f(e110);
		f(e29);
		if(e32 != null) {
			f(e32);
		}
		break;
	case 28:
		var e30 = _g[2];
		f(e30);
		break;
	case 29:
		var e33 = _g[3];
		f(e33);
		break;
	}
};
haxe_macro_ExprTools.map = function(e,f) {
	var e1 = e.pos;
	var _g = e.expr;
	var tmp;
	switch(_g[1]) {
	case 0:
		tmp = e.expr;
		break;
	case 1:
		var e2 = _g[3];
		var e11 = _g[2];
		tmp = haxe_macro_ExprDef.EArray(f(e11),f(e2));
		break;
	case 2:
		var e21 = _g[4];
		var e12 = _g[3];
		var op = _g[2];
		tmp = haxe_macro_ExprDef.EBinop(op,f(e12),f(e21));
		break;
	case 3:
		var field = _g[3];
		var e3 = _g[2];
		tmp = haxe_macro_ExprDef.EField(f(e3),field);
		break;
	case 4:
		var e4 = _g[2];
		tmp = haxe_macro_ExprDef.EParenthesis(f(e4));
		break;
	case 5:
		var fields = _g[2];
		var ret = [];
		var _g1 = 0;
		while(_g1 < fields.length) {
			var field1 = fields[_g1];
			++_g1;
			ret.push({ field : field1.field, expr : f(field1.expr)});
		}
		tmp = haxe_macro_ExprDef.EObjectDecl(ret);
		break;
	case 6:
		var el = _g[2];
		tmp = haxe_macro_ExprDef.EArrayDecl(haxe_macro_ExprArrayTools.map(el,f));
		break;
	case 7:
		var params = _g[3];
		var e5 = _g[2];
		tmp = haxe_macro_ExprDef.ECall(f(e5),haxe_macro_ExprArrayTools.map(params,f));
		break;
	case 8:
		var params1 = _g[3];
		var tp = _g[2];
		tmp = haxe_macro_ExprDef.ENew(tp,haxe_macro_ExprArrayTools.map(params1,f));
		break;
	case 9:
		var e6 = _g[4];
		var postFix = _g[3];
		var op1 = _g[2];
		tmp = haxe_macro_ExprDef.EUnop(op1,postFix,f(e6));
		break;
	case 10:
		var vars = _g[2];
		var ret1 = [];
		var _g2 = 0;
		while(_g2 < vars.length) {
			var v = vars[_g2];
			++_g2;
			var e7 = v.expr;
			ret1.push({ name : v.name, type : v.type, expr : e7 == null ? null : f(e7)});
		}
		tmp = haxe_macro_ExprDef.EVars(ret1);
		break;
	case 11:
		var func = _g[3];
		var name = _g[2];
		var ret2 = [];
		var _g3 = 0;
		var _g11 = func.args;
		while(_g3 < _g11.length) {
			var arg = _g11[_g3];
			++_g3;
			var e8 = arg.value;
			ret2.push({ name : arg.name, opt : arg.opt, type : arg.type, value : e8 == null ? null : f(e8)});
		}
		tmp = haxe_macro_ExprDef.EFunction(name,{ args : ret2, ret : func.ret, params : func.params, expr : f(func.expr)});
		break;
	case 12:
		var el1 = _g[2];
		tmp = haxe_macro_ExprDef.EBlock(haxe_macro_ExprArrayTools.map(el1,f));
		break;
	case 13:
		var expr = _g[3];
		var it = _g[2];
		tmp = haxe_macro_ExprDef.EFor(f(it),f(expr));
		break;
	case 14:
		var e22 = _g[3];
		var e13 = _g[2];
		tmp = haxe_macro_ExprDef.EIn(f(e13),f(e22));
		break;
	case 15:
		var eelse = _g[4];
		var eif = _g[3];
		var econd = _g[2];
		tmp = haxe_macro_ExprDef.EIf(f(econd),f(eif),eelse == null ? null : f(eelse));
		break;
	case 16:
		var normalWhile = _g[4];
		var e9 = _g[3];
		var econd1 = _g[2];
		tmp = haxe_macro_ExprDef.EWhile(f(econd1),f(e9),normalWhile);
		break;
	case 17:
		var edef = _g[4];
		var cases = _g[3];
		var e10 = _g[2];
		var ret3 = [];
		var _g4 = 0;
		while(_g4 < cases.length) {
			var c = cases[_g4];
			++_g4;
			var e14 = c.expr;
			var tmp1 = e14 == null ? null : f(e14);
			var e15 = c.guard;
			ret3.push({ expr : tmp1, guard : e15 == null ? null : f(e15), values : haxe_macro_ExprArrayTools.map(c.values,f)});
		}
		tmp = haxe_macro_ExprDef.ESwitch(f(e10),ret3,edef == null || edef.expr == null ? edef : f(edef));
		break;
	case 18:
		var catches = _g[3];
		var e16 = _g[2];
		var ret4 = [];
		var _g5 = 0;
		while(_g5 < catches.length) {
			var c1 = catches[_g5];
			++_g5;
			ret4.push({ name : c1.name, type : c1.type, expr : f(c1.expr)});
		}
		tmp = haxe_macro_ExprDef.ETry(f(e16),ret4);
		break;
	case 19:
		var e17 = _g[2];
		tmp = haxe_macro_ExprDef.EReturn(e17 == null ? null : f(e17));
		break;
	case 20:case 21:case 26:
		tmp = e.expr;
		break;
	case 22:
		var e18 = _g[2];
		tmp = haxe_macro_ExprDef.EUntyped(f(e18));
		break;
	case 23:
		var e19 = _g[2];
		tmp = haxe_macro_ExprDef.EThrow(f(e19));
		break;
	case 24:
		var t = _g[3];
		var e20 = _g[2];
		tmp = haxe_macro_ExprDef.ECast(f(e20),t);
		break;
	case 25:
		var isCall = _g[3];
		var e23 = _g[2];
		tmp = haxe_macro_ExprDef.EDisplay(f(e23),isCall);
		break;
	case 27:
		var eelse1 = _g[4];
		var eif1 = _g[3];
		var econd2 = _g[2];
		tmp = haxe_macro_ExprDef.ETernary(f(econd2),f(eif1),f(eelse1));
		break;
	case 28:
		var t1 = _g[3];
		var e24 = _g[2];
		tmp = haxe_macro_ExprDef.ECheckType(f(e24),t1);
		break;
	case 29:
		var e25 = _g[3];
		var m = _g[2];
		tmp = haxe_macro_ExprDef.EMeta(m,f(e25));
		break;
	}
	return { pos : e1, expr : tmp};
};
haxe_macro_ExprTools.getValue = function(e) {
	var _g = e.expr;
	switch(_g[1]) {
	case 0:
		switch(_g[2][1]) {
		case 0:
			var v = _g[2][2];
			return Std.parseInt(v);
		case 1:
			var v1 = _g[2][2];
			return parseFloat(v1);
		case 2:
			var s = _g[2][2];
			return s;
		case 3:
			switch(_g[2][2]) {
			case "false":
				return false;
			case "null":
				return null;
			case "true":
				return true;
			default:
				throw new js__$Boot_HaxeError("Unsupported expression: " + Std.string(e));
			}
			break;
		default:
			throw new js__$Boot_HaxeError("Unsupported expression: " + Std.string(e));
		}
		break;
	case 2:
		var e2 = _g[4];
		var e1 = _g[3];
		var op = _g[2];
		var e11 = haxe_macro_ExprTools.getValue(e1);
		var e21 = haxe_macro_ExprTools.getValue(e2);
		switch(op[1]) {
		case 0:
			return e11 + e21;
		case 1:
			return e11 * e21;
		case 2:
			return e11 / e21;
		case 3:
			return e11 - e21;
		case 5:
			return e11 == e21;
		case 6:
			return e11 != e21;
		case 7:
			return e11 > e21;
		case 8:
			return e11 >= e21;
		case 9:
			return e11 < e21;
		case 10:
			return e11 <= e21;
		case 11:
			return e11 & e21;
		case 12:
			return e11 | e21;
		case 13:
			return e11 ^ e21;
		case 14:
			if(e11) {
				return e21;
			} else {
				return false;
			}
			break;
		case 15:
			if(!e11) {
				return e21;
			} else {
				return true;
			}
			break;
		case 16:
			return e11 << e21;
		case 17:
			return e11 >> e21;
		case 18:
			return e11 >>> e21;
		case 19:
			return e11 % e21;
		default:
			throw new js__$Boot_HaxeError("Unsupported expression: " + Std.string(e));
		}
		break;
	case 4:
		var e12 = _g[2];
		return haxe_macro_ExprTools.getValue(e12);
	case 5:
		var fields = _g[2];
		var obj = { };
		var _g1 = 0;
		while(_g1 < fields.length) {
			var field = fields[_g1];
			++_g1;
			obj[field.field] = haxe_macro_ExprTools.getValue(field.expr);
		}
		return obj;
	case 6:
		var el = _g[2];
		return el.map(haxe_macro_ExprTools.getValue);
	case 9:
		if(_g[3] == false) {
			var e13 = _g[4];
			var op1 = _g[2];
			var e14 = haxe_macro_ExprTools.getValue(e13);
			switch(op1[1]) {
			case 2:
				return !e14;
			case 3:
				return -e14;
			case 4:
				return ~e14;
			default:
				throw new js__$Boot_HaxeError("Unsupported expression: " + Std.string(e));
			}
		} else {
			throw new js__$Boot_HaxeError("Unsupported expression: " + Std.string(e));
		}
		break;
	case 15:
		var eelse = _g[4];
		var eif = _g[3];
		var econd = _g[2];
		if(eelse == null) {
			throw new js__$Boot_HaxeError("If statements only have a value if the else clause is defined");
		} else {
			var econd1 = haxe_macro_ExprTools.getValue(econd);
			if(econd1) {
				return haxe_macro_ExprTools.getValue(eif);
			} else {
				return haxe_macro_ExprTools.getValue(eelse);
			}
		}
		break;
	case 22:
		var e15 = _g[2];
		return haxe_macro_ExprTools.getValue(e15);
	case 27:
		var eelse1 = _g[4];
		var eif1 = _g[3];
		var econd2 = _g[2];
		if(eelse1 == null) {
			throw new js__$Boot_HaxeError("If statements only have a value if the else clause is defined");
		} else {
			var econd3 = haxe_macro_ExprTools.getValue(econd2);
			if(econd3) {
				return haxe_macro_ExprTools.getValue(eif1);
			} else {
				return haxe_macro_ExprTools.getValue(eelse1);
			}
		}
		break;
	case 29:
		var e16 = _g[3];
		return haxe_macro_ExprTools.getValue(e16);
	default:
		throw new js__$Boot_HaxeError("Unsupported expression: " + Std.string(e));
	}
};
haxe_macro_ExprTools.opt = function(e,f) {
	if(e == null) {
		return null;
	} else {
		return f(e);
	}
};
haxe_macro_ExprTools.opt2 = function(e,f) {
	if(e != null) {
		f(e);
	}
};
var haxe_macro_ExprArrayTools = function() { };
$hxClasses["haxe.macro.ExprArrayTools"] = haxe_macro_ExprArrayTools;
haxe_macro_ExprArrayTools.__name__ = ["haxe","macro","ExprArrayTools"];
haxe_macro_ExprArrayTools.map = function(el,f) {
	var ret = [];
	var _g = 0;
	while(_g < el.length) {
		var e = el[_g];
		++_g;
		ret.push(f(e));
	}
	return ret;
};
haxe_macro_ExprArrayTools.iter = function(el,f) {
	var _g = 0;
	while(_g < el.length) {
		var e = el[_g];
		++_g;
		f(e);
	}
};
var haxe_macro_MacroStringTools = function() { };
$hxClasses["haxe.macro.MacroStringTools"] = haxe_macro_MacroStringTools;
haxe_macro_MacroStringTools.__name__ = ["haxe","macro","MacroStringTools"];
haxe_macro_MacroStringTools.toFieldExpr = function(sl) {
	return Lambda.fold(sl,function(s,e) {
		if(e == null) {
			return { expr : haxe_macro_ExprDef.EConst(haxe_macro_Constant.CIdent(s)), pos : { file : "D:\\Haxe\\haxe\\std/haxe/macro/MacroStringTools.hx", min : 2661, max : 2664}};
		} else {
			return { expr : haxe_macro_ExprDef.EField(e,s), pos : { file : "D:\\Haxe\\haxe\\std/haxe/macro/MacroStringTools.hx", min : 2675, max : 2680}};
		}
	},null);
};
haxe_macro_MacroStringTools.toDotPath = function(pack,name) {
	if(pack.length == 0) {
		return name;
	} else {
		return pack.join(".") + "." + name;
	}
};
haxe_macro_MacroStringTools.toComplex = function(path) {
	var pack = path.split(".");
	return haxe_macro_ComplexType.TPath({ pack : pack, name : pack.pop(), params : []});
};
var haxe_macro_PositionTools = function() { };
$hxClasses["haxe.macro.PositionTools"] = haxe_macro_PositionTools;
haxe_macro_PositionTools.__name__ = ["haxe","macro","PositionTools"];
haxe_macro_PositionTools.getInfos = function(p) {
	return p;
};
haxe_macro_PositionTools.make = function(inf) {
	return inf;
};
var haxe_macro_Printer = function(tabString) {
	if(tabString == null) {
		tabString = "\t";
	}
	this.tabs = "";
	this.tabString = tabString;
};
$hxClasses["haxe.macro.Printer"] = haxe_macro_Printer;
haxe_macro_Printer.__name__ = ["haxe","macro","Printer"];
haxe_macro_Printer.prototype = {
	tabs: null
	,tabString: null
	,printUnop: function(op) {
		switch(op[1]) {
		case 0:
			return "++";
		case 1:
			return "--";
		case 2:
			return "!";
		case 3:
			return "-";
		case 4:
			return "~";
		}
	}
	,printBinop: function(op) {
		switch(op[1]) {
		case 0:
			return "+";
		case 1:
			return "*";
		case 2:
			return "/";
		case 3:
			return "-";
		case 4:
			return "=";
		case 5:
			return "==";
		case 6:
			return "!=";
		case 7:
			return ">";
		case 8:
			return ">=";
		case 9:
			return "<";
		case 10:
			return "<=";
		case 11:
			return "&";
		case 12:
			return "|";
		case 13:
			return "^";
		case 14:
			return "&&";
		case 15:
			return "||";
		case 16:
			return "<<";
		case 17:
			return ">>";
		case 18:
			return ">>>";
		case 19:
			return "%";
		case 20:
			var op1 = op[2];
			return this.printBinop(op1) + "=";
		case 21:
			return "...";
		case 22:
			return "=>";
		}
	}
	,escapeString: function(s,delim) {
		return delim + StringTools.replace(StringTools.replace(StringTools.replace(StringTools.replace(s,"\n","\\n"),"\t","\\t"),"'","\\'"),"\"","\\\"") + delim;
	}
	,printFormatString: function(s) {
		return this.escapeString(s,"'");
	}
	,printString: function(s) {
		return this.escapeString(s,"\"");
	}
	,printConstant: function(c) {
		switch(c[1]) {
		case 0:
			var s = c[2];
			return s;
		case 1:
			var s1 = c[2];
			return s1;
		case 2:
			var s2 = c[2];
			return this.printString(s2);
		case 3:
			var s3 = c[2];
			return s3;
		case 4:
			var opt = c[3];
			var s4 = c[2];
			return "~/" + s4 + "/" + opt;
		}
	}
	,printTypeParam: function(param) {
		switch(param[1]) {
		case 0:
			var ct = param[2];
			return this.printComplexType(ct);
		case 1:
			var e = param[2];
			return this.printExpr(e);
		}
	}
	,printTypePath: function(tp) {
		return (tp.pack.length > 0 ? tp.pack.join(".") + "." : "") + tp.name + (tp.sub != null ? "." + tp.sub : "") + (tp.params == null ? "" : tp.params.length > 0 ? "<" + tp.params.map($bind(this,this.printTypeParam)).join(", ") + ">" : "");
	}
	,printComplexType: function(ct) {
		var _gthis = this;
		switch(ct[1]) {
		case 0:
			var tp = ct[2];
			return this.printTypePath(tp);
		case 1:
			var ret = ct[3];
			var args = ct[2];
			var printArg = function(ct1) {
				if(ct1[1] == 1) {
					return "(" + _gthis.printComplexType(ct1) + ")";
				} else {
					return _gthis.printComplexType(ct1);
				}
			};
			return (args.length > 0 ? args.map(printArg).join(" -> ") : "Void") + " -> " + this.printComplexType(ret);
		case 2:
			var fields = ct[2];
			var _g = [];
			var _g1 = 0;
			while(_g1 < fields.length) {
				var f = fields[_g1];
				++_g1;
				_g.push(this.printField(f) + "; ");
			}
			return "{ " + _g.join("") + "}";
		case 3:
			var ct2 = ct[2];
			return "(" + this.printComplexType(ct2) + ")";
		case 4:
			var fields1 = ct[3];
			var tpl = ct[2];
			return "{> " + tpl.map($bind(this,this.printTypePath)).join(" >, ") + ", " + fields1.map($bind(this,this.printField)).join(", ") + " }";
		case 5:
			var ct3 = ct[2];
			return "?" + this.printComplexType(ct3);
		}
	}
	,printMetadata: function(meta) {
		return "@" + meta.name + (meta.params != null && meta.params.length > 0 ? "(" + this.printExprs(meta.params,", ") + ")" : "");
	}
	,printAccess: function(access) {
		switch(access[1]) {
		case 0:
			return "public";
		case 1:
			return "private";
		case 2:
			return "static";
		case 3:
			return "override";
		case 4:
			return "dynamic";
		case 5:
			return "inline";
		case 6:
			return "macro";
		}
	}
	,printField: function(field) {
		var tmp = (field.doc != null && field.doc != "" ? "/**\n" + this.tabs + this.tabString + StringTools.replace(field.doc,"\n","\n" + this.tabs + this.tabString) + "\n" + this.tabs + "**/\n" + this.tabs : "") + (field.meta != null && field.meta.length > 0 ? field.meta.map($bind(this,this.printMetadata)).join("\n" + this.tabs) + ("\n" + this.tabs) : "") + (field.access != null && field.access.length > 0 ? field.access.map($bind(this,this.printAccess)).join(" ") + " " : "");
		var _g = field.kind;
		var tmp1;
		switch(_g[1]) {
		case 0:
			var eo = _g[3];
			var t = _g[2];
			tmp1 = "var " + field.name + this.opt(t,$bind(this,this.printComplexType)," : ") + this.opt(eo,$bind(this,this.printExpr)," = ");
			break;
		case 1:
			var func = _g[2];
			tmp1 = "function " + field.name + this.printFunction(func);
			break;
		case 2:
			var eo1 = _g[5];
			var t1 = _g[4];
			var set = _g[3];
			var get = _g[2];
			tmp1 = "var " + field.name + "(" + get + ", " + set + ")" + this.opt(t1,$bind(this,this.printComplexType)," : ") + this.opt(eo1,$bind(this,this.printExpr)," = ");
			break;
		}
		return tmp + tmp1;
	}
	,printTypeParamDecl: function(tpd) {
		return tpd.name + (tpd.params != null && tpd.params.length > 0 ? "<" + tpd.params.map($bind(this,this.printTypeParamDecl)).join(", ") + ">" : "") + (tpd.constraints != null && tpd.constraints.length > 0 ? ":(" + tpd.constraints.map($bind(this,this.printComplexType)).join(", ") + ")" : "");
	}
	,printFunctionArg: function(arg) {
		return (arg.opt ? "?" : "") + arg.name + this.opt(arg.type,$bind(this,this.printComplexType),":") + this.opt(arg.value,$bind(this,this.printExpr)," = ");
	}
	,printFunction: function(func) {
		return (func.params == null ? "" : func.params.length > 0 ? "<" + func.params.map($bind(this,this.printTypeParamDecl)).join(", ") + ">" : "") + "(" + func.args.map($bind(this,this.printFunctionArg)).join(", ") + ")" + this.opt(func.ret,$bind(this,this.printComplexType),":") + this.opt(func.expr,$bind(this,this.printExpr)," ");
	}
	,printVar: function(v) {
		return v.name + this.opt(v.type,$bind(this,this.printComplexType),":") + this.opt(v.expr,$bind(this,this.printExpr)," = ");
	}
	,printExpr: function(e) {
		var _gthis = this;
		if(e == null) {
			return "#NULL";
		} else {
			var _g = e.expr;
			switch(_g[1]) {
			case 0:
				var c = _g[2];
				return this.printConstant(c);
			case 1:
				var e2 = _g[3];
				var e1 = _g[2];
				return "" + this.printExpr(e1) + "[" + this.printExpr(e2) + "]";
			case 2:
				var e21 = _g[4];
				var e11 = _g[3];
				var op = _g[2];
				return "" + this.printExpr(e11) + " " + this.printBinop(op) + " " + this.printExpr(e21);
			case 3:
				var n = _g[3];
				var e12 = _g[2];
				return "" + this.printExpr(e12) + "." + n;
			case 4:
				var e13 = _g[2];
				return "(" + this.printExpr(e13) + ")";
			case 5:
				var fl = _g[2];
				return "{ " + fl.map(function(fld) {
					return "" + fld.field + " : " + _gthis.printExpr(fld.expr);
				}).join(", ") + " }";
			case 6:
				var el = _g[2];
				return "[" + this.printExprs(el,", ") + "]";
			case 7:
				var el1 = _g[3];
				var e14 = _g[2];
				return "" + this.printExpr(e14) + "(" + this.printExprs(el1,", ") + ")";
			case 8:
				var el2 = _g[3];
				var tp = _g[2];
				return "new " + this.printTypePath(tp) + "(" + this.printExprs(el2,", ") + ")";
			case 9:
				switch(_g[3]) {
				case false:
					var e15 = _g[4];
					var op1 = _g[2];
					return this.printUnop(op1) + this.printExpr(e15);
				case true:
					var e16 = _g[4];
					var op2 = _g[2];
					return this.printExpr(e16) + this.printUnop(op2);
				}
				break;
			case 10:
				var vl = _g[2];
				return "var " + vl.map($bind(this,this.printVar)).join(", ");
			case 11:
				var func = _g[3];
				var no = _g[2];
				if(no != null) {
					return "function " + no + this.printFunction(func);
				} else {
					var func1 = _g[3];
					return "function" + this.printFunction(func1);
				}
				break;
			case 12:
				if(_g[2].length == 0) {
					return "{ }";
				} else {
					var el3 = _g[2];
					var old = this.tabs;
					this.tabs += this.tabString;
					var s = "{\n" + this.tabs + this.printExprs(el3,";\n" + this.tabs);
					this.tabs = old;
					return s + (";\n" + this.tabs + "}");
				}
				break;
			case 13:
				var e22 = _g[3];
				var e17 = _g[2];
				return "for (" + this.printExpr(e17) + ") " + this.printExpr(e22);
			case 14:
				var e23 = _g[3];
				var e18 = _g[2];
				return "" + this.printExpr(e18) + " in " + this.printExpr(e23);
			case 15:
				if(_g[4] == null) {
					var econd = _g[2];
					var eif = _g[3];
					return "if (" + this.printExpr(econd) + ") " + this.printExpr(eif);
				} else {
					var econd1 = _g[2];
					var eif1 = _g[3];
					var eelse = _g[4];
					return "if (" + this.printExpr(econd1) + ") " + this.printExpr(eif1) + " else " + this.printExpr(eelse);
				}
				break;
			case 16:
				switch(_g[4]) {
				case false:
					var econd2 = _g[2];
					var e19 = _g[3];
					return "do " + this.printExpr(e19) + " while (" + this.printExpr(econd2) + ")";
				case true:
					var econd3 = _g[2];
					var e110 = _g[3];
					return "while (" + this.printExpr(econd3) + ") " + this.printExpr(e110);
				}
				break;
			case 17:
				var edef = _g[4];
				var cl = _g[3];
				var e111 = _g[2];
				var old1 = this.tabs;
				this.tabs += this.tabString;
				var s1 = "switch " + this.printExpr(e111) + " {\n" + this.tabs + cl.map(function(c1) {
					return "case " + _gthis.printExprs(c1.values,", ") + (c1.guard != null ? " if (" + _gthis.printExpr(c1.guard) + "):" : ":") + (c1.expr != null ? _gthis.opt(c1.expr,$bind(_gthis,_gthis.printExpr)) + ";" : "");
				}).join("\n" + this.tabs);
				if(edef != null) {
					s1 += "\n" + this.tabs + "default:" + (edef.expr == null ? "" : this.printExpr(edef) + ";");
				}
				this.tabs = old1;
				return s1 + ("\n" + this.tabs + "}");
			case 18:
				var cl1 = _g[3];
				var e112 = _g[2];
				return "try " + this.printExpr(e112) + cl1.map(function(c2) {
					return " catch(" + c2.name + ":" + _gthis.printComplexType(c2.type) + ") " + _gthis.printExpr(c2.expr);
				}).join("");
			case 19:
				var eo = _g[2];
				return "return" + this.opt(eo,$bind(this,this.printExpr)," ");
			case 20:
				return "break";
			case 21:
				return "continue";
			case 22:
				var e113 = _g[2];
				return "untyped " + this.printExpr(e113);
			case 23:
				var e114 = _g[2];
				return "throw " + this.printExpr(e114);
			case 24:
				var cto = _g[3];
				var e115 = _g[2];
				if(cto != null) {
					return "cast(" + this.printExpr(e115) + ", " + this.printComplexType(cto) + ")";
				} else {
					var e116 = _g[2];
					return "cast " + this.printExpr(e116);
				}
				break;
			case 25:
				var e117 = _g[2];
				return "#DISPLAY(" + this.printExpr(e117) + ")";
			case 26:
				var tp1 = _g[2];
				return "#DISPLAY(" + this.printTypePath(tp1) + ")";
			case 27:
				var eelse1 = _g[4];
				var eif2 = _g[3];
				var econd4 = _g[2];
				return "" + this.printExpr(econd4) + " ? " + this.printExpr(eif2) + " : " + this.printExpr(eelse1);
			case 28:
				var ct = _g[3];
				var e118 = _g[2];
				return "(" + this.printExpr(e118) + " : " + this.printComplexType(ct) + ")";
			case 29:
				var e119 = _g[3];
				var meta = _g[2];
				return this.printMetadata(meta) + " " + this.printExpr(e119);
			}
		}
	}
	,printExprs: function(el,sep) {
		return el.map($bind(this,this.printExpr)).join(sep);
	}
	,printExtension: function(tpl,fields) {
		return "{\n" + this.tabs + ">" + tpl.map($bind(this,this.printTypePath)).join(",\n" + this.tabs + ">") + "," + (fields.length > 0 ? "\n" + this.tabs + fields.map($bind(this,this.printField)).join(";\n" + this.tabs) + ";\n}" : "\n}");
	}
	,printStructure: function(fields) {
		if(fields.length == 0) {
			return "{ }";
		} else {
			return "{\n" + this.tabs + fields.map($bind(this,this.printField)).join(";\n" + this.tabs) + ";\n}";
		}
	}
	,printTypeDefinition: function(t,printPackage) {
		if(printPackage == null) {
			printPackage = true;
		}
		var old = this.tabs;
		this.tabs = this.tabString;
		var str;
		if(t == null) {
			str = "#NULL";
		} else {
			var str1 = (printPackage && t.pack.length > 0 && t.pack[0] != "" ? "package " + t.pack.join(".") + ";\n" : "") + (t.meta != null && t.meta.length > 0 ? t.meta.map($bind(this,this.printMetadata)).join(" ") + " " : "") + (t.isExtern ? "extern " : "");
			var _g = t.kind;
			var str2;
			switch(_g[1]) {
			case 0:
				var str3 = "enum " + t.name + (t.params != null && t.params.length > 0 ? "<" + t.params.map($bind(this,this.printTypeParamDecl)).join(", ") + ">" : "") + " {\n";
				var _g1 = [];
				var _g11 = 0;
				var _g2 = t.fields;
				while(_g11 < _g2.length) {
					var field = _g2[_g11];
					++_g11;
					var str4 = this.tabs + (field.doc != null && field.doc != "" ? "/**\n" + this.tabs + this.tabString + StringTools.replace(field.doc,"\n","\n" + this.tabs + this.tabString) + "\n" + this.tabs + "**/\n" + this.tabs : "") + (field.meta != null && field.meta.length > 0 ? field.meta.map($bind(this,this.printMetadata)).join(" ") + " " : "");
					var _g3 = field.kind;
					var str5;
					switch(_g3[1]) {
					case 0:
						var t1 = _g3[2];
						str5 = field.name + this.opt(t1,$bind(this,this.printComplexType),":");
						break;
					case 1:
						var func = _g3[2];
						str5 = field.name + this.printFunction(func);
						break;
					case 2:
						throw new js__$Boot_HaxeError("FProp is invalid for TDEnum.");
						break;
					}
					_g1.push(str4 + str5 + ";");
				}
				str2 = str3 + _g1.join("\n") + "\n}";
				break;
			case 1:
				var str6 = "typedef " + t.name + (t.params != null && t.params.length > 0 ? "<" + t.params.map($bind(this,this.printTypeParamDecl)).join(", ") + ">" : "") + " = {\n";
				var _g4 = [];
				var _g12 = 0;
				var _g21 = t.fields;
				while(_g12 < _g21.length) {
					var f = _g21[_g12];
					++_g12;
					_g4.push(this.tabs + this.printField(f) + ";");
				}
				str2 = str6 + _g4.join("\n") + "\n}";
				break;
			case 2:
				var isInterface = _g[4];
				var interfaces = _g[3];
				var superClass = _g[2];
				var str7 = (isInterface ? "interface " : "class ") + t.name + (t.params != null && t.params.length > 0 ? "<" + t.params.map($bind(this,this.printTypeParamDecl)).join(", ") + ">" : "") + (superClass != null ? " extends " + this.printTypePath(superClass) : "");
				var str8;
				if(interfaces != null) {
					var str9;
					if(isInterface) {
						var _g5 = [];
						var _g13 = 0;
						while(_g13 < interfaces.length) {
							var tp = interfaces[_g13];
							++_g13;
							_g5.push(" extends " + this.printTypePath(tp));
						}
						str9 = _g5;
					} else {
						var _g6 = [];
						var _g14 = 0;
						while(_g14 < interfaces.length) {
							var tp1 = interfaces[_g14];
							++_g14;
							_g6.push(" implements " + this.printTypePath(tp1));
						}
						str9 = _g6;
					}
					str8 = str9.join("");
				} else {
					str8 = "";
				}
				var str10 = str7 + str8 + " {\n";
				var _g7 = [];
				var _g15 = 0;
				var _g22 = t.fields;
				while(_g15 < _g22.length) {
					var f1 = _g22[_g15];
					++_g15;
					_g7.push(this.tabs + this.printFieldWithDelimiter(f1));
				}
				str2 = str10 + _g7.join("\n") + "\n}";
				break;
			case 3:
				var ct = _g[2];
				var str11 = "typedef " + t.name + (t.params != null && t.params.length > 0 ? "<" + t.params.map($bind(this,this.printTypeParamDecl)).join(", ") + ">" : "") + " = ";
				var str12;
				switch(ct[1]) {
				case 2:
					var fields = ct[2];
					str12 = this.printStructure(fields);
					break;
				case 4:
					var fields1 = ct[3];
					var tpl = ct[2];
					str12 = this.printExtension(tpl,fields1);
					break;
				default:
					str12 = this.printComplexType(ct);
				}
				str2 = str11 + str12 + ";";
				break;
			case 4:
				var to = _g[4];
				var from = _g[3];
				var tthis = _g[2];
				var str13 = "abstract " + t.name + (t.params != null && t.params.length > 0 ? "<" + t.params.map($bind(this,this.printTypeParamDecl)).join(", ") + ">" : "") + (tthis == null ? "" : "(" + this.printComplexType(tthis) + ")");
				var str14;
				if(from == null) {
					str14 = "";
				} else {
					var _g8 = [];
					var _g16 = 0;
					while(_g16 < from.length) {
						var f2 = from[_g16];
						++_g16;
						_g8.push(" from " + this.printComplexType(f2));
					}
					str14 = _g8.join("");
				}
				var str15 = str13 + str14;
				var str16;
				if(to == null) {
					str16 = "";
				} else {
					var _g9 = [];
					var _g17 = 0;
					while(_g17 < to.length) {
						var t2 = to[_g17];
						++_g17;
						_g9.push(" to " + this.printComplexType(t2));
					}
					str16 = _g9.join("");
				}
				var str17 = str15 + str16 + " {\n";
				var _g10 = [];
				var _g18 = 0;
				var _g23 = t.fields;
				while(_g18 < _g23.length) {
					var f3 = _g23[_g18];
					++_g18;
					_g10.push(this.tabs + this.printFieldWithDelimiter(f3));
				}
				str2 = str17 + _g10.join("\n") + "\n}";
				break;
			}
			str = str1 + str2;
		}
		this.tabs = old;
		return str;
	}
	,printFieldWithDelimiter: function(f) {
		var tmp = this.printField(f);
		var _g = f.kind;
		var tmp1;
		switch(_g[1]) {
		case 1:
			if(_g[2].expr == null) {
				tmp1 = ";";
			} else if(_g[2].expr.expr[1] == 12) {
				tmp1 = "";
			} else {
				tmp1 = ";";
			}
			break;
		case 0:case 2:
			tmp1 = ";";
			break;
		}
		return tmp + tmp1;
	}
	,opt: function(v,f,prefix) {
		if(prefix == null) {
			prefix = "";
		}
		if(v == null) {
			return "";
		} else {
			return prefix + f(v);
		}
	}
	,__class__: haxe_macro_Printer
};
var haxe_macro_Type = $hxClasses["haxe.macro.Type"] = { __ename__ : ["haxe","macro","Type"], __constructs__ : ["TMono","TEnum","TInst","TType","TFun","TAnonymous","TDynamic","TLazy","TAbstract"] };
haxe_macro_Type.TMono = function(t) { var $x = ["TMono",0,t]; $x.__enum__ = haxe_macro_Type; $x.toString = $estr; return $x; };
haxe_macro_Type.TEnum = function(t,params) { var $x = ["TEnum",1,t,params]; $x.__enum__ = haxe_macro_Type; $x.toString = $estr; return $x; };
haxe_macro_Type.TInst = function(t,params) { var $x = ["TInst",2,t,params]; $x.__enum__ = haxe_macro_Type; $x.toString = $estr; return $x; };
haxe_macro_Type.TType = function(t,params) { var $x = ["TType",3,t,params]; $x.__enum__ = haxe_macro_Type; $x.toString = $estr; return $x; };
haxe_macro_Type.TFun = function(args,ret) { var $x = ["TFun",4,args,ret]; $x.__enum__ = haxe_macro_Type; $x.toString = $estr; return $x; };
haxe_macro_Type.TAnonymous = function(a) { var $x = ["TAnonymous",5,a]; $x.__enum__ = haxe_macro_Type; $x.toString = $estr; return $x; };
haxe_macro_Type.TDynamic = function(t) { var $x = ["TDynamic",6,t]; $x.__enum__ = haxe_macro_Type; $x.toString = $estr; return $x; };
haxe_macro_Type.TLazy = function(f) { var $x = ["TLazy",7,f]; $x.__enum__ = haxe_macro_Type; $x.toString = $estr; return $x; };
haxe_macro_Type.TAbstract = function(t,params) { var $x = ["TAbstract",8,t,params]; $x.__enum__ = haxe_macro_Type; $x.toString = $estr; return $x; };
haxe_macro_Type.__empty_constructs__ = [];
var haxe_macro_AnonStatus = $hxClasses["haxe.macro.AnonStatus"] = { __ename__ : ["haxe","macro","AnonStatus"], __constructs__ : ["AClosed","AOpened","AConst","AExtend","AClassStatics","AEnumStatics","AAbstractStatics"] };
haxe_macro_AnonStatus.AClosed = ["AClosed",0];
haxe_macro_AnonStatus.AClosed.toString = $estr;
haxe_macro_AnonStatus.AClosed.__enum__ = haxe_macro_AnonStatus;
haxe_macro_AnonStatus.AOpened = ["AOpened",1];
haxe_macro_AnonStatus.AOpened.toString = $estr;
haxe_macro_AnonStatus.AOpened.__enum__ = haxe_macro_AnonStatus;
haxe_macro_AnonStatus.AConst = ["AConst",2];
haxe_macro_AnonStatus.AConst.toString = $estr;
haxe_macro_AnonStatus.AConst.__enum__ = haxe_macro_AnonStatus;
haxe_macro_AnonStatus.AExtend = function(tl) { var $x = ["AExtend",3,tl]; $x.__enum__ = haxe_macro_AnonStatus; $x.toString = $estr; return $x; };
haxe_macro_AnonStatus.AClassStatics = function(t) { var $x = ["AClassStatics",4,t]; $x.__enum__ = haxe_macro_AnonStatus; $x.toString = $estr; return $x; };
haxe_macro_AnonStatus.AEnumStatics = function(t) { var $x = ["AEnumStatics",5,t]; $x.__enum__ = haxe_macro_AnonStatus; $x.toString = $estr; return $x; };
haxe_macro_AnonStatus.AAbstractStatics = function(t) { var $x = ["AAbstractStatics",6,t]; $x.__enum__ = haxe_macro_AnonStatus; $x.toString = $estr; return $x; };
haxe_macro_AnonStatus.__empty_constructs__ = [haxe_macro_AnonStatus.AClosed,haxe_macro_AnonStatus.AOpened,haxe_macro_AnonStatus.AConst];
var haxe_macro_ClassKind = $hxClasses["haxe.macro.ClassKind"] = { __ename__ : ["haxe","macro","ClassKind"], __constructs__ : ["KNormal","KTypeParameter","KExtension","KExpr","KGeneric","KGenericInstance","KMacroType","KAbstractImpl","KGenericBuild"] };
haxe_macro_ClassKind.KNormal = ["KNormal",0];
haxe_macro_ClassKind.KNormal.toString = $estr;
haxe_macro_ClassKind.KNormal.__enum__ = haxe_macro_ClassKind;
haxe_macro_ClassKind.KTypeParameter = function(constraints) { var $x = ["KTypeParameter",1,constraints]; $x.__enum__ = haxe_macro_ClassKind; $x.toString = $estr; return $x; };
haxe_macro_ClassKind.KExtension = function(cl,params) { var $x = ["KExtension",2,cl,params]; $x.__enum__ = haxe_macro_ClassKind; $x.toString = $estr; return $x; };
haxe_macro_ClassKind.KExpr = function(expr) { var $x = ["KExpr",3,expr]; $x.__enum__ = haxe_macro_ClassKind; $x.toString = $estr; return $x; };
haxe_macro_ClassKind.KGeneric = ["KGeneric",4];
haxe_macro_ClassKind.KGeneric.toString = $estr;
haxe_macro_ClassKind.KGeneric.__enum__ = haxe_macro_ClassKind;
haxe_macro_ClassKind.KGenericInstance = function(cl,params) { var $x = ["KGenericInstance",5,cl,params]; $x.__enum__ = haxe_macro_ClassKind; $x.toString = $estr; return $x; };
haxe_macro_ClassKind.KMacroType = ["KMacroType",6];
haxe_macro_ClassKind.KMacroType.toString = $estr;
haxe_macro_ClassKind.KMacroType.__enum__ = haxe_macro_ClassKind;
haxe_macro_ClassKind.KAbstractImpl = function(a) { var $x = ["KAbstractImpl",7,a]; $x.__enum__ = haxe_macro_ClassKind; $x.toString = $estr; return $x; };
haxe_macro_ClassKind.KGenericBuild = ["KGenericBuild",8];
haxe_macro_ClassKind.KGenericBuild.toString = $estr;
haxe_macro_ClassKind.KGenericBuild.__enum__ = haxe_macro_ClassKind;
haxe_macro_ClassKind.__empty_constructs__ = [haxe_macro_ClassKind.KNormal,haxe_macro_ClassKind.KGeneric,haxe_macro_ClassKind.KMacroType,haxe_macro_ClassKind.KGenericBuild];
var haxe_macro_FieldKind = $hxClasses["haxe.macro.FieldKind"] = { __ename__ : ["haxe","macro","FieldKind"], __constructs__ : ["FVar","FMethod"] };
haxe_macro_FieldKind.FVar = function(read,write) { var $x = ["FVar",0,read,write]; $x.__enum__ = haxe_macro_FieldKind; $x.toString = $estr; return $x; };
haxe_macro_FieldKind.FMethod = function(k) { var $x = ["FMethod",1,k]; $x.__enum__ = haxe_macro_FieldKind; $x.toString = $estr; return $x; };
haxe_macro_FieldKind.__empty_constructs__ = [];
var haxe_macro_VarAccess = $hxClasses["haxe.macro.VarAccess"] = { __ename__ : ["haxe","macro","VarAccess"], __constructs__ : ["AccNormal","AccNo","AccNever","AccResolve","AccCall","AccInline","AccRequire"] };
haxe_macro_VarAccess.AccNormal = ["AccNormal",0];
haxe_macro_VarAccess.AccNormal.toString = $estr;
haxe_macro_VarAccess.AccNormal.__enum__ = haxe_macro_VarAccess;
haxe_macro_VarAccess.AccNo = ["AccNo",1];
haxe_macro_VarAccess.AccNo.toString = $estr;
haxe_macro_VarAccess.AccNo.__enum__ = haxe_macro_VarAccess;
haxe_macro_VarAccess.AccNever = ["AccNever",2];
haxe_macro_VarAccess.AccNever.toString = $estr;
haxe_macro_VarAccess.AccNever.__enum__ = haxe_macro_VarAccess;
haxe_macro_VarAccess.AccResolve = ["AccResolve",3];
haxe_macro_VarAccess.AccResolve.toString = $estr;
haxe_macro_VarAccess.AccResolve.__enum__ = haxe_macro_VarAccess;
haxe_macro_VarAccess.AccCall = ["AccCall",4];
haxe_macro_VarAccess.AccCall.toString = $estr;
haxe_macro_VarAccess.AccCall.__enum__ = haxe_macro_VarAccess;
haxe_macro_VarAccess.AccInline = ["AccInline",5];
haxe_macro_VarAccess.AccInline.toString = $estr;
haxe_macro_VarAccess.AccInline.__enum__ = haxe_macro_VarAccess;
haxe_macro_VarAccess.AccRequire = function(r,msg) { var $x = ["AccRequire",6,r,msg]; $x.__enum__ = haxe_macro_VarAccess; $x.toString = $estr; return $x; };
haxe_macro_VarAccess.__empty_constructs__ = [haxe_macro_VarAccess.AccNormal,haxe_macro_VarAccess.AccNo,haxe_macro_VarAccess.AccNever,haxe_macro_VarAccess.AccResolve,haxe_macro_VarAccess.AccCall,haxe_macro_VarAccess.AccInline];
var haxe_macro_MethodKind = $hxClasses["haxe.macro.MethodKind"] = { __ename__ : ["haxe","macro","MethodKind"], __constructs__ : ["MethNormal","MethInline","MethDynamic","MethMacro"] };
haxe_macro_MethodKind.MethNormal = ["MethNormal",0];
haxe_macro_MethodKind.MethNormal.toString = $estr;
haxe_macro_MethodKind.MethNormal.__enum__ = haxe_macro_MethodKind;
haxe_macro_MethodKind.MethInline = ["MethInline",1];
haxe_macro_MethodKind.MethInline.toString = $estr;
haxe_macro_MethodKind.MethInline.__enum__ = haxe_macro_MethodKind;
haxe_macro_MethodKind.MethDynamic = ["MethDynamic",2];
haxe_macro_MethodKind.MethDynamic.toString = $estr;
haxe_macro_MethodKind.MethDynamic.__enum__ = haxe_macro_MethodKind;
haxe_macro_MethodKind.MethMacro = ["MethMacro",3];
haxe_macro_MethodKind.MethMacro.toString = $estr;
haxe_macro_MethodKind.MethMacro.__enum__ = haxe_macro_MethodKind;
haxe_macro_MethodKind.__empty_constructs__ = [haxe_macro_MethodKind.MethNormal,haxe_macro_MethodKind.MethInline,haxe_macro_MethodKind.MethDynamic,haxe_macro_MethodKind.MethMacro];
var haxe_macro_TConstant = $hxClasses["haxe.macro.TConstant"] = { __ename__ : ["haxe","macro","TConstant"], __constructs__ : ["TInt","TFloat","TString","TBool","TNull","TThis","TSuper"] };
haxe_macro_TConstant.TInt = function(i) { var $x = ["TInt",0,i]; $x.__enum__ = haxe_macro_TConstant; $x.toString = $estr; return $x; };
haxe_macro_TConstant.TFloat = function(s) { var $x = ["TFloat",1,s]; $x.__enum__ = haxe_macro_TConstant; $x.toString = $estr; return $x; };
haxe_macro_TConstant.TString = function(s) { var $x = ["TString",2,s]; $x.__enum__ = haxe_macro_TConstant; $x.toString = $estr; return $x; };
haxe_macro_TConstant.TBool = function(b) { var $x = ["TBool",3,b]; $x.__enum__ = haxe_macro_TConstant; $x.toString = $estr; return $x; };
haxe_macro_TConstant.TNull = ["TNull",4];
haxe_macro_TConstant.TNull.toString = $estr;
haxe_macro_TConstant.TNull.__enum__ = haxe_macro_TConstant;
haxe_macro_TConstant.TThis = ["TThis",5];
haxe_macro_TConstant.TThis.toString = $estr;
haxe_macro_TConstant.TThis.__enum__ = haxe_macro_TConstant;
haxe_macro_TConstant.TSuper = ["TSuper",6];
haxe_macro_TConstant.TSuper.toString = $estr;
haxe_macro_TConstant.TSuper.__enum__ = haxe_macro_TConstant;
haxe_macro_TConstant.__empty_constructs__ = [haxe_macro_TConstant.TNull,haxe_macro_TConstant.TThis,haxe_macro_TConstant.TSuper];
var haxe_macro_ModuleType = $hxClasses["haxe.macro.ModuleType"] = { __ename__ : ["haxe","macro","ModuleType"], __constructs__ : ["TClassDecl","TEnumDecl","TTypeDecl","TAbstract"] };
haxe_macro_ModuleType.TClassDecl = function(c) { var $x = ["TClassDecl",0,c]; $x.__enum__ = haxe_macro_ModuleType; $x.toString = $estr; return $x; };
haxe_macro_ModuleType.TEnumDecl = function(e) { var $x = ["TEnumDecl",1,e]; $x.__enum__ = haxe_macro_ModuleType; $x.toString = $estr; return $x; };
haxe_macro_ModuleType.TTypeDecl = function(t) { var $x = ["TTypeDecl",2,t]; $x.__enum__ = haxe_macro_ModuleType; $x.toString = $estr; return $x; };
haxe_macro_ModuleType.TAbstract = function(a) { var $x = ["TAbstract",3,a]; $x.__enum__ = haxe_macro_ModuleType; $x.toString = $estr; return $x; };
haxe_macro_ModuleType.__empty_constructs__ = [];
var haxe_macro_FieldAccess = $hxClasses["haxe.macro.FieldAccess"] = { __ename__ : ["haxe","macro","FieldAccess"], __constructs__ : ["FInstance","FStatic","FAnon","FDynamic","FClosure","FEnum"] };
haxe_macro_FieldAccess.FInstance = function(c,params,cf) { var $x = ["FInstance",0,c,params,cf]; $x.__enum__ = haxe_macro_FieldAccess; $x.toString = $estr; return $x; };
haxe_macro_FieldAccess.FStatic = function(c,cf) { var $x = ["FStatic",1,c,cf]; $x.__enum__ = haxe_macro_FieldAccess; $x.toString = $estr; return $x; };
haxe_macro_FieldAccess.FAnon = function(cf) { var $x = ["FAnon",2,cf]; $x.__enum__ = haxe_macro_FieldAccess; $x.toString = $estr; return $x; };
haxe_macro_FieldAccess.FDynamic = function(s) { var $x = ["FDynamic",3,s]; $x.__enum__ = haxe_macro_FieldAccess; $x.toString = $estr; return $x; };
haxe_macro_FieldAccess.FClosure = function(c,cf) { var $x = ["FClosure",4,c,cf]; $x.__enum__ = haxe_macro_FieldAccess; $x.toString = $estr; return $x; };
haxe_macro_FieldAccess.FEnum = function(e,ef) { var $x = ["FEnum",5,e,ef]; $x.__enum__ = haxe_macro_FieldAccess; $x.toString = $estr; return $x; };
haxe_macro_FieldAccess.__empty_constructs__ = [];
var haxe_macro_TypedExprDef = $hxClasses["haxe.macro.TypedExprDef"] = { __ename__ : ["haxe","macro","TypedExprDef"], __constructs__ : ["TConst","TLocal","TArray","TBinop","TField","TTypeExpr","TParenthesis","TObjectDecl","TArrayDecl","TCall","TNew","TUnop","TFunction","TVar","TBlock","TFor","TIf","TWhile","TSwitch","TTry","TReturn","TBreak","TContinue","TThrow","TCast","TMeta","TEnumParameter"] };
haxe_macro_TypedExprDef.TConst = function(c) { var $x = ["TConst",0,c]; $x.__enum__ = haxe_macro_TypedExprDef; $x.toString = $estr; return $x; };
haxe_macro_TypedExprDef.TLocal = function(v) { var $x = ["TLocal",1,v]; $x.__enum__ = haxe_macro_TypedExprDef; $x.toString = $estr; return $x; };
haxe_macro_TypedExprDef.TArray = function(e1,e2) { var $x = ["TArray",2,e1,e2]; $x.__enum__ = haxe_macro_TypedExprDef; $x.toString = $estr; return $x; };
haxe_macro_TypedExprDef.TBinop = function(op,e1,e2) { var $x = ["TBinop",3,op,e1,e2]; $x.__enum__ = haxe_macro_TypedExprDef; $x.toString = $estr; return $x; };
haxe_macro_TypedExprDef.TField = function(e,fa) { var $x = ["TField",4,e,fa]; $x.__enum__ = haxe_macro_TypedExprDef; $x.toString = $estr; return $x; };
haxe_macro_TypedExprDef.TTypeExpr = function(m) { var $x = ["TTypeExpr",5,m]; $x.__enum__ = haxe_macro_TypedExprDef; $x.toString = $estr; return $x; };
haxe_macro_TypedExprDef.TParenthesis = function(e) { var $x = ["TParenthesis",6,e]; $x.__enum__ = haxe_macro_TypedExprDef; $x.toString = $estr; return $x; };
haxe_macro_TypedExprDef.TObjectDecl = function(fields) { var $x = ["TObjectDecl",7,fields]; $x.__enum__ = haxe_macro_TypedExprDef; $x.toString = $estr; return $x; };
haxe_macro_TypedExprDef.TArrayDecl = function(el) { var $x = ["TArrayDecl",8,el]; $x.__enum__ = haxe_macro_TypedExprDef; $x.toString = $estr; return $x; };
haxe_macro_TypedExprDef.TCall = function(e,el) { var $x = ["TCall",9,e,el]; $x.__enum__ = haxe_macro_TypedExprDef; $x.toString = $estr; return $x; };
haxe_macro_TypedExprDef.TNew = function(c,params,el) { var $x = ["TNew",10,c,params,el]; $x.__enum__ = haxe_macro_TypedExprDef; $x.toString = $estr; return $x; };
haxe_macro_TypedExprDef.TUnop = function(op,postFix,e) { var $x = ["TUnop",11,op,postFix,e]; $x.__enum__ = haxe_macro_TypedExprDef; $x.toString = $estr; return $x; };
haxe_macro_TypedExprDef.TFunction = function(tfunc) { var $x = ["TFunction",12,tfunc]; $x.__enum__ = haxe_macro_TypedExprDef; $x.toString = $estr; return $x; };
haxe_macro_TypedExprDef.TVar = function(v,expr) { var $x = ["TVar",13,v,expr]; $x.__enum__ = haxe_macro_TypedExprDef; $x.toString = $estr; return $x; };
haxe_macro_TypedExprDef.TBlock = function(el) { var $x = ["TBlock",14,el]; $x.__enum__ = haxe_macro_TypedExprDef; $x.toString = $estr; return $x; };
haxe_macro_TypedExprDef.TFor = function(v,e1,e2) { var $x = ["TFor",15,v,e1,e2]; $x.__enum__ = haxe_macro_TypedExprDef; $x.toString = $estr; return $x; };
haxe_macro_TypedExprDef.TIf = function(econd,eif,eelse) { var $x = ["TIf",16,econd,eif,eelse]; $x.__enum__ = haxe_macro_TypedExprDef; $x.toString = $estr; return $x; };
haxe_macro_TypedExprDef.TWhile = function(econd,e,normalWhile) { var $x = ["TWhile",17,econd,e,normalWhile]; $x.__enum__ = haxe_macro_TypedExprDef; $x.toString = $estr; return $x; };
haxe_macro_TypedExprDef.TSwitch = function(e,cases,edef) { var $x = ["TSwitch",18,e,cases,edef]; $x.__enum__ = haxe_macro_TypedExprDef; $x.toString = $estr; return $x; };
haxe_macro_TypedExprDef.TTry = function(e,catches) { var $x = ["TTry",19,e,catches]; $x.__enum__ = haxe_macro_TypedExprDef; $x.toString = $estr; return $x; };
haxe_macro_TypedExprDef.TReturn = function(e) { var $x = ["TReturn",20,e]; $x.__enum__ = haxe_macro_TypedExprDef; $x.toString = $estr; return $x; };
haxe_macro_TypedExprDef.TBreak = ["TBreak",21];
haxe_macro_TypedExprDef.TBreak.toString = $estr;
haxe_macro_TypedExprDef.TBreak.__enum__ = haxe_macro_TypedExprDef;
haxe_macro_TypedExprDef.TContinue = ["TContinue",22];
haxe_macro_TypedExprDef.TContinue.toString = $estr;
haxe_macro_TypedExprDef.TContinue.__enum__ = haxe_macro_TypedExprDef;
haxe_macro_TypedExprDef.TThrow = function(e) { var $x = ["TThrow",23,e]; $x.__enum__ = haxe_macro_TypedExprDef; $x.toString = $estr; return $x; };
haxe_macro_TypedExprDef.TCast = function(e,m) { var $x = ["TCast",24,e,m]; $x.__enum__ = haxe_macro_TypedExprDef; $x.toString = $estr; return $x; };
haxe_macro_TypedExprDef.TMeta = function(m,e1) { var $x = ["TMeta",25,m,e1]; $x.__enum__ = haxe_macro_TypedExprDef; $x.toString = $estr; return $x; };
haxe_macro_TypedExprDef.TEnumParameter = function(e1,ef,index) { var $x = ["TEnumParameter",26,e1,ef,index]; $x.__enum__ = haxe_macro_TypedExprDef; $x.toString = $estr; return $x; };
haxe_macro_TypedExprDef.__empty_constructs__ = [haxe_macro_TypedExprDef.TBreak,haxe_macro_TypedExprDef.TContinue];
var haxe_macro_TypeTools = function() { };
$hxClasses["haxe.macro.TypeTools"] = haxe_macro_TypeTools;
haxe_macro_TypeTools.__name__ = ["haxe","macro","TypeTools"];
haxe_macro_TypeTools.nullable = function(complexType) {
	return haxe_macro_ComplexType.TPath({ pack : [], name : "Null", params : [haxe_macro_TypeParam.TPType(complexType)]});
};
haxe_macro_TypeTools.toField = function(cf) {
	var varAccessToString = function(va,getOrSet) {
		switch(va[1]) {
		case 0:
			return "default";
		case 1:
			return "null";
		case 2:
			return "never";
		case 3:
			throw new js__$Boot_HaxeError("Invalid TAnonymous");
			break;
		case 4:
			return getOrSet;
		case 5:
			return "default";
		case 6:
			return "default";
		}
	};
	if(cf.params.length == 0) {
		var cf1 = cf.name;
		var cf2 = cf.doc;
		var tmp = cf.isPublic ? [haxe_macro_Access.APublic] : [haxe_macro_Access.APrivate];
		var tmp1;
		var _g = cf.type;
		var _g1 = cf.kind;
		switch(_g1[1]) {
		case 0:
			var ret = _g;
			var write = _g1[3];
			var read = _g1[2];
			tmp1 = haxe_macro_FieldType.FProp(varAccessToString(read,"get"),varAccessToString(write,"set"),haxe_macro_TypeTools.toComplexType(ret),null);
			break;
		case 1:
			if(_g[1] == 4) {
				var ret1 = _g[3];
				var args = _g[2];
				var _g2 = [];
				var _g11 = 0;
				while(_g11 < args.length) {
					var a = args[_g11];
					++_g11;
					_g2.push({ name : a.name, opt : a.opt, type : haxe_macro_TypeTools.toComplexType(a.t)});
				}
				tmp1 = haxe_macro_FieldType.FFun({ args : _g2, ret : haxe_macro_TypeTools.toComplexType(ret1), expr : null});
			} else {
				throw new js__$Boot_HaxeError("Invalid TAnonymous");
			}
			break;
		}
		return { name : cf1, doc : cf2, access : tmp, kind : tmp1, pos : cf.pos, meta : cf.meta.get()};
	} else {
		throw new js__$Boot_HaxeError("Invalid TAnonymous");
	}
};
haxe_macro_TypeTools.toComplexType = function(type) {
	if(type == null) {
		return null;
	} else {
		switch(type[1]) {
		case 0:
			var _hx_tmp = type[2].get();
			var t = _hx_tmp;
			if(t == null) {
				return null;
			} else {
				return haxe_macro_TypeTools.toComplexType(t);
			}
			break;
		case 1:
			var _hx_tmp1;
			var params = type[3];
			_hx_tmp1 = type[2].get();
			var baseType = _hx_tmp1;
			return haxe_macro_ComplexType.TPath(haxe_macro_TypeTools.toTypePath(baseType,params));
		case 2:
			var _hx_tmp2;
			var params1 = type[3];
			_hx_tmp2 = type[2].get();
			var classType = _hx_tmp2;
			var _g = classType.kind;
			if(_g[1] == 1) {
				return haxe_macro_ComplexType.TPath({ name : classType.name, pack : []});
			} else {
				return haxe_macro_ComplexType.TPath(haxe_macro_TypeTools.toTypePath(classType,params1));
			}
			break;
		case 3:
			var _hx_tmp3;
			var params2 = type[3];
			_hx_tmp3 = type[2].get();
			var baseType1 = _hx_tmp3;
			return haxe_macro_ComplexType.TPath(haxe_macro_TypeTools.toTypePath(baseType1,params2));
		case 4:
			var ret = type[3];
			var args = type[2];
			var _g1 = [];
			var _g11 = 0;
			while(_g11 < args.length) {
				var a = args[_g11];
				++_g11;
				_g1.push(a.opt ? haxe_macro_TypeTools.nullable(haxe_macro_TypeTools.toComplexType(a.t)) : haxe_macro_TypeTools.toComplexType(a.t));
			}
			return haxe_macro_ComplexType.TFunction(_g1,haxe_macro_TypeTools.toComplexType(ret));
		case 5:
			var _hx_tmp4 = type[2].get();
			var fields = _hx_tmp4.fields;
			var _g2 = [];
			var _g12 = 0;
			while(_g12 < fields.length) {
				var cf = fields[_g12];
				++_g12;
				_g2.push(haxe_macro_TypeTools.toField(cf));
			}
			return haxe_macro_ComplexType.TAnonymous(_g2);
		case 6:
			var t1 = type[2];
			if(t1 == null) {
				return haxe_macro_ComplexType.TPath({ pack : [], name : "Dynamic", params : []});
			} else {
				var ct = haxe_macro_TypeTools.toComplexType(t1);
				return haxe_macro_ComplexType.TPath({ pack : [], name : "Dynamic", params : [haxe_macro_TypeParam.TPType(ct)]});
			}
			break;
		case 7:
			var f = type[2];
			return haxe_macro_TypeTools.toComplexType(f());
		case 8:
			var _hx_tmp5;
			var params3 = type[3];
			_hx_tmp5 = type[2].get();
			var baseType2 = _hx_tmp5;
			return haxe_macro_ComplexType.TPath(haxe_macro_TypeTools.toTypePath(baseType2,params3));
		}
	}
};
haxe_macro_TypeTools.toTypePath = function(baseType,params) {
	var module = baseType.module;
	var baseType1 = baseType.pack;
	var tmp = module.substring(module.lastIndexOf(".") + 1);
	var baseType2 = baseType.name;
	var _g = [];
	var _g1 = 0;
	while(_g1 < params.length) {
		var t = params[_g1];
		++_g1;
		_g.push(haxe_macro_TypeParam.TPType(haxe_macro_TypeTools.toComplexType(t)));
	}
	return { pack : baseType1, name : tmp, sub : baseType2, params : _g};
};
haxe_macro_TypeTools.findField = function(c,name,isStatic) {
	if(isStatic == null) {
		isStatic = false;
	}
	var field = Lambda.find((isStatic ? c.statics : c.fields).get(),function(field1) {
		return field1.name == name;
	});
	if(field != null) {
		return field;
	} else if(c.superClass != null) {
		return haxe_macro_TypeTools.findField(c.superClass.t.get(),name,isStatic);
	} else {
		return null;
	}
};
var haxe_macro_TypedExprTools = function() { };
$hxClasses["haxe.macro.TypedExprTools"] = haxe_macro_TypedExprTools;
haxe_macro_TypedExprTools.__name__ = ["haxe","macro","TypedExprTools"];
haxe_macro_TypedExprTools["with"] = function(e,edef,t) {
	return { expr : edef == null ? e.expr : edef, pos : e.pos, t : t == null ? e.t : t};
};
haxe_macro_TypedExprTools.map = function(e,f) {
	var _g = e.expr;
	switch(_g[1]) {
	case 0:case 1:case 5:case 21:case 22:
		return e;
	case 2:
		var e2 = _g[3];
		var e1 = _g[2];
		return haxe_macro_TypedExprTools["with"](e,haxe_macro_TypedExprDef.TArray(f(e1),f(e2)));
	case 3:
		var e21 = _g[4];
		var e11 = _g[3];
		var op = _g[2];
		return haxe_macro_TypedExprTools["with"](e,haxe_macro_TypedExprDef.TBinop(op,f(e11),f(e21)));
	case 4:
		var fa = _g[3];
		var e12 = _g[2];
		return haxe_macro_TypedExprTools["with"](e,haxe_macro_TypedExprDef.TField(f(e12),fa));
	case 6:
		var e13 = _g[2];
		return haxe_macro_TypedExprTools["with"](e,haxe_macro_TypedExprDef.TParenthesis(f(e13)));
	case 7:
		var fl = _g[2];
		return haxe_macro_TypedExprTools["with"](e,haxe_macro_TypedExprDef.TObjectDecl(fl.map(function(field) {
			return { name : field.name, expr : f(field.expr)};
		})));
	case 8:
		var el = _g[2];
		return haxe_macro_TypedExprTools["with"](e,haxe_macro_TypedExprDef.TArrayDecl(el.map(f)));
	case 9:
		var el1 = _g[3];
		var e14 = _g[2];
		return haxe_macro_TypedExprTools["with"](e,haxe_macro_TypedExprDef.TCall(f(e14),el1.map(f)));
	case 10:
		var el2 = _g[4];
		var pl = _g[3];
		var t = _g[2];
		return haxe_macro_TypedExprTools["with"](e,haxe_macro_TypedExprDef.TNew(t,pl,el2.map(f)));
	case 11:
		var e15 = _g[4];
		var pre = _g[3];
		var op1 = _g[2];
		return haxe_macro_TypedExprTools["with"](e,haxe_macro_TypedExprDef.TUnop(op1,pre,f(e15)));
	case 12:
		var fu = _g[2];
		return haxe_macro_TypedExprTools["with"](e,haxe_macro_TypedExprDef.TFunction({ t : fu.t, args : fu.args, expr : f(fu.expr)}));
	case 13:
		var eo = _g[3];
		var v = _g[2];
		return haxe_macro_TypedExprTools["with"](e,haxe_macro_TypedExprDef.TVar(v,eo == null ? null : f(eo)));
	case 14:
		var el3 = _g[2];
		return haxe_macro_TypedExprTools["with"](e,haxe_macro_TypedExprDef.TBlock(el3.map(f)));
	case 15:
		var e22 = _g[4];
		var e16 = _g[3];
		var v1 = _g[2];
		return haxe_macro_TypedExprTools["with"](e,haxe_macro_TypedExprDef.TFor(v1,f(e16),f(e22)));
	case 16:
		var e3 = _g[4];
		var e23 = _g[3];
		var e17 = _g[2];
		return haxe_macro_TypedExprTools["with"](e,haxe_macro_TypedExprDef.TIf(f(e17),f(e23),e3 == null ? null : f(e3)));
	case 17:
		var flag = _g[4];
		var e24 = _g[3];
		var e18 = _g[2];
		return haxe_macro_TypedExprTools["with"](e,haxe_macro_TypedExprDef.TWhile(f(e18),f(e24),flag));
	case 18:
		var e25 = _g[4];
		var cases = _g[3];
		var e19 = _g[2];
		return haxe_macro_TypedExprTools["with"](e,haxe_macro_TypedExprDef.TSwitch(f(e19),cases.map(function(c) {
			return { values : c.values.map(f), expr : f(c.expr)};
		}),e25 == null ? null : f(e25)));
	case 19:
		var catches = _g[3];
		var e110 = _g[2];
		return haxe_macro_TypedExprTools["with"](e,haxe_macro_TypedExprDef.TTry(f(e110),catches.map(function(c1) {
			return { v : c1.v, expr : f(c1.expr)};
		})));
	case 20:
		var e111 = _g[2];
		return haxe_macro_TypedExprTools["with"](e,haxe_macro_TypedExprDef.TReturn(e111 == null ? null : f(e111)));
	case 23:
		var e112 = _g[2];
		return haxe_macro_TypedExprTools["with"](e,haxe_macro_TypedExprDef.TThrow(f(e112)));
	case 24:
		var mt = _g[3];
		var e113 = _g[2];
		return haxe_macro_TypedExprTools["with"](e,haxe_macro_TypedExprDef.TCast(f(e113),mt));
	case 25:
		var e114 = _g[3];
		var m = _g[2];
		return haxe_macro_TypedExprTools["with"](e,haxe_macro_TypedExprDef.TMeta(m,f(e114)));
	case 26:
		var i = _g[4];
		var ef = _g[3];
		var e115 = _g[2];
		return haxe_macro_TypedExprTools["with"](e,haxe_macro_TypedExprDef.TEnumParameter(f(e115),ef,i));
	}
};
haxe_macro_TypedExprTools.iter = function(e,f) {
	var _g = e.expr;
	switch(_g[1]) {
	case 0:case 1:case 5:case 21:case 22:
		break;
	case 2:
		var e2 = _g[3];
		var e1 = _g[2];
		f(e1);
		f(e2);
		break;
	case 3:
		var e21 = _g[4];
		var e11 = _g[3];
		f(e11);
		f(e21);
		break;
	case 4:
		var e12 = _g[2];
		f(e12);
		break;
	case 6:
		var e13 = _g[2];
		f(e13);
		break;
	case 7:
		var fl = _g[2];
		var _g1 = 0;
		while(_g1 < fl.length) {
			var field = fl[_g1];
			++_g1;
			f(field.expr);
		}
		break;
	case 8:
		var el = _g[2];
		var _g2 = 0;
		while(_g2 < el.length) {
			var e3 = el[_g2];
			++_g2;
			f(e3);
		}
		break;
	case 9:
		var el1 = _g[3];
		var e14 = _g[2];
		f(e14);
		var _g3 = 0;
		while(_g3 < el1.length) {
			var e4 = el1[_g3];
			++_g3;
			f(e4);
		}
		break;
	case 10:
		var el2 = _g[4];
		var _g4 = 0;
		while(_g4 < el2.length) {
			var e5 = el2[_g4];
			++_g4;
			f(e5);
		}
		break;
	case 11:
		var e15 = _g[4];
		f(e15);
		break;
	case 12:
		var fu = _g[2];
		f(fu.expr);
		break;
	case 13:
		var e16 = _g[3];
		if(e16 != null) {
			f(e16);
		}
		break;
	case 14:
		var el3 = _g[2];
		var _g5 = 0;
		while(_g5 < el3.length) {
			var e6 = el3[_g5];
			++_g5;
			f(e6);
		}
		break;
	case 15:
		var e22 = _g[4];
		var e17 = _g[3];
		f(e17);
		f(e22);
		break;
	case 16:
		var e31 = _g[4];
		var e23 = _g[3];
		var e18 = _g[2];
		f(e18);
		f(e23);
		if(e31 != null) {
			f(e31);
		}
		break;
	case 17:
		var e24 = _g[3];
		var e19 = _g[2];
		f(e19);
		f(e24);
		break;
	case 18:
		var e25 = _g[4];
		var cases = _g[3];
		var e110 = _g[2];
		f(e110);
		var _g6 = 0;
		while(_g6 < cases.length) {
			var c = cases[_g6];
			++_g6;
			var _g11 = 0;
			var _g21 = c.values;
			while(_g11 < _g21.length) {
				var v = _g21[_g11];
				++_g11;
				f(v);
			}
			f(c.expr);
		}
		if(e25 != null) {
			f(e25);
		}
		break;
	case 19:
		var catches = _g[3];
		var e111 = _g[2];
		f(e111);
		var _g7 = 0;
		while(_g7 < catches.length) {
			var c1 = catches[_g7];
			++_g7;
			f(c1.expr);
		}
		break;
	case 20:
		var e112 = _g[2];
		if(e112 != null) {
			f(e112);
		}
		break;
	case 23:
		var e113 = _g[2];
		f(e113);
		break;
	case 24:
		var e114 = _g[2];
		f(e114);
		break;
	case 25:
		var e115 = _g[3];
		f(e115);
		break;
	case 26:
		var e116 = _g[2];
		f(e116);
		break;
	}
};
haxe_macro_TypedExprTools.mapWithType = function(e,f,ft,fv) {
	var _g = e.expr;
	switch(_g[1]) {
	case 0:case 5:case 21:case 22:
		return haxe_macro_TypedExprTools["with"](e,null,ft(e.t));
	case 1:
		var v = _g[2];
		return haxe_macro_TypedExprTools["with"](e,haxe_macro_TypedExprDef.TLocal(fv(v)),ft(e.t));
	case 2:
		var e2 = _g[3];
		var e1 = _g[2];
		return haxe_macro_TypedExprTools["with"](e,haxe_macro_TypedExprDef.TArray(f(e1),f(e2)),ft(e.t));
	case 3:
		var e21 = _g[4];
		var e11 = _g[3];
		var op = _g[2];
		return haxe_macro_TypedExprTools["with"](e,haxe_macro_TypedExprDef.TBinop(op,f(e11),f(e21)),ft(e.t));
	case 4:
		var fa = _g[3];
		var e12 = _g[2];
		return haxe_macro_TypedExprTools["with"](e,haxe_macro_TypedExprDef.TField(f(e12),fa),ft(e.t));
	case 6:
		var e13 = _g[2];
		return haxe_macro_TypedExprTools["with"](e,haxe_macro_TypedExprDef.TParenthesis(e13),ft(e.t));
	case 7:
		var fl = _g[2];
		return haxe_macro_TypedExprTools["with"](e,haxe_macro_TypedExprDef.TObjectDecl(fl.map(function(field) {
			return { name : field.name, expr : f(field.expr)};
		})),ft(e.t));
	case 8:
		var el = _g[2];
		return haxe_macro_TypedExprTools["with"](e,haxe_macro_TypedExprDef.TArrayDecl(el.map(f)),ft(e.t));
	case 9:
		var el1 = _g[3];
		var e14 = _g[2];
		return haxe_macro_TypedExprTools["with"](e,haxe_macro_TypedExprDef.TCall(f(e14),el1.map(f)),ft(e.t));
	case 10:
		var el2 = _g[4];
		var pl = _g[3];
		var t = _g[2];
		return haxe_macro_TypedExprTools["with"](e,haxe_macro_TypedExprDef.TNew(t,pl,el2.map(f)),ft(e.t));
	case 11:
		var e15 = _g[4];
		var pre = _g[3];
		var op1 = _g[2];
		return haxe_macro_TypedExprTools["with"](e,haxe_macro_TypedExprDef.TUnop(op1,pre,f(e15)),ft(e.t));
	case 12:
		var fu = _g[2];
		return haxe_macro_TypedExprTools["with"](e,haxe_macro_TypedExprDef.TFunction({ t : ft(fu.t), args : fu.args.map(function(arg) {
			return { v : fv(arg.v), value : arg.value};
		}), expr : f(fu.expr)}),ft(e.t));
	case 13:
		var eo = _g[3];
		var v1 = _g[2];
		return haxe_macro_TypedExprTools["with"](e,haxe_macro_TypedExprDef.TVar(fv(v1),eo == null ? null : f(eo)),ft(e.t));
	case 14:
		var el3 = _g[2];
		return haxe_macro_TypedExprTools["with"](e,haxe_macro_TypedExprDef.TBlock(el3.map(f)),ft(e.t));
	case 15:
		var e22 = _g[4];
		var e16 = _g[3];
		var v2 = _g[2];
		return haxe_macro_TypedExprTools["with"](e,haxe_macro_TypedExprDef.TFor(fv(v2),f(e16),f(e22)),ft(e.t));
	case 16:
		var e3 = _g[4];
		var e23 = _g[3];
		var e17 = _g[2];
		return haxe_macro_TypedExprTools["with"](e,haxe_macro_TypedExprDef.TIf(f(e17),f(e23),e3 == null ? null : f(e3)),ft(e.t));
	case 17:
		var flag = _g[4];
		var e24 = _g[3];
		var e18 = _g[2];
		return haxe_macro_TypedExprTools["with"](e,haxe_macro_TypedExprDef.TWhile(f(e18),f(e24),flag),ft(e.t));
	case 18:
		var e25 = _g[4];
		var cases = _g[3];
		var e19 = _g[2];
		return haxe_macro_TypedExprTools["with"](e,haxe_macro_TypedExprDef.TSwitch(f(e19),cases.map(function(c) {
			return { values : c.values.map(f), expr : f(c.expr)};
		}),e25 == null ? null : f(e25)),ft(e.t));
	case 19:
		var catches = _g[3];
		var e110 = _g[2];
		return haxe_macro_TypedExprTools["with"](e,haxe_macro_TypedExprDef.TTry(f(e110),catches.map(function(c1) {
			return { v : fv(c1.v), expr : f(c1.expr)};
		})),ft(e.t));
	case 20:
		var e111 = _g[2];
		return haxe_macro_TypedExprTools["with"](e,haxe_macro_TypedExprDef.TReturn(e111 == null ? null : f(e111)),ft(e.t));
	case 23:
		var e112 = _g[2];
		return haxe_macro_TypedExprTools["with"](e,haxe_macro_TypedExprDef.TThrow(f(e112)),ft(e.t));
	case 24:
		var mt = _g[3];
		var e113 = _g[2];
		return haxe_macro_TypedExprTools["with"](e,haxe_macro_TypedExprDef.TCast(f(e113),mt),ft(e.t));
	case 25:
		var e114 = _g[3];
		var m = _g[2];
		return haxe_macro_TypedExprTools["with"](e,haxe_macro_TypedExprDef.TMeta(m,f(e114)),ft(e.t));
	case 26:
		var i = _g[4];
		var ef = _g[3];
		var e115 = _g[2];
		return haxe_macro_TypedExprTools["with"](e,haxe_macro_TypedExprDef.TEnumParameter(f(e115),ef,i),ft(e.t));
	}
};
var js__$Boot_HaxeError = function(val) {
	Error.call(this);
	this.val = val;
	this.message = String(val);
	if(Error.captureStackTrace) {
		Error.captureStackTrace(this,js__$Boot_HaxeError);
	}
};
$hxClasses["js._Boot.HaxeError"] = js__$Boot_HaxeError;
js__$Boot_HaxeError.__name__ = ["js","_Boot","HaxeError"];
js__$Boot_HaxeError.wrap = function(val) {
	if((val instanceof Error)) {
		return val;
	} else {
		return new js__$Boot_HaxeError(val);
	}
};
js__$Boot_HaxeError.__super__ = Error;
js__$Boot_HaxeError.prototype = $extend(Error.prototype,{
	val: null
	,__class__: js__$Boot_HaxeError
});
var js_Boot = function() { };
$hxClasses["js.Boot"] = js_Boot;
js_Boot.__name__ = ["js","Boot"];
js_Boot.__unhtml = function(s) {
	return s.split("&").join("&amp;").split("<").join("&lt;").split(">").join("&gt;");
};
js_Boot.__trace = function(v,i) {
	var msg = i != null ? i.fileName + ":" + i.lineNumber + ": " : "";
	msg += js_Boot.__string_rec(v,"");
	if(i != null && i.customParams != null) {
		var _g = 0;
		var _g1 = i.customParams;
		while(_g < _g1.length) {
			var v1 = _g1[_g];
			++_g;
			msg += "," + js_Boot.__string_rec(v1,"");
		}
	}
	var d;
	var tmp;
	if(typeof(document) != "undefined") {
		d = document.getElementById("haxe:trace");
		tmp = d != null;
	} else {
		tmp = false;
	}
	if(tmp) {
		d.innerHTML += js_Boot.__unhtml(msg) + "<br/>";
	} else if(typeof console != "undefined" && console.log != null) {
		console.log(msg);
	}
};
js_Boot.__clear_trace = function() {
	var d = document.getElementById("haxe:trace");
	if(d != null) {
		d.innerHTML = "";
	}
};
js_Boot.isClass = function(o) {
	return o.__name__;
};
js_Boot.isEnum = function(e) {
	return e.__ename__;
};
js_Boot.getClass = function(o) {
	if((o instanceof Array) && o.__enum__ == null) {
		return Array;
	} else {
		var cl = o.__class__;
		if(cl != null) {
			return cl;
		}
		var name = js_Boot.__nativeClassName(o);
		if(name != null) {
			return js_Boot.__resolveNativeClass(name);
		}
		return null;
	}
};
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(o instanceof Array) {
			if(o.__enum__) {
				if(o.length == 2) {
					return o[0];
				}
				var str = o[0] + "(";
				s += "\t";
				var _g1 = 2;
				var _g = o.length;
				while(_g1 < _g) {
					var i = _g1++;
					if(i != 2) {
						str += "," + js_Boot.__string_rec(o[i],s);
					} else {
						str += js_Boot.__string_rec(o[i],s);
					}
				}
				return str + ")";
			}
			var l = o.length;
			var i1;
			var str1 = "[";
			s += "\t";
			var _g11 = 0;
			var _g2 = l;
			while(_g11 < _g2) {
				var i2 = _g11++;
				str1 += (i2 > 0 ? "," : "") + js_Boot.__string_rec(o[i2],s);
			}
			str1 += "]";
			return str1;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( e ) {
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var k = null;
		var str2 = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		for( var k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str2.length != 2) {
			str2 += ", \n";
		}
		str2 += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str2 += "\n" + s + "}";
		return str2;
	case "string":
		return o;
	default:
		return String(o);
	}
};
js_Boot.__interfLoop = function(cc,cl) {
	if(cc == null) {
		return false;
	}
	if(cc == cl) {
		return true;
	}
	var intf = cc.__interfaces__;
	if(intf != null) {
		var _g1 = 0;
		var _g = intf.length;
		while(_g1 < _g) {
			var i = _g1++;
			var i1 = intf[i];
			if(i1 == cl || js_Boot.__interfLoop(i1,cl)) {
				return true;
			}
		}
	}
	return js_Boot.__interfLoop(cc.__super__,cl);
};
js_Boot.__instanceof = function(o,cl) {
	if(cl == null) {
		return false;
	}
	switch(cl) {
	case Array:
		if((o instanceof Array)) {
			return o.__enum__ == null;
		} else {
			return false;
		}
		break;
	case Bool:
		return typeof(o) == "boolean";
	case Dynamic:
		return true;
	case Float:
		return typeof(o) == "number";
	case Int:
		if(typeof(o) == "number") {
			return (o|0) === o;
		} else {
			return false;
		}
		break;
	case String:
		return typeof(o) == "string";
	default:
		if(o != null) {
			if(typeof(cl) == "function") {
				if(o instanceof cl) {
					return true;
				}
				if(js_Boot.__interfLoop(js_Boot.getClass(o),cl)) {
					return true;
				}
			} else if(typeof(cl) == "object" && js_Boot.__isNativeObj(cl)) {
				if(o instanceof cl) {
					return true;
				}
			}
		} else {
			return false;
		}
		if(cl == Class ? o.__name__ != null : false) {
			return true;
		}
		if(cl == Enum ? o.__ename__ != null : false) {
			return true;
		}
		return o.__enum__ == cl;
	}
};
js_Boot.__cast = function(o,t) {
	if(js_Boot.__instanceof(o,t)) {
		return o;
	} else {
		throw new js__$Boot_HaxeError("Cannot cast " + Std.string(o) + " to " + Std.string(t));
	}
};
js_Boot.__nativeClassName = function(o) {
	var name = js_Boot.__toStr.call(o).slice(8,-1);
	if(name == "Object" || name == "Function" || name == "Math" || name == "JSON") {
		return null;
	}
	return name;
};
js_Boot.__isNativeObj = function(o) {
	return js_Boot.__nativeClassName(o) != null;
};
js_Boot.__resolveNativeClass = function(name) {
	return $global[name];
};
var js_Browser = function() { };
$hxClasses["js.Browser"] = js_Browser;
js_Browser.__name__ = ["js","Browser"];
js_Browser.__properties__ = {get_supported:"get_supported",get_console:"get_console",get_navigator:"get_navigator",get_location:"get_location",get_document:"get_document",get_window:"get_window"};
js_Browser.get_window = function() {
	return window;
};
js_Browser.get_document = function() {
	return window.document;
};
js_Browser.get_location = function() {
	return window.location;
};
js_Browser.get_navigator = function() {
	return window.navigator;
};
js_Browser.get_console = function() {
	return window.console;
};
js_Browser.get_supported = function() {
	return typeof(window) != "undefined";
};
js_Browser.getLocalStorage = function() {
	try {
		var s = window.localStorage;
		s.getItem("");
		return s;
	} catch( e ) {
		return null;
	}
};
js_Browser.getSessionStorage = function() {
	try {
		var s = window.sessionStorage;
		s.getItem("");
		return s;
	} catch( e ) {
		return null;
	}
};
js_Browser.createXMLHttpRequest = function() {
	if(typeof XMLHttpRequest != "undefined") {
		return new XMLHttpRequest();
	}
	if(typeof ActiveXObject != "undefined") {
		return new ActiveXObject("Microsoft.XMLHTTP");
	}
	throw new js__$Boot_HaxeError("Unable to create XMLHttpRequest object.");
};
js_Browser.alert = function(v) {
	window.alert(js_Boot.__string_rec(v,""));
};
var js_Lib = function() { };
$hxClasses["js.Lib"] = js_Lib;
js_Lib.__name__ = ["js","Lib"];
js_Lib.__properties__ = {get_undefined:"get_undefined"};
js_Lib.debug = function() {
	debugger;
};
js_Lib.alert = function(v) {
	alert(js_Boot.__string_rec(v,""));
};
js_Lib["eval"] = function(code) {
	return eval(code);
};
js_Lib.get_undefined = function() {
	return undefined;
};
var js_html__$CanvasElement_CanvasUtil = function() { };
$hxClasses["js.html._CanvasElement.CanvasUtil"] = js_html__$CanvasElement_CanvasUtil;
js_html__$CanvasElement_CanvasUtil.__name__ = ["js","html","_CanvasElement","CanvasUtil"];
js_html__$CanvasElement_CanvasUtil.getContextWebGL = function(canvas,attribs) {
	var _g = 0;
	var _g1 = ["webgl","experimental-webgl"];
	while(_g < _g1.length) {
		var name = _g1[_g];
		++_g;
		var ctx = canvas.getContext(name,attribs);
		if(ctx != null) {
			return ctx;
		}
	}
	return null;
};
var js_html_compat_ArrayBuffer = function(a) {
	if((a instanceof Array) && a.__enum__ == null) {
		this.a = a;
		this.byteLength = a.length;
	} else {
		var len = a;
		this.a = [];
		var _g1 = 0;
		var _g = len;
		while(_g1 < _g) {
			var i = _g1++;
			this.a[i] = 0;
		}
		this.byteLength = len;
	}
};
$hxClasses["js.html.compat.ArrayBuffer"] = js_html_compat_ArrayBuffer;
js_html_compat_ArrayBuffer.__name__ = ["js","html","compat","ArrayBuffer"];
js_html_compat_ArrayBuffer.sliceImpl = function(begin,end) {
	var u = new Uint8Array(this,begin,end == null ? null : end - begin);
	var result = new ArrayBuffer(u.byteLength);
	var resultArray = new Uint8Array(result);
	resultArray.set(u);
	return result;
};
js_html_compat_ArrayBuffer.prototype = {
	byteLength: null
	,a: null
	,slice: function(begin,end) {
		return new js_html_compat_ArrayBuffer(this.a.slice(begin,end));
	}
	,__class__: js_html_compat_ArrayBuffer
};
var js_html_compat_DataView = function(buffer,byteOffset,byteLength) {
	this.buf = buffer;
	this.offset = byteOffset == null ? 0 : byteOffset;
	this.length = byteLength == null ? buffer.byteLength - this.offset : byteLength;
	if(this.offset < 0 || this.length < 0 || this.offset + this.length > buffer.byteLength) {
		throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
	}
	this.byteLength = this.length;
	this.byteOffset = this.offset;
	this.buffer = this.buf;
};
$hxClasses["js.html.compat.DataView"] = js_html_compat_DataView;
js_html_compat_DataView.__name__ = ["js","html","compat","DataView"];
js_html_compat_DataView.prototype = {
	buf: null
	,offset: null
	,length: null
	,byteLength: null
	,byteOffset: null
	,buffer: null
	,getInt8: function(byteOffset) {
		var v = this.buf.a[this.offset + byteOffset];
		if(v >= 128) {
			return v - 256;
		} else {
			return v;
		}
	}
	,getUint8: function(byteOffset) {
		return this.buf.a[this.offset + byteOffset];
	}
	,getInt16: function(byteOffset,littleEndian) {
		var v = this.getUint16(byteOffset,littleEndian);
		if(v >= 32768) {
			return v - 65536;
		} else {
			return v;
		}
	}
	,getUint16: function(byteOffset,littleEndian) {
		if(littleEndian) {
			return this.buf.a[this.offset + byteOffset] | this.buf.a[this.offset + byteOffset + 1] << 8;
		} else {
			return this.buf.a[this.offset + byteOffset] << 8 | this.buf.a[this.offset + byteOffset + 1];
		}
	}
	,getInt32: function(byteOffset,littleEndian) {
		var p = this.offset + byteOffset;
		var a = this.buf.a[p++];
		var b = this.buf.a[p++];
		var c = this.buf.a[p++];
		var d = this.buf.a[p++];
		if(littleEndian) {
			return a | b << 8 | c << 16 | d << 24;
		} else {
			return d | c << 8 | b << 16 | a << 24;
		}
	}
	,getUint32: function(byteOffset,littleEndian) {
		var v = this.getInt32(byteOffset,littleEndian);
		if(v < 0) {
			return v + 4294967296.;
		} else {
			return v;
		}
	}
	,getFloat32: function(byteOffset,littleEndian) {
		return haxe_io_FPHelper.i32ToFloat(this.getInt32(byteOffset,littleEndian));
	}
	,getFloat64: function(byteOffset,littleEndian) {
		var a = this.getInt32(byteOffset,littleEndian);
		var b = this.getInt32(byteOffset + 4,littleEndian);
		return haxe_io_FPHelper.i64ToDouble(littleEndian ? a : b,littleEndian ? b : a);
	}
	,setInt8: function(byteOffset,value) {
		this.buf.a[byteOffset + this.offset] = value < 0 ? value + 128 & 255 : value & 255;
	}
	,setUint8: function(byteOffset,value) {
		this.buf.a[byteOffset + this.offset] = value & 255;
	}
	,setInt16: function(byteOffset,value,littleEndian) {
		this.setUint16(byteOffset,value < 0 ? value + 65536 : value,littleEndian);
	}
	,setUint16: function(byteOffset,value,littleEndian) {
		var p = byteOffset + this.offset;
		if(littleEndian) {
			this.buf.a[p] = value & 255;
			this.buf.a[p++] = value >> 8 & 255;
		} else {
			this.buf.a[p++] = value >> 8 & 255;
			this.buf.a[p] = value & 255;
		}
	}
	,setInt32: function(byteOffset,value,littleEndian) {
		this.setUint32(byteOffset,value,littleEndian);
	}
	,setUint32: function(byteOffset,value,littleEndian) {
		var p = byteOffset + this.offset;
		if(littleEndian) {
			this.buf.a[p++] = value & 255;
			this.buf.a[p++] = value >> 8 & 255;
			this.buf.a[p++] = value >> 16 & 255;
			this.buf.a[p++] = value >>> 24;
		} else {
			this.buf.a[p++] = value >>> 24;
			this.buf.a[p++] = value >> 16 & 255;
			this.buf.a[p++] = value >> 8 & 255;
			this.buf.a[p++] = value & 255;
		}
	}
	,setFloat32: function(byteOffset,value,littleEndian) {
		this.setUint32(byteOffset,haxe_io_FPHelper.floatToI32(value),littleEndian);
	}
	,setFloat64: function(byteOffset,value,littleEndian) {
		var i64 = haxe_io_FPHelper.doubleToI64(value);
		if(littleEndian) {
			this.setUint32(byteOffset,i64.low);
			this.setUint32(byteOffset,i64.high);
		} else {
			this.setUint32(byteOffset,i64.high);
			this.setUint32(byteOffset,i64.low);
		}
	}
	,__class__: js_html_compat_DataView
};
var js_html_compat_Float32Array = function() { };
$hxClasses["js.html.compat.Float32Array"] = js_html_compat_Float32Array;
js_html_compat_Float32Array.__name__ = ["js","html","compat","Float32Array"];
js_html_compat_Float32Array._new = function(arg1,offset,length) {
	var arr;
	if(typeof(arg1) == "number") {
		arr = [];
		var _g1 = 0;
		var _g = arg1;
		while(_g1 < _g) {
			var i = _g1++;
			arr[i] = 0;
		}
		arr.byteLength = arr.length << 2;
		arr.byteOffset = 0;
		var _g2 = [];
		var _g21 = 0;
		var _g11 = arr.length << 2;
		while(_g21 < _g11) {
			var i1 = _g21++;
			_g2.push(0);
		}
		arr.buffer = new js_html_compat_ArrayBuffer(_g2);
	} else if(js_Boot.__instanceof(arg1,js_html_compat_ArrayBuffer)) {
		var buffer = arg1;
		if(offset == null) {
			offset = 0;
		}
		if(length == null) {
			length = buffer.byteLength - offset >> 2;
		}
		arr = [];
		var _g12 = 0;
		var _g3 = length;
		while(_g12 < _g3) {
			var i2 = _g12++;
			var val = buffer.a[offset++] | buffer.a[offset++] << 8 | buffer.a[offset++] << 16 | buffer.a[offset++] << 24;
			arr.push(haxe_io_FPHelper.i32ToFloat(val));
		}
		arr.byteLength = arr.length << 2;
		arr.byteOffset = offset;
		arr.buffer = buffer;
	} else if((arg1 instanceof Array) && arg1.__enum__ == null) {
		arr = arg1.slice();
		var buffer1 = [];
		var _g4 = 0;
		while(_g4 < arr.length) {
			var f = arr[_g4];
			++_g4;
			var i3 = haxe_io_FPHelper.floatToI32(f);
			buffer1.push(i3 & 255);
			buffer1.push(i3 >> 8 & 255);
			buffer1.push(i3 >> 16 & 255);
			buffer1.push(i3 >>> 24);
		}
		arr.byteLength = arr.length << 2;
		arr.byteOffset = 0;
		arr.buffer = new js_html_compat_ArrayBuffer(buffer1);
	} else {
		throw new js__$Boot_HaxeError("TODO " + Std.string(arg1));
	}
	arr.subarray = js_html_compat_Float32Array._subarray;
	arr.set = js_html_compat_Float32Array._set;
	return arr;
};
js_html_compat_Float32Array._set = function(arg,offset) {
	if(js_Boot.__instanceof(arg.buffer,js_html_compat_ArrayBuffer)) {
		var a = arg;
		if(arg.byteLength + offset > this.byteLength) {
			throw new js__$Boot_HaxeError("set() outside of range");
		}
		var _g1 = 0;
		var _g = arg.byteLength;
		while(_g1 < _g) {
			var i = _g1++;
			this[i + offset] = a[i];
		}
	} else if((arg instanceof Array) && arg.__enum__ == null) {
		var a1 = arg;
		if(a1.length + offset > this.byteLength) {
			throw new js__$Boot_HaxeError("set() outside of range");
		}
		var _g11 = 0;
		var _g2 = a1.length;
		while(_g11 < _g2) {
			var i1 = _g11++;
			this[i1 + offset] = a1[i1];
		}
	} else {
		throw new js__$Boot_HaxeError("TODO");
	}
};
js_html_compat_Float32Array._subarray = function(start,end) {
	var a = js_html_compat_Float32Array._new(this.slice(start,end));
	a.byteOffset = start * 4;
	return a;
};
var js_html_compat_Uint8Array = function() { };
$hxClasses["js.html.compat.Uint8Array"] = js_html_compat_Uint8Array;
js_html_compat_Uint8Array.__name__ = ["js","html","compat","Uint8Array"];
js_html_compat_Uint8Array._new = function(arg1,offset,length) {
	var arr;
	if(typeof(arg1) == "number") {
		arr = [];
		var _g1 = 0;
		var _g = arg1;
		while(_g1 < _g) {
			var i = _g1++;
			arr[i] = 0;
		}
		arr.byteLength = arr.length;
		arr.byteOffset = 0;
		arr.buffer = new js_html_compat_ArrayBuffer(arr);
	} else if(js_Boot.__instanceof(arg1,js_html_compat_ArrayBuffer)) {
		var buffer = arg1;
		if(offset == null) {
			offset = 0;
		}
		if(length == null) {
			length = buffer.byteLength - offset;
		}
		if(offset == 0) {
			arr = buffer.a;
		} else {
			arr = buffer.a.slice(offset,offset + length);
		}
		arr.byteLength = arr.length;
		arr.byteOffset = offset;
		arr.buffer = buffer;
	} else if((arg1 instanceof Array) && arg1.__enum__ == null) {
		arr = arg1.slice();
		arr.byteLength = arr.length;
		arr.byteOffset = 0;
		arr.buffer = new js_html_compat_ArrayBuffer(arr);
	} else {
		throw new js__$Boot_HaxeError("TODO " + Std.string(arg1));
	}
	arr.subarray = js_html_compat_Uint8Array._subarray;
	arr.set = js_html_compat_Uint8Array._set;
	return arr;
};
js_html_compat_Uint8Array._set = function(arg,offset) {
	if(js_Boot.__instanceof(arg.buffer,js_html_compat_ArrayBuffer)) {
		var a = arg;
		if(arg.byteLength + offset > this.byteLength) {
			throw new js__$Boot_HaxeError("set() outside of range");
		}
		var _g1 = 0;
		var _g = arg.byteLength;
		while(_g1 < _g) {
			var i = _g1++;
			this[i + offset] = a[i];
		}
	} else if((arg instanceof Array) && arg.__enum__ == null) {
		var a1 = arg;
		if(a1.length + offset > this.byteLength) {
			throw new js__$Boot_HaxeError("set() outside of range");
		}
		var _g11 = 0;
		var _g2 = a1.length;
		while(_g11 < _g2) {
			var i1 = _g11++;
			this[i1 + offset] = a1[i1];
		}
	} else {
		throw new js__$Boot_HaxeError("TODO");
	}
};
js_html_compat_Uint8Array._subarray = function(start,end) {
	var a = js_html_compat_Uint8Array._new(this.slice(start,end));
	a.byteOffset = start;
	return a;
};
var js_jquery_JqEltsIterator = function(j) {
	this.i = 0;
	this.j = j;
};
$hxClasses["js.jquery.JqEltsIterator"] = js_jquery_JqEltsIterator;
js_jquery_JqEltsIterator.__name__ = ["js","jquery","JqEltsIterator"];
js_jquery_JqEltsIterator.prototype = {
	j: null
	,i: null
	,hasNext: function() {
		return this.i < this.j.length;
	}
	,next: function() {
		return $(this.j[this.i++]);
	}
	,__class__: js_jquery_JqEltsIterator
};
var js_jquery_JqIterator = function(j) {
	this.i = 0;
	this.j = j;
};
$hxClasses["js.jquery.JqIterator"] = js_jquery_JqIterator;
js_jquery_JqIterator.__name__ = ["js","jquery","JqIterator"];
js_jquery_JqIterator.prototype = {
	j: null
	,i: null
	,hasNext: function() {
		return this.i < this.j.length;
	}
	,next: function() {
		return this.j[this.i++];
	}
	,__class__: js_jquery_JqIterator
};
var tjson_TJSON = function() { };
$hxClasses["tjson.TJSON"] = tjson_TJSON;
tjson_TJSON.__name__ = ["tjson","TJSON"];
tjson_TJSON.parse = function(json,fileName,stringProcessor) {
	if(fileName == null) {
		fileName = "JSON Data";
	}
	var t = new tjson_TJSONParser(json,fileName,stringProcessor);
	return t.doParse();
};
tjson_TJSON.encode = function(obj,style,useCache) {
	if(useCache == null) {
		useCache = true;
	}
	var t = new tjson_TJSONEncoder(useCache);
	return t.doEncode(obj,style);
};
var tjson_TJSONParser = function(vjson,vfileName,stringProcessor) {
	if(vfileName == null) {
		vfileName = "JSON Data";
	}
	this.json = vjson;
	this.fileName = vfileName;
	this.currentLine = 1;
	this.lastSymbolQuoted = false;
	this.pos = 0;
	this.floatRegex = new EReg("^-?[0-9]*\\.[0-9]+$","");
	this.intRegex = new EReg("^-?[0-9]+$","");
	this.strProcessor = stringProcessor == null ? $bind(this,this.defaultStringProcessor) : stringProcessor;
	this.cache = [];
};
$hxClasses["tjson.TJSONParser"] = tjson_TJSONParser;
tjson_TJSONParser.__name__ = ["tjson","TJSONParser"];
tjson_TJSONParser.prototype = {
	pos: null
	,json: null
	,lastSymbolQuoted: null
	,fileName: null
	,currentLine: null
	,cache: null
	,floatRegex: null
	,intRegex: null
	,strProcessor: null
	,doParse: function() {
		try {
			var _g = this.getNextSymbol();
			switch(_g) {
			case "[":
				return this.doArray();
			case "{":
				return this.doObject();
			default:
				var s = _g;
				return this.convertSymbolToProperType(s);
			}
		} catch( e ) {
			if (e instanceof js__$Boot_HaxeError) e = e.val;
			if( js_Boot.__instanceof(e,String) ) {
				throw new js__$Boot_HaxeError(this.fileName + " on line " + this.currentLine + ": " + e);
			} else throw(e);
		}
	}
	,doObject: function() {
		var o = { };
		var val = "";
		var key;
		var isClassOb = false;
		this.cache.push(o);
		while(this.pos < this.json.length) {
			key = this.getNextSymbol();
			if(key == "," && !this.lastSymbolQuoted) {
				continue;
			}
			if(key == "}" && !this.lastSymbolQuoted) {
				if(isClassOb && o.TJ_unserialize != null) {
					o.TJ_unserialize();
				}
				return o;
			}
			var seperator = this.getNextSymbol();
			if(seperator != ":") {
				throw new js__$Boot_HaxeError("Expected ':' but got '" + seperator + "' instead.");
			}
			var v = this.getNextSymbol();
			if(key == "_hxcls") {
				var cls = Type.resolveClass(v);
				if(cls == null) {
					throw new js__$Boot_HaxeError("Invalid class name - " + v);
				}
				o = Type.createEmptyInstance(cls);
				this.cache.pop();
				this.cache.push(o);
				isClassOb = true;
				continue;
			}
			if(v == "{" && !this.lastSymbolQuoted) {
				val = this.doObject();
			} else if(v == "[" && !this.lastSymbolQuoted) {
				val = this.doArray();
			} else {
				val = this.convertSymbolToProperType(v);
			}
			o[key] = val;
		}
		throw new js__$Boot_HaxeError("Unexpected end of file. Expected '}'");
	}
	,doArray: function() {
		var a = [];
		var val;
		while(this.pos < this.json.length) {
			val = this.getNextSymbol();
			if(val == "," && !this.lastSymbolQuoted) {
				continue;
			} else if(val == "]" && !this.lastSymbolQuoted) {
				return a;
			} else if(val == "{" && !this.lastSymbolQuoted) {
				val = this.doObject();
			} else if(val == "[" && !this.lastSymbolQuoted) {
				val = this.doArray();
			} else {
				val = this.convertSymbolToProperType(val);
			}
			a.push(val);
		}
		throw new js__$Boot_HaxeError("Unexpected end of file. Expected ']'");
	}
	,convertSymbolToProperType: function(symbol) {
		if(this.lastSymbolQuoted) {
			if(StringTools.startsWith(symbol,tjson_TJSON.OBJECT_REFERENCE_PREFIX)) {
				var idx = Std.parseInt(HxOverrides.substr(symbol,tjson_TJSON.OBJECT_REFERENCE_PREFIX.length,null));
				return this.cache[idx];
			}
			return symbol;
		}
		if(this.looksLikeFloat(symbol)) {
			return parseFloat(symbol);
		}
		if(this.looksLikeInt(symbol)) {
			return Std.parseInt(symbol);
		}
		if(symbol.toLowerCase() == "true") {
			return true;
		}
		if(symbol.toLowerCase() == "false") {
			return false;
		}
		if(symbol.toLowerCase() == "null") {
			return null;
		}
		return symbol;
	}
	,looksLikeFloat: function(s) {
		if(!this.floatRegex.match(s)) {
			if(this.intRegex.match(s)) {
				var intStr = this.intRegex.matched(0);
				if(HxOverrides.cca(intStr,0) == 45) {
					return intStr > "-2147483648";
				} else {
					return intStr > "2147483647";
				}
			} else {
				return false;
			}
		} else {
			return true;
		}
	}
	,looksLikeInt: function(s) {
		return this.intRegex.match(s);
	}
	,getNextSymbol: function() {
		this.lastSymbolQuoted = false;
		var c = "";
		var inQuote = false;
		var quoteType = "";
		var symbol = "";
		var inEscape = false;
		var inSymbol = false;
		var inLineComment = false;
		var inBlockComment = false;
		while(this.pos < this.json.length) {
			c = this.json.charAt(this.pos++);
			if(c == "\n" && !inSymbol) {
				this.currentLine++;
			}
			if(inLineComment) {
				if(c == "\n" || c == "\r") {
					inLineComment = false;
					this.pos++;
				}
				continue;
			}
			if(inBlockComment) {
				if(c == "*" && this.json.charAt(this.pos) == "/") {
					inBlockComment = false;
					this.pos++;
				}
				continue;
			}
			if(inQuote) {
				if(inEscape) {
					inEscape = false;
					if(c == "'" || c == "\"") {
						symbol += c;
						continue;
					}
					if(c == "t") {
						symbol += "\t";
						continue;
					}
					if(c == "n") {
						symbol += "\n";
						continue;
					}
					if(c == "\\") {
						symbol += "\\";
						continue;
					}
					if(c == "r") {
						symbol += "\r";
						continue;
					}
					if(c == "/") {
						symbol += "/";
						continue;
					}
					if(c == "u") {
						var hexValue = 0;
						var _g = 0;
						while(_g < 4) {
							var i = _g++;
							if(this.pos >= this.json.length) {
								throw new js__$Boot_HaxeError("Unfinished UTF8 character");
							}
							var nc = HxOverrides.cca(this.json,this.pos++);
							hexValue <<= 4;
							if(nc >= 48 && nc <= 57) {
								hexValue += nc - 48;
							} else if(nc >= 65 && nc <= 70) {
								hexValue += 10 + nc - 65;
							} else if(nc >= 97 && nc <= 102) {
								hexValue += 10 + nc - 95;
							} else {
								throw new js__$Boot_HaxeError("Not a hex digit");
							}
						}
						var utf = new haxe_Utf8();
						utf.__b += String.fromCharCode(hexValue);
						symbol += utf.__b;
						continue;
					}
					throw new js__$Boot_HaxeError("Invalid escape sequence '\\" + c + "'");
				} else {
					if(c == "\\") {
						inEscape = true;
						continue;
					}
					if(c == quoteType) {
						return symbol;
					}
					symbol += c;
					continue;
				}
			} else if(c == "/") {
				var c2 = this.json.charAt(this.pos);
				if(c2 == "/") {
					inLineComment = true;
					this.pos++;
					continue;
				} else if(c2 == "*") {
					inBlockComment = true;
					this.pos++;
					continue;
				}
			}
			if(inSymbol) {
				if(c == " " || c == "\n" || c == "\r" || c == "\t" || c == "," || c == ":" || c == "}" || c == "]") {
					this.pos--;
					return symbol;
				} else {
					symbol += c;
					continue;
				}
			} else {
				if(c == " " || c == "\t" || c == "\n" || c == "\r") {
					continue;
				}
				if(c == "{" || c == "}" || c == "[" || c == "]" || c == "," || c == ":") {
					return c;
				}
				if(c == "'" || c == "\"") {
					inQuote = true;
					quoteType = c;
					this.lastSymbolQuoted = true;
					continue;
				} else {
					inSymbol = true;
					symbol = c;
					continue;
				}
			}
		}
		if(inQuote) {
			throw new js__$Boot_HaxeError("Unexpected end of data. Expected ( " + quoteType + " )");
		}
		return symbol;
	}
	,defaultStringProcessor: function(str) {
		return str;
	}
	,__class__: tjson_TJSONParser
};
var tjson_TJSONEncoder = function(useCache) {
	if(useCache == null) {
		useCache = true;
	}
	this.uCache = useCache;
	if(this.uCache) {
		this.cache = [];
	}
};
$hxClasses["tjson.TJSONEncoder"] = tjson_TJSONEncoder;
tjson_TJSONEncoder.__name__ = ["tjson","TJSONEncoder"];
tjson_TJSONEncoder.prototype = {
	cache: null
	,uCache: null
	,doEncode: function(obj,style) {
		if(!Reflect.isObject(obj)) {
			throw new js__$Boot_HaxeError("Provided object is not an object.");
		}
		var st;
		if(js_Boot.__instanceof(style,tjson_EncodeStyle)) {
			st = style;
		} else if(style == "fancy") {
			st = new tjson_FancyStyle();
		} else {
			st = new tjson_SimpleStyle();
		}
		var buffer_b = "";
		if((obj instanceof Array) && obj.__enum__ == null || js_Boot.__instanceof(obj,List)) {
			buffer_b += Std.string(this.encodeIterable(obj,st,0));
		} else if(js_Boot.__instanceof(obj,haxe_ds_StringMap)) {
			buffer_b += Std.string(this.encodeMap(obj,st,0));
		} else {
			this.cacheEncode(obj);
			buffer_b += Std.string(this.encodeObject(obj,st,0));
		}
		return buffer_b;
	}
	,encodeObject: function(obj,style,depth) {
		var buffer_b = "";
		buffer_b += Std.string(style.beginObject(depth));
		var fieldCount = 0;
		var fields;
		var dontEncodeFields = null;
		var o = obj;
		var cls = o == null ? null : js_Boot.getClass(o);
		if(cls != null) {
			fields = Type.getInstanceFields(cls);
		} else {
			fields = Reflect.fields(obj);
		}
		var _g = Type["typeof"](obj);
		if(_g[1] == 6) {
			var c = _g[2];
			if(fieldCount++ > 0) {
				buffer_b += Std.string(style.entrySeperator(depth));
			} else {
				buffer_b += Std.string(style.firstEntry(depth));
			}
			buffer_b += Std.string("\"_hxcls\"" + style.keyValueSeperator(depth));
			buffer_b += Std.string(this.encodeValue(Type.getClassName(c),style,depth));
			if(obj.TJ_noEncode != null) {
				dontEncodeFields = obj.TJ_noEncode();
			}
		}
		var _g1 = 0;
		while(_g1 < fields.length) {
			var field = fields[_g1];
			++_g1;
			if(dontEncodeFields != null && dontEncodeFields.indexOf(field) >= 0) {
				continue;
			}
			var value = Reflect.field(obj,field);
			var vStr = this.encodeValue(value,style,depth);
			if(vStr != null) {
				if(fieldCount++ > 0) {
					buffer_b += Std.string(style.entrySeperator(depth));
				} else {
					buffer_b += Std.string(style.firstEntry(depth));
				}
				buffer_b += Std.string("\"" + field + "\"" + style.keyValueSeperator(depth) + vStr);
			}
		}
		buffer_b += Std.string(style.endObject(depth));
		return buffer_b;
	}
	,encodeMap: function(obj,style,depth) {
		var buffer_b = "";
		buffer_b += Std.string(style.beginObject(depth));
		var fieldCount = 0;
		var field = obj.keys();
		while(field.hasNext()) {
			var field1 = field.next();
			if(fieldCount++ > 0) {
				buffer_b += Std.string(style.entrySeperator(depth));
			} else {
				buffer_b += Std.string(style.firstEntry(depth));
			}
			var value = obj.get(field1);
			buffer_b += Std.string("\"" + field1 + "\"" + style.keyValueSeperator(depth));
			buffer_b += Std.string(this.encodeValue(value,style,depth));
		}
		buffer_b += Std.string(style.endObject(depth));
		return buffer_b;
	}
	,encodeIterable: function(obj,style,depth) {
		var buffer_b = "";
		buffer_b += Std.string(style.beginArray(depth));
		var fieldCount = 0;
		var value = $iterator(obj)();
		while(value.hasNext()) {
			var value1 = value.next();
			if(fieldCount++ > 0) {
				buffer_b += Std.string(style.entrySeperator(depth));
			} else {
				buffer_b += Std.string(style.firstEntry(depth));
			}
			buffer_b += Std.string(this.encodeValue(value1,style,depth));
		}
		buffer_b += Std.string(style.endArray(depth));
		return buffer_b;
	}
	,cacheEncode: function(value) {
		if(!this.uCache) {
			return null;
		}
		var _g1 = 0;
		var _g = this.cache.length;
		while(_g1 < _g) {
			var c = _g1++;
			if(this.cache[c] == value) {
				return "\"" + tjson_TJSON.OBJECT_REFERENCE_PREFIX + c + "\"";
			}
		}
		this.cache.push(value);
		return null;
	}
	,encodeValue: function(value,style,depth) {
		if(typeof(value) == "number" && ((value | 0) === value) || typeof(value) == "number") {
			return value;
		} else if((value instanceof Array) && value.__enum__ == null || js_Boot.__instanceof(value,List)) {
			var v = value;
			return this.encodeIterable(v,style,depth + 1);
		} else if(js_Boot.__instanceof(value,List)) {
			var v1 = value;
			return this.encodeIterable(v1,style,depth + 1);
		} else if(js_Boot.__instanceof(value,haxe_ds_StringMap)) {
			return this.encodeMap(value,style,depth + 1);
		} else if(typeof(value) == "string") {
			return "\"" + StringTools.replace(StringTools.replace(StringTools.replace(StringTools.replace(Std.string(value),"\\","\\\\"),"\n","\\n"),"\r","\\r"),"\"","\\\"") + "\"";
		} else if(typeof(value) == "boolean") {
			return value;
		} else if(Reflect.isObject(value)) {
			var ret = this.cacheEncode(value);
			if(ret != null) {
				return ret;
			}
			return this.encodeObject(value,style,depth + 1);
		} else if(value == null) {
			return "null";
		} else {
			return null;
		}
	}
	,__class__: tjson_TJSONEncoder
};
var tjson_EncodeStyle = function() { };
$hxClasses["tjson.EncodeStyle"] = tjson_EncodeStyle;
tjson_EncodeStyle.__name__ = ["tjson","EncodeStyle"];
tjson_EncodeStyle.prototype = {
	beginObject: null
	,endObject: null
	,beginArray: null
	,endArray: null
	,firstEntry: null
	,entrySeperator: null
	,keyValueSeperator: null
	,__class__: tjson_EncodeStyle
};
var tjson_SimpleStyle = function() {
};
$hxClasses["tjson.SimpleStyle"] = tjson_SimpleStyle;
tjson_SimpleStyle.__name__ = ["tjson","SimpleStyle"];
tjson_SimpleStyle.__interfaces__ = [tjson_EncodeStyle];
tjson_SimpleStyle.prototype = {
	beginObject: function(depth) {
		return "{";
	}
	,endObject: function(depth) {
		return "}";
	}
	,beginArray: function(depth) {
		return "[";
	}
	,endArray: function(depth) {
		return "]";
	}
	,firstEntry: function(depth) {
		return "";
	}
	,entrySeperator: function(depth) {
		return ",";
	}
	,keyValueSeperator: function(depth) {
		return ":";
	}
	,__class__: tjson_SimpleStyle
};
var tjson_FancyStyle = function(tab) {
	if(tab == null) {
		tab = "    ";
	}
	this.tab = tab;
	this.charTimesNCache = [""];
};
$hxClasses["tjson.FancyStyle"] = tjson_FancyStyle;
tjson_FancyStyle.__name__ = ["tjson","FancyStyle"];
tjson_FancyStyle.__interfaces__ = [tjson_EncodeStyle];
tjson_FancyStyle.prototype = {
	tab: null
	,beginObject: function(depth) {
		return "{\n";
	}
	,endObject: function(depth) {
		return "\n" + this.charTimesN(depth) + "}";
	}
	,beginArray: function(depth) {
		return "[\n";
	}
	,endArray: function(depth) {
		return "\n" + this.charTimesN(depth) + "]";
	}
	,firstEntry: function(depth) {
		return this.charTimesN(depth + 1) + " ";
	}
	,entrySeperator: function(depth) {
		return "\n" + this.charTimesN(depth + 1) + ",";
	}
	,keyValueSeperator: function(depth) {
		return " : ";
	}
	,charTimesNCache: null
	,charTimesN: function(n) {
		if(n < this.charTimesNCache.length) {
			return this.charTimesNCache[n];
		} else {
			var tmp = this.charTimesN(n - 1);
			return this.charTimesNCache[n] = tmp + this.tab;
		}
	}
	,__class__: tjson_FancyStyle
};
function $iterator(o) { if( o instanceof Array ) return function() { return HxOverrides.iter(o); }; return typeof(o.iterator) == 'function' ? $bind(o,o.iterator) : o.iterator; }
var $_, $fid = 0;
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $fid++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = function(){ return f.method.apply(f.scope, arguments); }; f.scope = o; f.method = m; o.hx__closures__[m.__id__] = f; } return f; }
function $arrayPush(x) { this.push(x); }
$hxClasses["Math"] = Math;
String.prototype.__class__ = $hxClasses["String"] = String;
String.__name__ = ["String"];
$hxClasses["Array"] = Array;
Array.__name__ = ["Array"];
Date.prototype.__class__ = $hxClasses["Date"] = Date;
Date.__name__ = ["Date"];
var Int = $hxClasses["Int"] = { __name__ : ["Int"]};
var Dynamic = $hxClasses["Dynamic"] = { __name__ : ["Dynamic"]};
var Float = $hxClasses["Float"] = Number;
Float.__name__ = ["Float"];
var Bool = $hxClasses["Bool"] = Boolean;
Bool.__ename__ = ["Bool"];
var Class = $hxClasses["Class"] = { __name__ : ["Class"]};
var Enum = { };
var Void = $hxClasses["Void"] = { __ename__ : ["Void"]};
var __map_reserved = {};
var ArrayBuffer = $global.ArrayBuffer || js_html_compat_ArrayBuffer;
if(ArrayBuffer.prototype.slice == null) {
	ArrayBuffer.prototype.slice = js_html_compat_ArrayBuffer.sliceImpl;
}
var DataView = $global.DataView || js_html_compat_DataView;
var Float32Array = $global.Float32Array || js_html_compat_Float32Array._new;
var Uint8Array = $global.Uint8Array || js_html_compat_Uint8Array._new;
if(typeof($) != "undefined" && $.fn != null) {
	$.fn.elements = function() {
		return new js_jquery_JqEltsIterator(this);
	};
}
if(typeof($) != "undefined" && $.fn != null) {
	$.fn.iterator = function() {
		return new js_jquery_JqIterator(this);
	};
}
StringTools.winMetaCharacters = [32,40,41,37,33,94,34,60,62,38,124,10,13,44,59];
com_mun_global_Constant.portRadius = 3;
com_mun_global_Constant.pointToLineDistance = 5;
com_mun_global_Constant.pointToEndpointDistance = 6;
com_mun_global_Constant.PIXELRATIO = 1;
com_mun_global_Constant.TRANSFORM_X_DELTA = 40;
com_mun_global_Constant.TRANSFORM_Y_DELTA = 40;
com_mun_global_Constant.TRANSFORM_ZOOM_IN_RATE = 1.5;
com_mun_global_Constant.TRANSFORM_ZOOM_OUT_RATE = 0.5;
haxe__$Int32_Int32_$Impl_$._mul = Math.imul != null ? Math.imul : function(a,b) {
	return a * (b & 65535) + (a * (b >>> 16) << 16 | 0) | 0;
};
haxe_Serializer.USE_CACHE = false;
haxe_Serializer.USE_ENUM_INDEX = false;
haxe_Serializer.BASE64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789%:";
haxe_Serializer.BASE64_CODES = null;
haxe_Unserializer.DEFAULT_RESOLVER = new haxe__$Unserializer_DefaultResolver();
haxe_Unserializer.BASE64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789%:";
haxe_Unserializer.CODES = null;
haxe_ds_ObjectMap.count = 0;
haxe_io_FPHelper.i64tmp = (function($this) {
	var $r;
	var this1 = new haxe__$Int64__$_$_$Int64(0,0);
	$r = this1;
	return $r;
}(this));
haxe_io_FPHelper.LN2 = 0.6931471805599453;
js_Boot.__toStr = ({ }).toString;
js_html_compat_Float32Array.BYTES_PER_ELEMENT = 4;
js_html_compat_Uint8Array.BYTES_PER_ELEMENT = 1;
tjson_TJSON.OBJECT_REFERENCE_PREFIX = "@~obRef#";
Test.main();
})(typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this);
