// Generated by Haxe 3.4.2
(function ($global) { "use strict";
var $hxClasses = {},$estr = function() { return js_Boot.__string_rec(this,''); };
function $extend(from, fields) {
	function Inherit() {} Inherit.prototype = from; var proto = new Inherit();
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var EReg = function(r,opt) {
	this.r = new RegExp(r,opt.split("u").join(""));
};
$hxClasses["EReg"] = EReg;
EReg.__name__ = ["EReg"];
EReg.prototype = {
	r: null
	,match: function(s) {
		if(this.r.global) {
			this.r.lastIndex = 0;
		}
		this.r.m = this.r.exec(s);
		this.r.s = s;
		return this.r.m != null;
	}
	,matched: function(n) {
		if(this.r.m != null && n >= 0 && n < this.r.m.length) {
			return this.r.m[n];
		} else {
			throw new js__$Boot_HaxeError("EReg::matched");
		}
	}
	,matchedLeft: function() {
		if(this.r.m == null) {
			throw new js__$Boot_HaxeError("No string matched");
		}
		return HxOverrides.substr(this.r.s,0,this.r.m.index);
	}
	,matchedRight: function() {
		if(this.r.m == null) {
			throw new js__$Boot_HaxeError("No string matched");
		}
		var sz = this.r.m.index + this.r.m[0].length;
		return HxOverrides.substr(this.r.s,sz,this.r.s.length - sz);
	}
	,matchedPos: function() {
		if(this.r.m == null) {
			throw new js__$Boot_HaxeError("No string matched");
		}
		return { pos : this.r.m.index, len : this.r.m[0].length};
	}
	,matchSub: function(s,pos,len) {
		if(len == null) {
			len = -1;
		}
		if(this.r.global) {
			this.r.lastIndex = pos;
			var tmp = this.r;
			var tmp1 = len < 0 ? s : HxOverrides.substr(s,0,pos + len);
			this.r.m = tmp.exec(tmp1);
			var b = this.r.m != null;
			if(b) {
				this.r.s = s;
			}
			return b;
		} else {
			var b1 = this.match(len < 0 ? HxOverrides.substr(s,pos,null) : HxOverrides.substr(s,pos,len));
			if(b1) {
				this.r.s = s;
				this.r.m.index += pos;
			}
			return b1;
		}
	}
	,split: function(s) {
		var d = "#__delim__#";
		return s.replace(this.r,d).split(d);
	}
	,replace: function(s,by) {
		return s.replace(this.r,by);
	}
	,map: function(s,f) {
		var offset = 0;
		var buf_b = "";
		while(true) {
			if(offset >= s.length) {
				break;
			} else if(!this.matchSub(s,offset)) {
				buf_b += Std.string(HxOverrides.substr(s,offset,null));
				break;
			}
			var p = this.matchedPos();
			buf_b += Std.string(HxOverrides.substr(s,offset,p.pos - offset));
			buf_b += Std.string(f(this));
			if(p.len == 0) {
				buf_b += Std.string(HxOverrides.substr(s,p.pos,1));
				offset = p.pos + 1;
			} else {
				offset = p.pos + p.len;
			}
			if(!this.r.global) {
				break;
			}
		}
		if(!this.r.global && offset > 0 && offset < s.length) {
			buf_b += Std.string(HxOverrides.substr(s,offset,null));
		}
		return buf_b;
	}
	,__class__: EReg
};
var HxOverrides = function() { };
$hxClasses["HxOverrides"] = HxOverrides;
HxOverrides.__name__ = ["HxOverrides"];
HxOverrides.dateStr = function(date) {
	var m = date.getMonth() + 1;
	var d = date.getDate();
	var h = date.getHours();
	var mi = date.getMinutes();
	var s = date.getSeconds();
	return date.getFullYear() + "-" + (m < 10 ? "0" + m : "" + m) + "-" + (d < 10 ? "0" + d : "" + d) + " " + (h < 10 ? "0" + h : "" + h) + ":" + (mi < 10 ? "0" + mi : "" + mi) + ":" + (s < 10 ? "0" + s : "" + s);
};
HxOverrides.strDate = function(s) {
	var _g = s.length;
	switch(_g) {
	case 8:
		var k = s.split(":");
		var d = new Date();
		d["setTime"](0);
		d["setUTCHours"](k[0]);
		d["setUTCMinutes"](k[1]);
		d["setUTCSeconds"](k[2]);
		return d;
	case 10:
		var k1 = s.split("-");
		return new Date(k1[0],k1[1] - 1,k1[2],0,0,0);
	case 19:
		var k2 = s.split(" ");
		var y = k2[0].split("-");
		var t = k2[1].split(":");
		return new Date(y[0],y[1] - 1,y[2],t[0],t[1],t[2]);
	default:
		throw new js__$Boot_HaxeError("Invalid date format : " + s);
	}
};
HxOverrides.cca = function(s,index) {
	var x = s.charCodeAt(index);
	if(x != x) {
		return undefined;
	}
	return x;
};
HxOverrides.substr = function(s,pos,len) {
	if(len == null) {
		len = s.length;
	} else if(len < 0) {
		if(pos == 0) {
			len = s.length + len;
		} else {
			return "";
		}
	}
	return s.substr(pos,len);
};
HxOverrides.indexOf = function(a,obj,i) {
	var len = a.length;
	if(i < 0) {
		i += len;
		if(i < 0) {
			i = 0;
		}
	}
	while(i < len) {
		if(a[i] === obj) {
			return i;
		}
		++i;
	}
	return -1;
};
HxOverrides.lastIndexOf = function(a,obj,i) {
	var len = a.length;
	if(i >= len) {
		i = len - 1;
	} else if(i < 0) {
		i += len;
	}
	while(i >= 0) {
		if(a[i] === obj) {
			return i;
		}
		--i;
	}
	return -1;
};
HxOverrides.remove = function(a,obj) {
	var i = a.indexOf(obj);
	if(i == -1) {
		return false;
	}
	a.splice(i,1);
	return true;
};
HxOverrides.iter = function(a) {
	return { cur : 0, arr : a, hasNext : function() {
		return this.cur < this.arr.length;
	}, next : function() {
		return this.arr[this.cur++];
	}};
};
var IntIterator = function(min,max) {
	this.min = min;
	this.max = max;
};
$hxClasses["IntIterator"] = IntIterator;
IntIterator.__name__ = ["IntIterator"];
IntIterator.prototype = {
	min: null
	,max: null
	,hasNext: function() {
		return this.min < this.max;
	}
	,next: function() {
		return this.min++;
	}
	,__class__: IntIterator
};
Math.__name__ = ["Math"];
var Reflect = function() { };
$hxClasses["Reflect"] = Reflect;
Reflect.__name__ = ["Reflect"];
Reflect.hasField = function(o,field) {
	return Object.prototype.hasOwnProperty.call(o,field);
};
Reflect.field = function(o,field) {
	try {
		return o[field];
	} catch( e ) {
		return null;
	}
};
Reflect.setField = function(o,field,value) {
	o[field] = value;
};
Reflect.getProperty = function(o,field) {
	var tmp;
	if(o == null) {
		return null;
	} else {
		var tmp1;
		if(o.__properties__) {
			tmp = o.__properties__["get_" + field];
			tmp1 = tmp;
		} else {
			tmp1 = false;
		}
		if(tmp1) {
			return o[tmp]();
		} else {
			return o[field];
		}
	}
};
Reflect.setProperty = function(o,field,value) {
	var tmp;
	var tmp1;
	if(o.__properties__) {
		tmp = o.__properties__["set_" + field];
		tmp1 = tmp;
	} else {
		tmp1 = false;
	}
	if(tmp1) {
		o[tmp](value);
	} else {
		o[field] = value;
	}
};
Reflect.callMethod = function(o,func,args) {
	return func.apply(o,args);
};
Reflect.fields = function(o) {
	var a = [];
	if(o != null) {
		var hasOwnProperty = Object.prototype.hasOwnProperty;
		for( var f in o ) {
		if(f != "__id__" && f != "hx__closures__" && hasOwnProperty.call(o,f)) {
			a.push(f);
		}
		}
	}
	return a;
};
Reflect.isFunction = function(f) {
	if(typeof(f) == "function") {
		return !(f.__name__ || f.__ename__);
	} else {
		return false;
	}
};
Reflect.compare = function(a,b) {
	if(a == b) {
		return 0;
	} else if(a > b) {
		return 1;
	} else {
		return -1;
	}
};
Reflect.compareMethods = function(f1,f2) {
	if(f1 == f2) {
		return true;
	}
	if(!Reflect.isFunction(f1) || !Reflect.isFunction(f2)) {
		return false;
	}
	if(f1.scope == f2.scope && f1.method == f2.method) {
		return f1.method != null;
	} else {
		return false;
	}
};
Reflect.isObject = function(v) {
	if(v == null) {
		return false;
	}
	var t = typeof(v);
	if(!(t == "string" || t == "object" && v.__enum__ == null)) {
		if(t == "function") {
			return (v.__name__ || v.__ename__) != null;
		} else {
			return false;
		}
	} else {
		return true;
	}
};
Reflect.isEnumValue = function(v) {
	if(v != null) {
		return v.__enum__ != null;
	} else {
		return false;
	}
};
Reflect.deleteField = function(o,field) {
	if(!Object.prototype.hasOwnProperty.call(o,field)) {
		return false;
	}
	delete(o[field]);
	return true;
};
Reflect.copy = function(o) {
	var o2 = { };
	var _g = 0;
	var _g1 = Reflect.fields(o);
	while(_g < _g1.length) {
		var f = _g1[_g];
		++_g;
		o2[f] = Reflect.field(o,f);
	}
	return o2;
};
Reflect.makeVarArgs = function(f) {
	return function() {
		var a = Array.prototype.slice.call(arguments);
		return f(a);
	};
};
var Std = function() { };
$hxClasses["Std"] = Std;
Std.__name__ = ["Std"];
Std["is"] = function(v,t) {
	return js_Boot.__instanceof(v,t);
};
Std.instance = function(value,c) {
	if((value instanceof c)) {
		return value;
	} else {
		return null;
	}
};
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
Std["int"] = function(x) {
	return x | 0;
};
Std.parseInt = function(x) {
	var v = parseInt(x,10);
	if(v == 0 && (HxOverrides.cca(x,1) == 120 || HxOverrides.cca(x,1) == 88)) {
		v = parseInt(x);
	}
	if(isNaN(v)) {
		return null;
	}
	return v;
};
Std.parseFloat = function(x) {
	return parseFloat(x);
};
Std.random = function(x) {
	if(x <= 0) {
		return 0;
	} else {
		return Math.floor(Math.random() * x);
	}
};
var StringBuf = function() {
	this.b = "";
};
$hxClasses["StringBuf"] = StringBuf;
StringBuf.__name__ = ["StringBuf"];
StringBuf.prototype = {
	b: null
	,get_length: function() {
		return this.b.length;
	}
	,add: function(x) {
		this.b += Std.string(x);
	}
	,addChar: function(c) {
		this.b += String.fromCharCode(c);
	}
	,addSub: function(s,pos,len) {
		this.b += len == null ? HxOverrides.substr(s,pos,null) : HxOverrides.substr(s,pos,len);
	}
	,toString: function() {
		return this.b;
	}
	,__class__: StringBuf
	,__properties__: {get_length:"get_length"}
};
var StringTools = function() { };
$hxClasses["StringTools"] = StringTools;
StringTools.__name__ = ["StringTools"];
StringTools.urlEncode = function(s) {
	return encodeURIComponent(s);
};
StringTools.urlDecode = function(s) {
	return decodeURIComponent(s.split("+").join(" "));
};
StringTools.htmlEscape = function(s,quotes) {
	s = s.split("&").join("&amp;").split("<").join("&lt;").split(">").join("&gt;");
	if(quotes) {
		return s.split("\"").join("&quot;").split("'").join("&#039;");
	} else {
		return s;
	}
};
StringTools.htmlUnescape = function(s) {
	return s.split("&gt;").join(">").split("&lt;").join("<").split("&quot;").join("\"").split("&#039;").join("'").split("&amp;").join("&");
};
StringTools.startsWith = function(s,start) {
	if(s.length >= start.length) {
		return HxOverrides.substr(s,0,start.length) == start;
	} else {
		return false;
	}
};
StringTools.endsWith = function(s,end) {
	var elen = end.length;
	var slen = s.length;
	if(slen >= elen) {
		return HxOverrides.substr(s,slen - elen,elen) == end;
	} else {
		return false;
	}
};
StringTools.isSpace = function(s,pos) {
	var c = HxOverrides.cca(s,pos);
	if(!(c > 8 && c < 14)) {
		return c == 32;
	} else {
		return true;
	}
};
StringTools.ltrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,r)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,r,l - r);
	} else {
		return s;
	}
};
StringTools.rtrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,l - r - 1)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,0,l - r);
	} else {
		return s;
	}
};
StringTools.trim = function(s) {
	return StringTools.ltrim(StringTools.rtrim(s));
};
StringTools.lpad = function(s,c,l) {
	if(c.length <= 0) {
		return s;
	}
	while(s.length < l) s = c + s;
	return s;
};
StringTools.rpad = function(s,c,l) {
	if(c.length <= 0) {
		return s;
	}
	while(s.length < l) s += c;
	return s;
};
StringTools.replace = function(s,sub,by) {
	return s.split(sub).join(by);
};
StringTools.hex = function(n,digits) {
	var s = "";
	var hexChars = "0123456789ABCDEF";
	while(true) {
		s = hexChars.charAt(n & 15) + s;
		n >>>= 4;
		if(!(n > 0)) {
			break;
		}
	}
	if(digits != null) {
		while(s.length < digits) s = "0" + s;
	}
	return s;
};
StringTools.fastCodeAt = function(s,index) {
	return s.charCodeAt(index);
};
StringTools.isEof = function(c) {
	return c != c;
};
StringTools.quoteUnixArg = function(argument) {
	if(argument == "") {
		return "''";
	}
	if(!new EReg("[^a-zA-Z0-9_@%+=:,./-]","").match(argument)) {
		return argument;
	}
	return "'" + StringTools.replace(argument,"'","'\"'\"'") + "'";
};
StringTools.quoteWinArg = function(argument,escapeMetaCharacters) {
	if(!new EReg("^[^ \t\\\\\"]+$","").match(argument)) {
		var result_b = "";
		var needquote = argument.indexOf(" ") != -1 || argument.indexOf("\t") != -1 || argument == "";
		if(needquote) {
			result_b += "\"";
		}
		var bs_buf = new StringBuf();
		var _g1 = 0;
		var _g = argument.length;
		while(_g1 < _g) {
			var i = _g1++;
			var _g2 = HxOverrides.cca(argument,i);
			if(_g2 == null) {
				var c = _g2;
				if(bs_buf.b.length > 0) {
					result_b += Std.string(bs_buf.b);
					bs_buf = new StringBuf();
				}
				result_b += String.fromCharCode(c);
			} else {
				switch(_g2) {
				case 34:
					var bs = bs_buf.b;
					result_b += bs == null ? "null" : "" + bs;
					result_b += bs == null ? "null" : "" + bs;
					bs_buf = new StringBuf();
					result_b += "\\\"";
					break;
				case 92:
					bs_buf.b += "\\";
					break;
				default:
					var c1 = _g2;
					if(bs_buf.b.length > 0) {
						result_b += Std.string(bs_buf.b);
						bs_buf = new StringBuf();
					}
					result_b += String.fromCharCode(c1);
				}
			}
		}
		result_b += Std.string(bs_buf.b);
		if(needquote) {
			result_b += Std.string(bs_buf.b);
			result_b += "\"";
		}
		argument = result_b;
	}
	if(escapeMetaCharacters) {
		var result_b1 = "";
		var _g11 = 0;
		var _g3 = argument.length;
		while(_g11 < _g3) {
			var i1 = _g11++;
			var c2 = HxOverrides.cca(argument,i1);
			if(StringTools.winMetaCharacters.indexOf(c2) >= 0) {
				result_b1 += "^";
			}
			result_b1 += String.fromCharCode(c2);
		}
		return result_b1;
	} else {
		return argument;
	}
};
var Test = function() { };
$hxClasses["Test"] = Test;
Test.__name__ = ["Test"];
Test.canvas = null;
Test.cxt = null;
Test.main = function() {
	Test.canvas = window.document.getElementById("canvas");
	Test.cxt = Test.canvas.getContext("2d");
	var backingStoreRatioDynamic = Reflect.field(Test.cxt,"webKitBackingStorePixelRatio");
	if(backingStoreRatioDynamic == null) {
		backingStoreRatioDynamic = Reflect.field(Test.cxt,"mozBackingStorePixelRatio");
	}
	if(backingStoreRatioDynamic == null) {
		backingStoreRatioDynamic = Reflect.field(Test.cxt,"msBackingStorePixelRatio");
	}
	if(backingStoreRatioDynamic == null) {
		backingStoreRatioDynamic = Reflect.field(Test.cxt,"oBackingStorePixelRatio");
	}
	if(backingStoreRatioDynamic == null) {
		backingStoreRatioDynamic = Reflect.field(Test.cxt,"backingStorePixelRatio");
	}
	var backingStoreRatio = backingStoreRatioDynamic == null ? 1.0 : js_Boot.__cast(backingStoreRatioDynamic , Float);
	var pixelRatio = window.devicePixelRatio / backingStoreRatio;
	var oldWidth = window.innerWidth * 0.9;
	var oldHeight = window.innerHeight * 0.9;
	Test.canvas.width = oldWidth * pixelRatio;
	Test.canvas.height = oldHeight * pixelRatio;
	Test.canvas.style.width = oldWidth + "px";
	Test.canvas.style.height = oldHeight + "px";
	Test.cxt.scale(pixelRatio,pixelRatio);
	var drawingAdapter = new com_mun_view_drawingImpl_DrawingAdapter(Test.cxt);
	var circuitDiagram = new com_mun_model_component_CircuitDiagram();
	var updateCircuitDiagram = new com_mun_controller_componentUpdate_UpdateCircuitDiagram(circuitDiagram);
	circuitDiagram.set_commandManager(updateCircuitDiagram.get_commandManager());
	var updateToolBar = new com_mun_controller_componentUpdate_UpdateToolBar(updateCircuitDiagram);
	updateCircuitDiagram.setUpdateToolBar(updateToolBar);
	var updateCanvas = new com_mun_controller_componentUpdate_UpdateCanvas(Test.canvas,circuitDiagram,drawingAdapter);
	updateCircuitDiagram.setUpdateCanvas(updateCanvas);
	new com_mun_controller_mouseAction_ButtonClick(drawingAdapter,updateCircuitDiagram,pixelRatio);
	new com_mun_controller_mouseAction_CanvasListener(Test.canvas,updateCircuitDiagram,updateToolBar);
};
var ValueType = $hxClasses["ValueType"] = { __ename__ : ["ValueType"], __constructs__ : ["TNull","TInt","TFloat","TBool","TObject","TFunction","TClass","TEnum","TUnknown"] };
ValueType.TNull = ["TNull",0];
ValueType.TNull.toString = $estr;
ValueType.TNull.__enum__ = ValueType;
ValueType.TInt = ["TInt",1];
ValueType.TInt.toString = $estr;
ValueType.TInt.__enum__ = ValueType;
ValueType.TFloat = ["TFloat",2];
ValueType.TFloat.toString = $estr;
ValueType.TFloat.__enum__ = ValueType;
ValueType.TBool = ["TBool",3];
ValueType.TBool.toString = $estr;
ValueType.TBool.__enum__ = ValueType;
ValueType.TObject = ["TObject",4];
ValueType.TObject.toString = $estr;
ValueType.TObject.__enum__ = ValueType;
ValueType.TFunction = ["TFunction",5];
ValueType.TFunction.toString = $estr;
ValueType.TFunction.__enum__ = ValueType;
ValueType.TClass = function(c) { var $x = ["TClass",6,c]; $x.__enum__ = ValueType; $x.toString = $estr; return $x; };
ValueType.TEnum = function(e) { var $x = ["TEnum",7,e]; $x.__enum__ = ValueType; $x.toString = $estr; return $x; };
ValueType.TUnknown = ["TUnknown",8];
ValueType.TUnknown.toString = $estr;
ValueType.TUnknown.__enum__ = ValueType;
ValueType.__empty_constructs__ = [ValueType.TNull,ValueType.TInt,ValueType.TFloat,ValueType.TBool,ValueType.TObject,ValueType.TFunction,ValueType.TUnknown];
var Type = function() { };
$hxClasses["Type"] = Type;
Type.__name__ = ["Type"];
Type.getClass = function(o) {
	if(o == null) {
		return null;
	} else {
		return js_Boot.getClass(o);
	}
};
Type.getEnum = function(o) {
	if(o == null) {
		return null;
	}
	return o.__enum__;
};
Type.getSuperClass = function(c) {
	return c.__super__;
};
Type.getClassName = function(c) {
	var a = c.__name__;
	if(a == null) {
		return null;
	}
	return a.join(".");
};
Type.getEnumName = function(e) {
	var a = e.__ename__;
	return a.join(".");
};
Type.resolveClass = function(name) {
	var cl = $hxClasses[name];
	if(cl == null || !cl.__name__) {
		return null;
	}
	return cl;
};
Type.resolveEnum = function(name) {
	var e = $hxClasses[name];
	if(e == null || !e.__ename__) {
		return null;
	}
	return e;
};
Type.createInstance = function(cl,args) {
	var _g = args.length;
	switch(_g) {
	case 0:
		return new cl();
	case 1:
		return new cl(args[0]);
	case 2:
		return new cl(args[0],args[1]);
	case 3:
		return new cl(args[0],args[1],args[2]);
	case 4:
		return new cl(args[0],args[1],args[2],args[3]);
	case 5:
		return new cl(args[0],args[1],args[2],args[3],args[4]);
	case 6:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5]);
	case 7:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6]);
	case 8:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7]);
	case 9:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8]);
	case 10:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9]);
	case 11:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9],args[10]);
	case 12:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9],args[10],args[11]);
	case 13:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9],args[10],args[11],args[12]);
	case 14:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9],args[10],args[11],args[12],args[13]);
	default:
		throw new js__$Boot_HaxeError("Too many arguments");
	}
};
Type.createEmptyInstance = function(cl) {
	function empty() {}; empty.prototype = cl.prototype;
	return new empty();
};
Type.createEnum = function(e,constr,params) {
	var f = Reflect.field(e,constr);
	if(f == null) {
		throw new js__$Boot_HaxeError("No such constructor " + constr);
	}
	if(Reflect.isFunction(f)) {
		if(params == null) {
			throw new js__$Boot_HaxeError("Constructor " + constr + " need parameters");
		}
		return f.apply(e,params);
	}
	if(params != null && params.length != 0) {
		throw new js__$Boot_HaxeError("Constructor " + constr + " does not need parameters");
	}
	return f;
};
Type.createEnumIndex = function(e,index,params) {
	var c = e.__constructs__[index];
	if(c == null) {
		throw new js__$Boot_HaxeError(index + " is not a valid enum constructor index");
	}
	return Type.createEnum(e,c,params);
};
Type.getInstanceFields = function(c) {
	var a = [];
	for(var i in c.prototype) a.push(i);
	HxOverrides.remove(a,"__class__");
	HxOverrides.remove(a,"__properties__");
	return a;
};
Type.getClassFields = function(c) {
	var a = Reflect.fields(c);
	HxOverrides.remove(a,"__name__");
	HxOverrides.remove(a,"__interfaces__");
	HxOverrides.remove(a,"__properties__");
	HxOverrides.remove(a,"__super__");
	HxOverrides.remove(a,"__meta__");
	HxOverrides.remove(a,"prototype");
	return a;
};
Type.getEnumConstructs = function(e) {
	return e.__constructs__.slice();
};
Type["typeof"] = function(v) {
	var _g = typeof(v);
	switch(_g) {
	case "boolean":
		return ValueType.TBool;
	case "function":
		if(v.__name__ || v.__ename__) {
			return ValueType.TObject;
		}
		return ValueType.TFunction;
	case "number":
		if(Math.ceil(v) == v % 2147483648.0) {
			return ValueType.TInt;
		}
		return ValueType.TFloat;
	case "object":
		if(v == null) {
			return ValueType.TNull;
		}
		var e = v.__enum__;
		if(e != null) {
			return ValueType.TEnum(e);
		}
		var c = js_Boot.getClass(v);
		if(c != null) {
			return ValueType.TClass(c);
		}
		return ValueType.TObject;
	case "string":
		return ValueType.TClass(String);
	case "undefined":
		return ValueType.TNull;
	default:
		return ValueType.TUnknown;
	}
};
Type.enumEq = function(a,b) {
	if(a == b) {
		return true;
	}
	try {
		if(a[0] != b[0]) {
			return false;
		}
		var _g1 = 2;
		var _g = a.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(!Type.enumEq(a[i],b[i])) {
				return false;
			}
		}
		var e = a.__enum__;
		if(e != b.__enum__ || e == null) {
			return false;
		}
	} catch( e1 ) {
		return false;
	}
	return true;
};
Type.enumConstructor = function(e) {
	return e[0];
};
Type.enumParameters = function(e) {
	return e.slice(2);
};
Type.enumIndex = function(e) {
	return e[1];
};
Type.allEnums = function(e) {
	return e.__empty_constructs__;
};
var com_mun_controller_command_Command = function() { };
$hxClasses["com.mun.controller.command.Command"] = com_mun_controller_command_Command;
com_mun_controller_command_Command.__name__ = ["com","mun","controller","command","Command"];
com_mun_controller_command_Command.prototype = {
	undo: null
	,redo: null
	,execute: null
	,__class__: com_mun_controller_command_Command
};
var com_mun_controller_command_AddCommand = function(object,circuitDiagram) {
	this.object = { "link" : null, "component" : null, "endPoint" : null, "port" : null};
	this.link = object.link;
	this.component = object.component;
	this.circuitDiagram = circuitDiagram;
};
$hxClasses["com.mun.controller.command.AddCommand"] = com_mun_controller_command_AddCommand;
com_mun_controller_command_AddCommand.__name__ = ["com","mun","controller","command","AddCommand"];
com_mun_controller_command_AddCommand.__interfaces__ = [com_mun_controller_command_Command];
com_mun_controller_command_AddCommand.prototype = {
	link: null
	,component: null
	,circuitDiagram: null
	,object: null
	,undo: function() {
		this.object = { "link" : null, "component" : null, "endPoint" : null, "port" : null};
		if(this.link != null) {
			this.circuitDiagram.removeLink(this.link);
		}
		if(this.component != null) {
			this.circuitDiagram.removeComponent(this.component);
		}
		return this.object;
	}
	,redo: function() {
		this.execute();
		this.object = { "link" : this.link, "component" : this.component, "endPoint" : null, "port" : null};
		return this.object;
	}
	,execute: function() {
		if(this.link != null) {
			this.circuitDiagram.addLink(this.link);
		}
		if(this.component != null) {
			this.circuitDiagram.addComponent(this.component);
		}
	}
	,__class__: com_mun_controller_command_AddCommand
};
var com_mun_controller_command_CommandManager = function() {
	this.recordFlag = false;
	this.object = { "link" : null, "component" : null, "endPoint" : null, "port" : null};
	this.redoStack = [];
	this.undoStack = [];
};
$hxClasses["com.mun.controller.command.CommandManager"] = com_mun_controller_command_CommandManager;
com_mun_controller_command_CommandManager.__name__ = ["com","mun","controller","command","CommandManager"];
com_mun_controller_command_CommandManager.prototype = {
	undoStack: null
	,redoStack: null
	,object: null
	,recordFlag: null
	,execute: function(command) {
		command.execute();
		if(!this.recordFlag) {
			this.undoStack.push(command);
		}
		this.recordFlag = true;
		if(this.redoStack.length != 0) {
			var _g1 = 0;
			var _g = this.redoStack.length;
			while(_g1 < _g) {
				var i = _g1++;
				this.redoStack.pop();
			}
		}
	}
	,undo: function() {
		this.object = { "link" : null, "component" : null, "endPoint" : null, "port" : null};
		if(this.undoStack.length == 0) {
			return this.object;
		}
		var command = this.undoStack.pop();
		this.object = command.undo();
		this.redoStack.push(command);
		return this.object;
	}
	,redo: function() {
		this.object = { "link" : null, "component" : null, "endPoint" : null, "port" : null};
		if(this.redoStack.length == 0) {
			return this.object;
		}
		var command = this.redoStack.pop();
		this.object = command.redo();
		this.undoStack.push(command);
		return this.object;
	}
	,recordFlagRest: function() {
		this.recordFlag = false;
	}
	,getUndoStackSize: function() {
		return this.undoStack.length;
	}
	,getRedoStackSize: function() {
		return this.redoStack.length;
	}
	,__class__: com_mun_controller_command_CommandManager
};
var com_mun_controller_command_MoveCommand = function(object,newXPosition,newYPosition,oldXPosition,oldYPosition,circuitDiagram) {
	this.object = { "link" : null, "component" : null, "endPoint" : null, "port" : null};
	this.component = object.component;
	this.link = object.link;
	this.endpoint = object.endPoint;
	this.newXPosition = newXPosition;
	this.newYPosition = newYPosition;
	this.oldXPosition = oldXPosition;
	this.oldYPosition = oldYPosition;
	this.circuitDiagram = circuitDiagram;
};
$hxClasses["com.mun.controller.command.MoveCommand"] = com_mun_controller_command_MoveCommand;
com_mun_controller_command_MoveCommand.__name__ = ["com","mun","controller","command","MoveCommand"];
com_mun_controller_command_MoveCommand.__interfaces__ = [com_mun_controller_command_Command];
com_mun_controller_command_MoveCommand.prototype = {
	component: null
	,link: null
	,endpoint: null
	,newXPosition: null
	,newYPosition: null
	,oldXPosition: null
	,oldYPosition: null
	,circuitDiagram: null
	,object: null
	,undo: function() {
		this.object = { "link" : null, "component" : null, "endPoint" : null, "port" : null};
		if(this.component != null) {
			this.component.set_xPosition(this.oldXPosition);
			this.component.set_yPosition(this.oldYPosition);
			this.component.updateMoveComponentPortPosition(this.oldXPosition,this.oldYPosition);
			this.object.component = this.component;
		}
		if(this.link != null) {
			var xDifference = this.newXPosition - this.oldXPosition;
			var yDifference = this.newYPosition - this.oldYPosition;
			this.link.get_leftEndpoint().set_xPosition(this.link.get_leftEndpoint().get_xPosition());
			this.link.get_leftEndpoint().set_yPosition(this.link.get_leftEndpoint().get_yPosition());
			this.link.get_rightEndpoint().set_xPosition(this.link.get_rightEndpoint().get_xPosition() - xDifference);
			this.link.get_rightEndpoint().set_yPosition(this.link.get_rightEndpoint().get_yPosition() - yDifference);
			this.object.link = this.link;
		}
		if(this.endpoint != null) {
			this.getLink();
			this.endpoint.set_xPosition(this.oldXPosition);
			this.endpoint.set_yPosition(this.oldYPosition);
		}
		return this.object;
	}
	,redo: function() {
		this.object = { "link" : null, "component" : null, "endPoint" : null, "port" : null};
		this.execute();
		return this.object;
	}
	,execute: function() {
		if(this.component != null) {
			this.object.component = this.component;
			this.component.set_xPosition(this.newXPosition);
			this.component.set_yPosition(this.newYPosition);
			this.component.updateMoveComponentPortPosition(this.newXPosition,this.newYPosition);
			var i = this.circuitDiagram.get_linkIterator();
			while(i.hasNext()) {
				var i1 = i.next();
				i1.get_leftEndpoint().updatePosition();
				i1.get_rightEndpoint().updatePosition();
			}
		}
		if(this.link != null) {
			this.object.link = this.link;
			this.link.get_leftEndpoint().set_xPosition(this.newXPosition);
			this.link.get_leftEndpoint().set_yPosition(this.newYPosition);
			var xDisplacement = this.newXPosition - this.oldXPosition;
			var yDisplacement = this.newYPosition - this.oldYPosition;
			this.link.get_rightEndpoint().set_xPosition(this.link.get_rightEndpoint().get_xPosition() + xDisplacement);
			this.link.get_rightEndpoint().set_yPosition(this.link.get_rightEndpoint().get_yPosition() + yDisplacement);
		}
		if(this.endpoint != null) {
			this.getLink();
			this.endpoint.set_xPosition(this.newXPosition);
			this.endpoint.set_yPosition(this.newYPosition);
		}
	}
	,getLink: function() {
		var i = this.circuitDiagram.get_linkIterator();
		while(i.hasNext()) {
			var i1 = i.next();
			if(i1.get_leftEndpoint() == this.endpoint) {
				this.object.link = this.link;
				break;
			}
			if(i1.get_rightEndpoint() == this.endpoint) {
				this.object.link = this.link;
				break;
			}
		}
	}
	,__class__: com_mun_controller_command_MoveCommand
};
var com_mun_controller_command_Stack = function() {
	this.linkArray = [];
	this.componentArray = [];
};
$hxClasses["com.mun.controller.command.Stack"] = com_mun_controller_command_Stack;
com_mun_controller_command_Stack.__name__ = ["com","mun","controller","command","Stack"];
com_mun_controller_command_Stack.prototype = {
	linkArray: null
	,componentArray: null
	,getLinkArray: function() {
		return this.linkArray;
	}
	,getComponentArray: function() {
		return this.componentArray;
	}
	,pushLink: function(link) {
		this.linkArray.push(link);
	}
	,pushComponent: function(component) {
		this.componentArray.push(component);
	}
	,clearStack: function() {
		this.linkArray = [];
		this.componentArray = [];
	}
	,__class__: com_mun_controller_command_Stack
};
var com_mun_controller_componentUpdate_CircuitDiagramUtil = function(circuitDiagram) {
	this.circuitDiagram = circuitDiagram;
};
$hxClasses["com.mun.controller.componentUpdate.CircuitDiagramUtil"] = com_mun_controller_componentUpdate_CircuitDiagramUtil;
com_mun_controller_componentUpdate_CircuitDiagramUtil.__name__ = ["com","mun","controller","componentUpdate","CircuitDiagramUtil"];
com_mun_controller_componentUpdate_CircuitDiagramUtil.prototype = {
	circuitDiagram: null
	,isInComponent: function(coordinate) {
		var component = null;
		var i = this.circuitDiagram.get_componentIterator();
		while(i.hasNext()) {
			var i1 = i.next();
			if(this.isInScope(i1.get_xPosition(),i1.get_yPosition(),coordinate.xPosition,coordinate.yPosition,i1.get_height(),i1.get_width()) == true) {
				return i1;
			}
		}
		return component;
	}
	,isOnLink: function(coordinate) {
		var i = this.circuitDiagram.get_linkIterator();
		while(i.hasNext()) {
			var i1 = i.next();
			var leftEndpoint = i1.get_leftEndpoint();
			var rightEndpoint = i1.get_rightEndpoint();
			if(this.pointToLine(leftEndpoint.get_xPosition(),leftEndpoint.get_yPosition(),rightEndpoint.get_xPosition(),rightEndpoint.get_yPosition(),coordinate.xPosition,coordinate.yPosition) <= 3) {
				var theDistanaceToLeftEndpoint = Math.sqrt(Math.pow(Math.abs(coordinate.xPosition - i1.get_leftEndpoint().get_xPosition()),2) + Math.pow(Math.abs(coordinate.yPosition - i1.get_leftEndpoint().get_yPosition()),2));
				var theDistanceToRightEndpoint = Math.sqrt(Math.pow(Math.abs(coordinate.xPosition - i1.get_rightEndpoint().get_xPosition()),2) + Math.pow(Math.abs(coordinate.yPosition - i1.get_rightEndpoint().get_yPosition()),2));
				if(theDistanaceToLeftEndpoint >= theDistanceToRightEndpoint) {
					if(theDistanceToRightEndpoint >= 5) {
						return i1;
					}
				} else if(theDistanaceToLeftEndpoint >= 5) {
					return i1;
				}
			}
		}
		return null;
	}
	,pointToLine: function(x1,y1,x2,y2,x0,y0) {
		var space = 0;
		var a;
		var b;
		var c;
		a = this.pointsDistance(x1,y1,x2,y2);
		b = this.pointsDistance(x1,y1,x0,y0);
		c = this.pointsDistance(x2,y2,x0,y0);
		if(c + b == a) {
			space = 0;
			return space;
		}
		if(a <= 0.00001) {
			space = b;
			return space;
		}
		if(c * c > a * a + b * b) {
			space = b;
			return space;
		}
		if(b * b >= a * a + c * c) {
			space = c;
			return space;
		}
		var p = (a + b + c) / 2;
		var s = Math.sqrt(p * (p - a) * (p - b) * (p - c));
		space = 2 * s / a;
		return space;
	}
	,pointsDistance: function(x1,y1,x2,y2) {
		var lineLength = 0;
		lineLength = Math.sqrt((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2));
		return lineLength;
	}
	,pointOnEndpoint: function(coordinate) {
		var i = this.circuitDiagram.get_linkIterator();
		while(i.hasNext()) {
			var i1 = i.next();
			if(this.pointsDistance(i1.get_leftEndpoint().get_xPosition(),i1.get_leftEndpoint().get_yPosition(),coordinate.xPosition,coordinate.yPosition) <= 4) {
				return i1.get_leftEndpoint();
			}
			if(this.pointsDistance(i1.get_rightEndpoint().get_xPosition(),i1.get_rightEndpoint().get_yPosition(),coordinate.xPosition,coordinate.yPosition) <= 4) {
				return i1.get_rightEndpoint();
			}
		}
		return null;
	}
	,isOnPort: function(cooridnate) {
		var object = { "link" : null, "component" : null, "endPoint" : null, "port" : null};
		var i = this.circuitDiagram.get_componentIterator();
		while(i.hasNext()) {
			var i1 = i.next();
			var j = i1.get_inportIterator();
			while(j.hasNext()) {
				var j1 = j.next();
				if(this.isInCircle(cooridnate,j1.get_xPosition(),j1.get_yPosition())) {
					object.port = j1;
					var k = this.circuitDiagram.get_linkIterator();
					while(k.hasNext()) {
						var k1 = k.next();
						object.endPoint = this.isLinkOnPort(k1,j1);
						return object;
					}
				}
			}
			var j2 = i1.get_outportIterator();
			while(j2.hasNext()) {
				var j3 = j2.next();
				if(this.isInCircle(cooridnate,j3.get_xPosition(),j3.get_yPosition())) {
					object.port = j3;
					var k2 = this.circuitDiagram.get_linkIterator();
					while(k2.hasNext()) {
						var k3 = k2.next();
						object.endPoint = this.isLinkOnPort(k3,j3);
						return object;
					}
				}
			}
		}
		return object;
	}
	,isLinkOnPort: function(link,port) {
		var endpoint = null;
		if(this.isEndpointOnPort(link.get_leftEndpoint(),port)) {
			endpoint = link.get_leftEndpoint();
		}
		if(this.isEndpointOnPort(link.get_rightEndpoint(),port)) {
			endpoint = link.get_rightEndpoint();
		}
		return endpoint;
	}
	,isEndpointOnPort: function(endpoint,port) {
		if(endpoint.get_xPosition() == port.get_xPosition() && endpoint.get_yPosition() == port.get_yPosition()) {
			return true;
		} else {
			return false;
		}
	}
	,isInCircle: function(coordinate,orignalXPosition,orignalYPosition) {
		if(Math.abs(coordinate.xPosition - orignalXPosition) <= 3 && Math.abs(coordinate.yPosition - orignalYPosition) <= 3) {
			return true;
		} else {
			return false;
		}
	}
	,isInScope: function(orignalXposition,orignalYposition,mouseXPosition,mouseYposition,heigh,width) {
		if(mouseXPosition >= Math.abs(orignalXposition - width / 2) && orignalXposition <= orignalXposition + width / 2 && (mouseYposition >= Math.abs(orignalYposition - heigh / 2) && mouseYposition <= orignalYposition + heigh / 2)) {
			return true;
		} else {
			return false;
		}
	}
	,__class__: com_mun_controller_componentUpdate_CircuitDiagramUtil
};
var com_mun_controller_componentUpdate_UpdateCanvas = function(canvas,circuitDiagram,drawingAdapter) {
	this.canvas = canvas;
	this.circuitDiagram = circuitDiagram;
	this.drawingAdapter = drawingAdapter;
};
$hxClasses["com.mun.controller.componentUpdate.UpdateCanvas"] = com_mun_controller_componentUpdate_UpdateCanvas;
com_mun_controller_componentUpdate_UpdateCanvas.__name__ = ["com","mun","controller","componentUpdate","UpdateCanvas"];
com_mun_controller_componentUpdate_UpdateCanvas.prototype = {
	canvas: null
	,circuitDiagram: null
	,drawingAdapter: null
	,update: function(object) {
		this.canvas.width = this.canvas.width;
		var i = this.circuitDiagram.get_componentIterator();
		while(i.hasNext()) {
			var i1 = i.next();
			if(object != null && object.component != null && object.component == i1) {
				i1.drawComponent(i1,this.drawingAdapter,true);
			} else {
				i1.drawComponent(i1,this.drawingAdapter,false);
			}
		}
		var i2 = this.circuitDiagram.get_linkIterator();
		while(i2.hasNext()) {
			var i3 = i2.next();
			var drawComponent = new com_mun_view_drawComponents_DrawLink(i3,this.drawingAdapter);
			if(object != null && object.link != null && object.link == i3) {
				drawComponent.drawCorrespondingComponent("red");
			} else {
				drawComponent.drawCorrespondingComponent("black");
			}
		}
	}
	,__class__: com_mun_controller_componentUpdate_UpdateCanvas
};
var com_mun_controller_componentUpdate_UpdateCircuitDiagram = function(circuitDiagram) {
	this.circuitDiagram = circuitDiagram;
	this.commandManager = new com_mun_controller_command_CommandManager();
	this.circuitDiagramUtil = new com_mun_controller_componentUpdate_CircuitDiagramUtil(circuitDiagram);
};
$hxClasses["com.mun.controller.componentUpdate.UpdateCircuitDiagram"] = com_mun_controller_componentUpdate_UpdateCircuitDiagram;
com_mun_controller_componentUpdate_UpdateCircuitDiagram.__name__ = ["com","mun","controller","componentUpdate","UpdateCircuitDiagram"];
com_mun_controller_componentUpdate_UpdateCircuitDiagram.prototype = {
	circuitDiagram: null
	,updateCanvas: null
	,commandManager: null
	,circuitDiagramUtil: null
	,updateToolBar: null
	,get_commandManager: function() {
		return this.commandManager;
	}
	,setUpdateCanvas: function(updateCanvas) {
		this.updateCanvas = updateCanvas;
	}
	,setUpdateToolBar: function(updateToolBar) {
		this.updateToolBar = updateToolBar;
	}
	,createComponentByButton: function(name,xPosition,yPosition,width,height,orientation,inportNum,drawingAdapter) {
		var componentkind_ = Type.createInstance(Type.resolveClass("com.mun.model.gates." + name),[]);
		var component_ = new com_mun_model_component_Component(xPosition,yPosition,height,width,orientation,componentkind_,inportNum);
		component_.setNameOfTheComponentKind(name);
		var object = { "link" : null, "component" : component_, "endPoint" : null, "port" : null};
		var command = new com_mun_controller_command_AddCommand(object,this.circuitDiagram);
		this.get_commandManager().execute(command);
		this.redrawCanvas(object);
		this.updateToolBar.update(object);
	}
	,moveComponent: function(component,coordinate,mouseDownLocation) {
		var object = { "link" : null, "component" : component, "endPoint" : null, "port" : null};
		var xMoveDistance = coordinate.xPosition - mouseDownLocation.xPosition;
		var yMoveDistance = coordinate.yPosition - mouseDownLocation.yPosition;
		var command = new com_mun_controller_command_MoveCommand(object,object.component.get_xPosition() + xMoveDistance,object.component.get_yPosition() + yMoveDistance,object.component.get_xPosition(),object.component.get_yPosition(),this.circuitDiagram);
		this.get_commandManager().execute(command);
		this.redrawCanvas(object);
	}
	,moveLink: function(link,coordinate,mouseDownLocation) {
		var object = { "link" : link, "component" : null, "endPoint" : null, "port" : null};
		var xDisplacement = mouseDownLocation.xPosition - coordinate.xPosition;
		var yDisplacement = mouseDownLocation.yPosition - coordinate.yPosition;
		var command = new com_mun_controller_command_MoveCommand(object,link.get_leftEndpoint().get_xPosition() - xDisplacement,link.get_leftEndpoint().get_yPosition() - yDisplacement,link.get_leftEndpoint().get_xPosition(),link.get_leftEndpoint().get_yPosition(),this.circuitDiagram);
		this.get_commandManager().execute(command);
		var leftEndpointCoordinate = { "xPosition" : link.get_leftEndpoint().get_xPosition(), "yPosition" : link.get_leftEndpoint().get_yPosition()};
		var port_temp = this.isOnPort(leftEndpointCoordinate).port;
		var leftEndpointPort = link.get_leftEndpoint().get_port();
		if(port_temp != null && leftEndpointPort != port_temp) {
			link.get_leftEndpoint().set_port(port_temp);
			link.get_leftEndpoint().updatePosition();
		} else if(port_temp == null) {
			link.get_leftEndpoint().set_port(null);
		}
		var rightEndpointCoordinate = { "xPosition" : link.get_rightEndpoint().get_xPosition(), "yPosition" : link.get_rightEndpoint().get_yPosition()};
		port_temp = this.isOnPort(rightEndpointCoordinate).port;
		var rightEndpointPort = link.get_rightEndpoint().get_port();
		if(port_temp != null && rightEndpointPort != port_temp) {
			link.get_rightEndpoint().set_port(port_temp);
			link.get_rightEndpoint().updatePosition();
		} else if(port_temp == null) {
			link.get_rightEndpoint().set_port(null);
		}
		this.redrawCanvas();
		this.updateToolBar.update(object);
		this.hightLightObject(object);
	}
	,addLink: function(coordinateFrom,coordinateTo) {
		var object = { "link" : null, "component" : null, "endPoint" : null, "port" : null};
		object = this.isOnPort(coordinateFrom);
		if(object.port != null) {
			var leftEndpoint = new com_mun_model_component_Endpoint(object.port.get_xPosition(),object.port.get_yPosition());
			var rightEndpoint = new com_mun_model_component_Endpoint(object.port.get_xPosition(),object.port.get_yPosition());
			var link = new com_mun_model_component_Link(leftEndpoint,rightEndpoint);
			link.get_leftEndpoint().set_port(object.port);
			link.get_rightEndpoint().set_port(null);
			object.link = link;
			object.endPoint = null;
		} else {
			var leftEndpoint1 = new com_mun_model_component_Endpoint(coordinateFrom.xPosition,coordinateFrom.yPosition);
			var rightEndpoint1 = new com_mun_model_component_Endpoint(coordinateTo.xPosition + 100,coordinateTo.yPosition + 100);
			var link1 = new com_mun_model_component_Link(leftEndpoint1,rightEndpoint1);
			object.link = link1;
		}
		var command = new com_mun_controller_command_AddCommand(object,this.circuitDiagram);
		this.get_commandManager().execute(command);
		this.redrawCanvas(object);
		return object.link;
	}
	,moveEndpoint: function(endpoint,coordinate,mouseDownLocation) {
		var object = { "link" : null, "component" : null, "endPoint" : endpoint, "port" : null};
		if(object.endPoint != null) {
			var xMoveDistance = coordinate.xPosition - mouseDownLocation.xPosition;
			var yMoveDistance = coordinate.yPosition - mouseDownLocation.yPosition;
			var command = new com_mun_controller_command_MoveCommand(object,object.endPoint.get_xPosition() + xMoveDistance,object.endPoint.get_yPosition() + yMoveDistance,object.endPoint.get_xPosition(),object.endPoint.get_yPosition(),this.circuitDiagram);
			this.get_commandManager().execute(command);
			this.redrawCanvas();
			var port = null;
			var newPort = this.circuitDiagramUtil.isOnPort(coordinate).port;
			var i = this.circuitDiagram.get_linkIterator();
			while(i.hasNext()) {
				var i1 = i.next();
				if(i1.get_leftEndpoint() == endpoint) {
					if(i1.get_rightEndpoint().get_port() != null) {
						port = i1.get_rightEndpoint().get_port();
					}
					if(newPort != port) {
						i1.get_leftEndpoint().set_port(newPort);
						i1.get_leftEndpoint().updatePosition();
					} else {
						i1.get_leftEndpoint().set_port(null);
					}
					break;
				}
				if(i1.get_rightEndpoint() == endpoint) {
					if(i1.get_leftEndpoint().get_port() != null) {
						port = i1.get_leftEndpoint().get_port();
					}
					if(newPort != port) {
						i1.get_rightEndpoint().set_port(newPort);
						i1.get_rightEndpoint().updatePosition();
					} else {
						i1.get_rightEndpoint().set_port(null);
					}
					break;
				}
			}
			this.redrawCanvas();
		}
	}
	,changeOrientation: function(component,orientation) {
		this.circuitDiagram.setNewOirentation(component,orientation);
		var object = { "link" : null, "component" : component, "endPoint" : null, "port" : null};
		this.redrawCanvas(object);
	}
	,deleteComponent: function(component) {
		this.circuitDiagram.deleteComponent(component);
	}
	,deleteLink: function(link) {
		this.circuitDiagram.deleteLink(link);
	}
	,getEndpoint: function(coordinate) {
		return this.circuitDiagramUtil.pointOnEndpoint(coordinate);
	}
	,getComponent: function(coordinate) {
		return this.circuitDiagramUtil.isInComponent(coordinate);
	}
	,getLink: function(coordinate) {
		return this.circuitDiagramUtil.isOnLink(coordinate);
	}
	,hightLightObject: function(object) {
		this.redrawCanvas(object);
	}
	,isOnPort: function(coordinate) {
		return this.circuitDiagramUtil.isOnPort(coordinate);
	}
	,resetCommandManagerRecordFlag: function() {
		this.get_commandManager().recordFlagRest();
	}
	,setComponentName: function(component,name) {
		this.circuitDiagram.componentSetName(component,name);
	}
	,undo: function() {
		var object = this.get_commandManager().undo();
		this.redrawCanvas(object);
		if(object.component == null && object.link == null) {
			this.updateToolBar.hidden();
		} else {
			this.updateToolBar.visible();
		}
	}
	,redo: function() {
		var object = this.get_commandManager().redo();
		this.redrawCanvas(object);
		if(object.component == null && object.link == null) {
			this.updateToolBar.hidden();
		} else {
			this.updateToolBar.visible();
		}
	}
	,setRedoButton: function() {
		if(this.get_commandManager().getUndoStackSize() == 0) {
			this.updateToolBar.setUndoButtonDisability(true);
		} else {
			this.updateToolBar.setUndoButtonDisability(false);
		}
	}
	,setUndoButton: function() {
		if(this.get_commandManager().getRedoStackSize() == 0) {
			this.updateToolBar.setRedoButtonDisability(true);
		} else {
			this.updateToolBar.setRedoButtonDisability(false);
		}
	}
	,redrawCanvas: function(object) {
		this.updateCanvas.update(object);
		this.setRedoButton();
		this.setUndoButton();
	}
	,__class__: com_mun_controller_componentUpdate_UpdateCircuitDiagram
	,__properties__: {get_commandManager:"get_commandManager"}
};
var com_mun_controller_componentUpdate_UpdateToolBar = function(updateCircuitDiagram) {
	this.updateCircuitDiagram = updateCircuitDiagram;
	this.nameInput = window.document.getElementById("name_input");
	this.orientation = window.document.getElementById("orientation");
	this.toolBar = window.document.getElementById("toolbar_div");
	this.deleteButton = window.document.getElementById("delete");
	this.orientation_div = window.document.getElementById("orientation_div");
	this.component_name_div = window.document.getElementById("component_name_div");
	this.undo = window.document.getElementById("undo");
	this.undo.style.visibility = "visible";
	this.redo = window.document.getElementById("redo");
	this.redo.style.visibility = "visible";
	this.nameInput.addEventListener("keyup",$bind(this,this.inputChange),false);
	this.deleteButton.onclick = $bind(this,this.deleteObject);
	this.undo.onclick = $bind(this,this.undoCommand);
	this.redo.onclick = $bind(this,this.redoCommand);
	window.document.getElementById("north").onclick = $bind(this,this.changeToNorth);
	window.document.getElementById("south").onclick = $bind(this,this.changeToSouth);
	window.document.getElementById("west").onclick = $bind(this,this.changeToWest);
	window.document.getElementById("east").onclick = $bind(this,this.chageToEast);
};
$hxClasses["com.mun.controller.componentUpdate.UpdateToolBar"] = com_mun_controller_componentUpdate_UpdateToolBar;
com_mun_controller_componentUpdate_UpdateToolBar.__name__ = ["com","mun","controller","componentUpdate","UpdateToolBar"];
com_mun_controller_componentUpdate_UpdateToolBar.prototype = {
	updateCircuitDiagram: null
	,object: null
	,nameInput: null
	,orientation: null
	,orientation_div: null
	,toolBar: null
	,deleteButton: null
	,component_name_div: null
	,undo: null
	,redo: null
	,update: function(object) {
		this.object = object;
		if(object.component != null) {
			this.visible();
			this.setAttribute();
		}
		if(object.link != null) {
			this.visible();
			this.component_name_div.style.visibility = "hidden";
			this.orientation_div.style.visibility = "hidden";
		}
	}
	,setAttribute: function() {
		$(this.nameInput).val(this.object.component.get_name());
		$(this.orientation).val(Std.string(this.object.component.get_orientation()) + "");
	}
	,changeToNorth: function() {
		if(this.object.component != null) {
			this.updateCircuitDiagram.changeOrientation(this.object.component,com_mun_model_enumeration_Orientation.NORTH);
			this.setAttribute();
		}
	}
	,changeToSouth: function() {
		if(this.object.component != null) {
			this.updateCircuitDiagram.changeOrientation(this.object.component,com_mun_model_enumeration_Orientation.SOUTH);
			this.setAttribute();
		}
	}
	,changeToWest: function() {
		if(this.object.component != null) {
			this.updateCircuitDiagram.changeOrientation(this.object.component,com_mun_model_enumeration_Orientation.WEST);
			this.setAttribute();
		}
	}
	,chageToEast: function() {
		if(this.object.component != null) {
			this.updateCircuitDiagram.changeOrientation(this.object.component,com_mun_model_enumeration_Orientation.EAST);
			this.setAttribute();
		}
	}
	,inputChange: function() {
		if(this.object.component != null) {
			var temp = $(this.nameInput).val();
			this.updateCircuitDiagram.setComponentName(this.object.component,temp);
		}
	}
	,deleteObject: function() {
		if(this.object.component != null) {
			this.updateCircuitDiagram.deleteComponent(this.object.component);
		}
		if(this.object.link != null) {
			this.updateCircuitDiagram.deleteLink(this.object.link);
		}
		this.updateCircuitDiagram.redrawCanvas();
	}
	,undoCommand: function() {
		this.updateCircuitDiagram.undo();
	}
	,redoCommand: function() {
		this.updateCircuitDiagram.redo();
	}
	,visible: function() {
		this.deleteButton.style.visibility = "visible";
		this.orientation_div.style.visibility = "visible";
		this.component_name_div.style.visibility = "visible";
	}
	,hidden: function() {
		this.deleteButton.style.visibility = "hidden";
		this.orientation_div.style.visibility = "hidden";
		this.component_name_div.style.visibility = "hidden";
	}
	,setUndoButtonDisability: function(disable) {
		if(disable) {
			$(this.undo).attr("disabled");
		} else {
			$(this.undo).removeAttr("disabled");
		}
	}
	,setRedoButtonDisability: function(disable) {
		if(disable) {
			$(this.redo).attr("disabled");
		} else {
			$(this.redo).removeAttr("disabled");
		}
	}
	,__class__: com_mun_controller_componentUpdate_UpdateToolBar
};
var com_mun_controller_mouseAction_ButtonClick = function(drawingAdapter,updateCircuitDiagram,pixelRatio) {
	this.drawingAdapter = drawingAdapter;
	this.updateCircuitDiagram = updateCircuitDiagram;
	this.pixelRatio = pixelRatio;
	window.document.getElementById("AND").onclick = $bind(this,this.andOnClick);
	window.document.getElementById("FlipFlop").onclick = $bind(this,this.flipFlopOnClick);
	window.document.getElementById("INPUT").onclick = $bind(this,this.inputOnClick);
	window.document.getElementById("MUX").onclick = $bind(this,this.muxOnClick);
	window.document.getElementById("NAND").onclick = $bind(this,this.nandOnClick);
	window.document.getElementById("NOR").onclick = $bind(this,this.norOnClick);
	window.document.getElementById("NOT").onclick = $bind(this,this.notOnClick);
	window.document.getElementById("OR").onclick = $bind(this,this.orOnClick);
	window.document.getElementById("OUTPUT").onclick = $bind(this,this.outputOnClick);
	window.document.getElementById("XOR").onclick = $bind(this,this.xorOnClick);
};
$hxClasses["com.mun.controller.mouseAction.ButtonClick"] = com_mun_controller_mouseAction_ButtonClick;
com_mun_controller_mouseAction_ButtonClick.__name__ = ["com","mun","controller","mouseAction","ButtonClick"];
com_mun_controller_mouseAction_ButtonClick.prototype = {
	drawingAdapter: null
	,updateCircuitDiagram: null
	,pixelRatio: null
	,andOnClick: function() {
		this.updateCircuitDiagram.createComponentByButton("AND",250,50,40 * this.pixelRatio,40 * this.pixelRatio,com_mun_model_enumeration_Orientation.EAST,2,this.drawingAdapter);
	}
	,flipFlopOnClick: function() {
		this.updateCircuitDiagram.createComponentByButton("FlipFlop",250,50,40 * this.pixelRatio,40 * this.pixelRatio,com_mun_model_enumeration_Orientation.EAST,2,this.drawingAdapter);
	}
	,inputOnClick: function() {
		this.updateCircuitDiagram.createComponentByButton("Input",250,50,40 * this.pixelRatio,40 * this.pixelRatio,com_mun_model_enumeration_Orientation.EAST,2,this.drawingAdapter);
	}
	,muxOnClick: function() {
		this.updateCircuitDiagram.createComponentByButton("MUX",250,50,40 * this.pixelRatio,40 * this.pixelRatio,com_mun_model_enumeration_Orientation.EAST,2,this.drawingAdapter);
	}
	,nandOnClick: function() {
		this.updateCircuitDiagram.createComponentByButton("NAND",250,50,40 * this.pixelRatio,40 * this.pixelRatio,com_mun_model_enumeration_Orientation.EAST,2,this.drawingAdapter);
	}
	,norOnClick: function() {
		this.updateCircuitDiagram.createComponentByButton("NOR",250,50,40 * this.pixelRatio,40 * this.pixelRatio,com_mun_model_enumeration_Orientation.EAST,2,this.drawingAdapter);
	}
	,notOnClick: function() {
		this.updateCircuitDiagram.createComponentByButton("NOT",250,50,40 * this.pixelRatio,40 * this.pixelRatio,com_mun_model_enumeration_Orientation.EAST,2,this.drawingAdapter);
	}
	,orOnClick: function() {
		this.updateCircuitDiagram.createComponentByButton("OR",250,50,40 * this.pixelRatio,40 * this.pixelRatio,com_mun_model_enumeration_Orientation.EAST,2,this.drawingAdapter);
	}
	,outputOnClick: function() {
		this.updateCircuitDiagram.createComponentByButton("Output",250,50,40 * this.pixelRatio,40 * this.pixelRatio,com_mun_model_enumeration_Orientation.EAST,2,this.drawingAdapter);
	}
	,xorOnClick: function() {
		this.updateCircuitDiagram.createComponentByButton("XOR",250,50,40 * this.pixelRatio,40 * this.pixelRatio,com_mun_model_enumeration_Orientation.EAST,2,this.drawingAdapter);
	}
	,__class__: com_mun_controller_mouseAction_ButtonClick
};
var com_mun_controller_mouseAction_CanvasListener = function(canvas,updateCircuitDiagram,updateToolBar) {
	this.endpointSelected = false;
	this.createLinkFlag = false;
	this.linkHighLight = false;
	this.mouseDownFlag = false;
	this.canvas = canvas;
	this.updateCircuitDiagram = updateCircuitDiagram;
	this.updateToolBar = updateToolBar;
	canvas.addEventListener("mousedown",$bind(this,this.doMouseDown),false);
	canvas.addEventListener("mousemove",$bind(this,this.doMouseMove),false);
	canvas.addEventListener("mouseup",$bind(this,this.doMouseUp),false);
};
$hxClasses["com.mun.controller.mouseAction.CanvasListener"] = com_mun_controller_mouseAction_CanvasListener;
com_mun_controller_mouseAction_CanvasListener.__name__ = ["com","mun","controller","mouseAction","CanvasListener"];
com_mun_controller_mouseAction_CanvasListener.prototype = {
	canvas: null
	,mouseDownFlag: null
	,updateCircuitDiagram: null
	,mouseDownLocation: null
	,updateToolBar: null
	,link: null
	,linkHighLight: null
	,createLinkFlag: null
	,object: null
	,component: null
	,endpoint: null
	,endpointSelected: null
	,port: null
	,getPointOnCanvas: function(canvas,x,y) {
		var bbox = canvas.getBoundingClientRect();
		var coordinate = { "xPosition" : 0, "yPosition" : 0};
		coordinate.xPosition = (x - bbox.left) * (canvas.width / bbox.width);
		coordinate.yPosition = (y - bbox.top) * (canvas.height / bbox.height);
		return coordinate;
	}
	,doMouseDown: function(event) {
		this.object = { "link" : null, "component" : null, "endPoint" : null, "port" : null};
		this.doMouseUp(event);
		this.updateCircuitDiagram.resetCommandManagerRecordFlag();
		var x = event.clientX;
		var y = event.clientY;
		this.mouseDownLocation = this.getPointOnCanvas(this.canvas,x,y);
		this.mouseDownFlag = true;
		this.endpoint = this.updateCircuitDiagram.getEndpoint(this.mouseDownLocation);
		this.object.endPoint = this.endpoint;
		if(this.endpoint != null) {
			this.endpointSelected = true;
		} else {
			this.endpointSelected = false;
		}
		if(this.endpoint == null) {
			this.link = this.updateCircuitDiagram.getLink(this.mouseDownLocation);
			this.object.link = this.link;
			this.linkHighLight = true;
			if(this.link == null) {
				this.component = this.updateCircuitDiagram.getComponent(this.mouseDownLocation);
				this.object.component = this.component;
			}
		}
		this.updateCircuitDiagram.hightLightObject(this.object);
		if(this.object.component != null || this.object.link != null) {
			this.updateToolBar.update(this.object);
		} else {
			this.updateToolBar.hidden();
		}
		if(this.linkHighLight && this.endpointSelected) {
			this.linkHighLight = false;
			this.endpointSelected = false;
			return;
		}
		if(this.link == null) {
			this.linkHighLight = false;
		}
		if(this.link == null && this.updateCircuitDiagram.isOnPort(this.mouseDownLocation).port != null) {
			this.link = this.updateCircuitDiagram.addLink(this.mouseDownLocation,this.mouseDownLocation);
			this.createLinkFlag = true;
		}
	}
	,doMouseMove: function(event) {
		var x = event.clientX;
		var y = event.clientY;
		var loc = this.getPointOnCanvas(this.canvas,x,y);
		if(this.mouseDownFlag == true) {
			if(this.createLinkFlag) {
				this.updateCircuitDiagram.moveEndpoint(this.link.get_rightEndpoint(),loc,this.mouseDownLocation);
			} else {
				if(this.endpoint != null) {
					this.updateCircuitDiagram.moveEndpoint(this.endpoint,loc,this.mouseDownLocation);
				}
				if(this.link != null) {
					this.updateCircuitDiagram.moveLink(this.link,loc,this.mouseDownLocation);
				}
				if(this.component != null) {
					this.updateCircuitDiagram.moveComponent(this.component,loc,this.mouseDownLocation);
				}
			}
		}
		this.mouseDownLocation = loc;
	}
	,doMouseUp: function(event) {
		this.mouseDownFlag = false;
		this.link = null;
		this.component = null;
		this.endpoint = null;
		this.port = null;
		this.createLinkFlag = false;
		this.updateCircuitDiagram.resetCommandManagerRecordFlag();
	}
	,__class__: com_mun_controller_mouseAction_CanvasListener
};
var com_mun_model_component_CircuitDiagramI = function() { };
$hxClasses["com.mun.model.component.CircuitDiagramI"] = com_mun_model_component_CircuitDiagramI;
com_mun_model_component_CircuitDiagramI.__name__ = ["com","mun","model","component","CircuitDiagramI"];
com_mun_model_component_CircuitDiagramI.prototype = {
	get_commandManager: null
	,set_commandManager: null
	,get_componentIterator: null
	,get_componentReverseIterator: null
	,get_linkReverseIterator: null
	,get_linkIterator: null
	,get_name: null
	,set_name: null
	,addLink: null
	,addComponent: null
	,removeLink: null
	,removeComponent: null
	,clearCopyStack: null
	,pushLinkToCopyStack: null
	,pushComponentToCopyStack: null
	,setNewOirentation: null
	,deleteLink: null
	,deleteComponent: null
	,updateComponent: null
	,linkArraySelfUpdate: null
	,componentSetName: null
	,__class__: com_mun_model_component_CircuitDiagramI
};
var com_mun_model_component_CircuitDiagram = function() {
	this.linkArrayReverseFlag = false;
	this.componentArrayReverseFlag = false;
	this.linkArray = [];
	this.componentArray = [];
	this.copyStack = new com_mun_controller_command_Stack();
};
$hxClasses["com.mun.model.component.CircuitDiagram"] = com_mun_model_component_CircuitDiagram;
com_mun_model_component_CircuitDiagram.__name__ = ["com","mun","model","component","CircuitDiagram"];
com_mun_model_component_CircuitDiagram.__interfaces__ = [com_mun_model_component_CircuitDiagramI];
com_mun_model_component_CircuitDiagram.prototype = {
	componentArray: null
	,linkArray: null
	,name: null
	,copyStack: null
	,commandManager: null
	,componentArrayReverseFlag: null
	,linkArrayReverseFlag: null
	,get_commandManager: function() {
		return this.commandManager;
	}
	,set_commandManager: function(value) {
		this.commandManager = value;
	}
	,get_componentIterator: function() {
		if(this.componentArrayReverseFlag) {
			this.componentArrayReverse();
		}
		return HxOverrides.iter(this.componentArray);
	}
	,get_componentReverseIterator: function() {
		this.componentArrayReverse();
		return HxOverrides.iter(this.componentArray);
	}
	,componentArrayReverse: function() {
		this.componentArrayReverseFlag = !this.componentArrayReverseFlag;
		this.componentArray.reverse();
	}
	,get_linkIterator: function() {
		if(this.linkArrayReverseFlag) {
			this.linkArrayReverse();
		}
		return HxOverrides.iter(this.linkArray);
	}
	,get_linkReverseIterator: function() {
		this.linkArrayReverse();
		return HxOverrides.iter(this.linkArray);
	}
	,linkArrayReverse: function() {
		this.linkArrayReverseFlag = !this.linkArrayReverseFlag;
		this.linkArray.reverse();
	}
	,get_name: function() {
		return this.name;
	}
	,set_name: function(value) {
		this.name = value;
	}
	,addLink: function(link) {
		this.linkArray.push(link);
	}
	,addComponent: function(component) {
		this.componentArray.push(component);
	}
	,removeLink: function(link) {
		HxOverrides.remove(this.linkArray,link);
	}
	,removeComponent: function(component) {
		HxOverrides.remove(this.componentArray,component);
	}
	,clearCopyStack: function() {
		this.copyStack.clearStack();
	}
	,pushLinkToCopyStack: function(link) {
		this.copyStack.pushLink(link);
	}
	,pushComponentToCopyStack: function(component) {
		this.copyStack.pushComponent(component);
	}
	,setNewOirentation: function(component,newOrientation) {
		var _g1 = 0;
		var _g = this.componentArray.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(component == this.componentArray[i]) {
				this.componentArray[i].set_orientation(newOrientation);
				this.componentArray[i].updateMoveComponentPortPosition(this.componentArray[i].get_xPosition(),this.componentArray[i].get_yPosition());
				this.linkArraySelfUpdate();
				break;
			}
		}
	}
	,deleteLink: function(link) {
		HxOverrides.remove(this.linkArray,link);
	}
	,deleteComponent: function(component) {
		HxOverrides.remove(this.componentArray,component);
		var i = component.get_inportIterator();
		while(i.hasNext()) {
			var i1 = i.next();
			var _g1 = 0;
			var _g = this.linkArray.length;
			while(_g1 < _g) {
				var j = _g1++;
				if(i1 == this.linkArray[j].get_leftEndpoint().get_port()) {
					this.linkArray[j].get_leftEndpoint().set_port(null);
				}
				if(i1 == this.linkArray[j].get_rightEndpoint().get_port()) {
					this.linkArray[j].get_rightEndpoint().set_port(null);
				}
			}
		}
		var i2 = component.get_outportIterator();
		while(i2.hasNext()) {
			var i3 = i2.next();
			var _g11 = 0;
			var _g2 = this.linkArray.length;
			while(_g11 < _g2) {
				var j1 = _g11++;
				if(i3 == this.linkArray[j1].get_leftEndpoint().get_port()) {
					this.linkArray[j1].get_leftEndpoint().set_port(null);
				}
				if(i3 == this.linkArray[j1].get_rightEndpoint().get_port()) {
					this.linkArray[j1].get_rightEndpoint().set_port(null);
				}
			}
		}
	}
	,updateComponent: function(component) {
		this.componentArray[this.componentArray.indexOf(component)] = component;
	}
	,linkArraySelfUpdate: function() {
		var _g1 = 0;
		var _g = this.linkArray.length;
		while(_g1 < _g) {
			var i = _g1++;
			this.linkArray[i].get_leftEndpoint().updatePosition();
			this.linkArray[i].get_rightEndpoint().updatePosition();
		}
	}
	,componentSetName: function(component,name) {
		this.componentArray[this.componentArray.indexOf(component)].set_name(name);
	}
	,__class__: com_mun_model_component_CircuitDiagram
};
var com_mun_model_component_Component = function(xPosition,yPosition,height,width,orientation,componentKind,inportNum) {
	this.name = "component1";
	this.outportArray = [];
	this.inportArray = [];
	this.xPosition = xPosition;
	this.yPosition = yPosition;
	this.height = height;
	this.width = width;
	this.orientation = orientation;
	this.componentKind = componentKind;
	this.inportsNum = inportNum;
	this.delay = 0;
	var portArray = [];
	portArray = this.componentKind.createPorts(xPosition,yPosition,width,height,orientation,inportNum);
	var _g1 = 0;
	var _g = portArray.length;
	while(_g1 < _g) {
		var o = _g1++;
		var port = portArray[o];
		if(port.get_portDescription() == com_mun_model_enumeration_IOTYPE.INPUT || port.get_portDescription() == com_mun_model_enumeration_IOTYPE.CLK || port.get_portDescription() == com_mun_model_enumeration_IOTYPE.D || port.get_portDescription() == com_mun_model_enumeration_IOTYPE.S) {
			this.inportArray.push(port);
		} else {
			this.outportArray.push(port);
		}
	}
};
$hxClasses["com.mun.model.component.Component"] = com_mun_model_component_Component;
com_mun_model_component_Component.__name__ = ["com","mun","model","component","Component"];
com_mun_model_component_Component.prototype = {
	xPosition: null
	,yPosition: null
	,height: null
	,width: null
	,orientation: null
	,componentKind: null
	,inportArray: null
	,outportArray: null
	,name: null
	,delay: null
	,inportsNum: null
	,nameOfTheComponentKind: null
	,get_xPosition: function() {
		return this.xPosition;
	}
	,set_xPosition: function(value) {
		return this.xPosition = value;
	}
	,get_yPosition: function() {
		return this.yPosition;
	}
	,set_yPosition: function(value) {
		return this.yPosition = value;
	}
	,get_orientation: function() {
		return this.orientation;
	}
	,set_orientation: function(value) {
		return this.orientation = value;
	}
	,get_componentKind: function() {
		return this.componentKind;
	}
	,set_componentKind: function(value) {
		return this.componentKind = value;
	}
	,get_inportIterator: function() {
		return HxOverrides.iter(this.inportArray);
	}
	,get_outportIterator: function() {
		return HxOverrides.iter(this.outportArray);
	}
	,get_name: function() {
		return this.name;
	}
	,set_name: function(value) {
		return this.name = value;
	}
	,get_height: function() {
		return this.height;
	}
	,set_height: function(value) {
		return this.height = value;
	}
	,get_width: function() {
		return this.width;
	}
	,set_width: function(value) {
		return this.width = value;
	}
	,get_delay: function() {
		return this.delay;
	}
	,set_delay: function(value) {
		return this.delay = value;
	}
	,get_inportsNum: function() {
		return this.inportsNum;
	}
	,setNameOfTheComponentKind: function(name) {
		this.nameOfTheComponentKind = name;
	}
	,getNameOfTheComponentKind: function() {
		return this.nameOfTheComponentKind;
	}
	,set_inportsNum: function(value) {
		if(value <= this.componentKind.getLeastInportNumber()) {
			return false;
		}
		this.inportsNum = value;
		while(this.inportArray.length < value) if(this.componentKind.addInPort() != null) {
			this.inportArray.push(this.componentKind.addInPort());
		} else {
			return false;
		}
		this.inportArray = this.componentKind.updateInPortPosition(this.inportArray,this.xPosition,this.yPosition,this.height,this.width,this.orientation);
		return true;
	}
	,removeInport: function(inport) {
		return HxOverrides.remove(this.inportArray,inport);
	}
	,updateMoveComponentPortPosition: function(xPosition,yPosition) {
		this.inportArray = this.componentKind.updateInPortPosition(this.inportArray,xPosition,yPosition,this.height,this.width,this.orientation);
		this.outportArray = this.componentKind.updateOutPortPosition(this.outportArray,xPosition,yPosition,this.height,this.width,this.orientation);
		return this;
	}
	,drawComponent: function(component,drawingAdpater,highLight) {
		this.componentKind.drawComponent(component,drawingAdpater,highLight);
	}
	,__class__: com_mun_model_component_Component
};
var com_mun_model_component_Endpoint = function(xPosition,yPosition) {
	this.xPosition = xPosition;
	this.yPosition = yPosition;
};
$hxClasses["com.mun.model.component.Endpoint"] = com_mun_model_component_Endpoint;
com_mun_model_component_Endpoint.__name__ = ["com","mun","model","component","Endpoint"];
com_mun_model_component_Endpoint.prototype = {
	xPosition: null
	,yPosition: null
	,port: null
	,get_xPosition: function() {
		return this.xPosition;
	}
	,get_yPosition: function() {
		return this.yPosition;
	}
	,get_port: function() {
		return this.port;
	}
	,set_xPosition: function(value) {
		return this.xPosition = value;
	}
	,set_yPosition: function(value) {
		return this.yPosition = value;
	}
	,set_port: function(value) {
		return this.port = value;
	}
	,updatePosition: function() {
		if(this.port != null) {
			this.xPosition = this.port.get_xPosition();
			this.yPosition = this.port.get_yPosition();
		}
	}
	,__class__: com_mun_model_component_Endpoint
};
var com_mun_model_component_Port = function() { };
$hxClasses["com.mun.model.component.Port"] = com_mun_model_component_Port;
com_mun_model_component_Port.__name__ = ["com","mun","model","component","Port"];
com_mun_model_component_Port.prototype = {
	get_xPosition: null
	,get_yPosition: null
	,set_xPosition: null
	,set_yPosition: null
	,get_value: null
	,set_value: null
	,get_portDescription: null
	,set_portDescription: null
	,get_sequence: null
	,set_sequence: null
	,__class__: com_mun_model_component_Port
};
var com_mun_model_component_Inport = function(xPosition,yPosition) {
	this.sequence = -1;
	this.xPosition = xPosition;
	this.yPosition = yPosition;
	this.portDescription = com_mun_model_enumeration_IOTYPE.INPUT;
};
$hxClasses["com.mun.model.component.Inport"] = com_mun_model_component_Inport;
com_mun_model_component_Inport.__name__ = ["com","mun","model","component","Inport"];
com_mun_model_component_Inport.__interfaces__ = [com_mun_model_component_Port];
com_mun_model_component_Inport.prototype = {
	xPosition: null
	,yPosition: null
	,portDescription: null
	,value: null
	,sequence: null
	,get_xPosition: function() {
		return this.xPosition;
	}
	,get_yPosition: function() {
		return this.yPosition;
	}
	,set_xPosition: function(xPosition) {
		this.xPosition = xPosition;
	}
	,set_yPosition: function(yPosition) {
		this.yPosition = yPosition;
	}
	,get_value: function() {
		return this.value;
	}
	,set_value: function(value) {
		this.value = value;
	}
	,get_portDescription: function() {
		return this.portDescription;
	}
	,set_portDescription: function(value) {
		this.portDescription = value;
	}
	,get_sequence: function() {
		return this.sequence;
	}
	,set_sequence: function(sequence) {
		this.sequence = sequence;
	}
	,__class__: com_mun_model_component_Inport
};
var com_mun_model_component_Link = function(leftEndpoint,rightEndpoint) {
	this.leftEndpoint = leftEndpoint;
	this.rightEndpoint = rightEndpoint;
};
$hxClasses["com.mun.model.component.Link"] = com_mun_model_component_Link;
com_mun_model_component_Link.__name__ = ["com","mun","model","component","Link"];
com_mun_model_component_Link.prototype = {
	leftEndpoint: null
	,rightEndpoint: null
	,get_leftEndpoint: function() {
		return this.leftEndpoint;
	}
	,set_leftEndpoint: function(value) {
		return this.leftEndpoint = value;
	}
	,get_rightEndpoint: function() {
		return this.rightEndpoint;
	}
	,set_rightEndpoint: function(value) {
		return this.rightEndpoint = value;
	}
	,__class__: com_mun_model_component_Link
};
var com_mun_model_component_Outport = function(xPosition,yPosition) {
	this.xPosition = xPosition;
	this.yPosition = yPosition;
	this.portDescription = com_mun_model_enumeration_IOTYPE.OUTPUT;
};
$hxClasses["com.mun.model.component.Outport"] = com_mun_model_component_Outport;
com_mun_model_component_Outport.__name__ = ["com","mun","model","component","Outport"];
com_mun_model_component_Outport.__interfaces__ = [com_mun_model_component_Port];
com_mun_model_component_Outport.prototype = {
	xPosition: null
	,yPosition: null
	,portDescription: null
	,value: null
	,sequence: null
	,get_xPosition: function() {
		return this.xPosition;
	}
	,get_yPosition: function() {
		return this.yPosition;
	}
	,set_xPosition: function(xPosition) {
		this.xPosition = xPosition;
	}
	,set_yPosition: function(yPosition) {
		this.yPosition = yPosition;
	}
	,get_value: function() {
		return this.value;
	}
	,set_value: function(value) {
		this.value = value;
	}
	,get_portDescription: function() {
		return this.portDescription;
	}
	,set_portDescription: function(value) {
		this.portDescription = value;
	}
	,get_sequence: function() {
		return this.sequence;
	}
	,set_sequence: function(sequence) {
		this.sequence = sequence;
	}
	,__class__: com_mun_model_component_Outport
};
var com_mun_model_drawingInterface_DrawingAdapterI = function() { };
$hxClasses["com.mun.model.drawingInterface.DrawingAdapterI"] = com_mun_model_drawingInterface_DrawingAdapterI;
com_mun_model_drawingInterface_DrawingAdapterI.__name__ = ["com","mun","model","drawingInterface","DrawingAdapterI"];
com_mun_model_drawingInterface_DrawingAdapterI.prototype = {
	setStrokeColor: null
	,setFillColor: null
	,setTextColor: null
	,setTextFont: null
	,setLineWidth: null
	,resetDrawingParam: null
	,drawAndShape: null
	,drawNAndShape: null
	,drawOrShape: null
	,drawNOrShape: null
	,drawBufferShape: null
	,drawNotShape: null
	,drawXorShape: null
	,drawRect: null
	,drawText: null
	,drawCricle: null
	,drawLine: null
	,__class__: com_mun_model_drawingInterface_DrawingAdapterI
};
var com_mun_model_enumeration_IOTYPE = $hxClasses["com.mun.model.enumeration.IOTYPE"] = { __ename__ : ["com","mun","model","enumeration","IOTYPE"], __constructs__ : ["INPUT","S","D","CLK","OUTPUT","Q","QN"] };
com_mun_model_enumeration_IOTYPE.INPUT = ["INPUT",0];
com_mun_model_enumeration_IOTYPE.INPUT.toString = $estr;
com_mun_model_enumeration_IOTYPE.INPUT.__enum__ = com_mun_model_enumeration_IOTYPE;
com_mun_model_enumeration_IOTYPE.S = ["S",1];
com_mun_model_enumeration_IOTYPE.S.toString = $estr;
com_mun_model_enumeration_IOTYPE.S.__enum__ = com_mun_model_enumeration_IOTYPE;
com_mun_model_enumeration_IOTYPE.D = ["D",2];
com_mun_model_enumeration_IOTYPE.D.toString = $estr;
com_mun_model_enumeration_IOTYPE.D.__enum__ = com_mun_model_enumeration_IOTYPE;
com_mun_model_enumeration_IOTYPE.CLK = ["CLK",3];
com_mun_model_enumeration_IOTYPE.CLK.toString = $estr;
com_mun_model_enumeration_IOTYPE.CLK.__enum__ = com_mun_model_enumeration_IOTYPE;
com_mun_model_enumeration_IOTYPE.OUTPUT = ["OUTPUT",4];
com_mun_model_enumeration_IOTYPE.OUTPUT.toString = $estr;
com_mun_model_enumeration_IOTYPE.OUTPUT.__enum__ = com_mun_model_enumeration_IOTYPE;
com_mun_model_enumeration_IOTYPE.Q = ["Q",5];
com_mun_model_enumeration_IOTYPE.Q.toString = $estr;
com_mun_model_enumeration_IOTYPE.Q.__enum__ = com_mun_model_enumeration_IOTYPE;
com_mun_model_enumeration_IOTYPE.QN = ["QN",6];
com_mun_model_enumeration_IOTYPE.QN.toString = $estr;
com_mun_model_enumeration_IOTYPE.QN.__enum__ = com_mun_model_enumeration_IOTYPE;
com_mun_model_enumeration_IOTYPE.__empty_constructs__ = [com_mun_model_enumeration_IOTYPE.INPUT,com_mun_model_enumeration_IOTYPE.S,com_mun_model_enumeration_IOTYPE.D,com_mun_model_enumeration_IOTYPE.CLK,com_mun_model_enumeration_IOTYPE.OUTPUT,com_mun_model_enumeration_IOTYPE.Q,com_mun_model_enumeration_IOTYPE.QN];
var com_mun_model_enumeration_Orientation = $hxClasses["com.mun.model.enumeration.Orientation"] = { __ename__ : ["com","mun","model","enumeration","Orientation"], __constructs__ : ["NORTH","SOUTH","WEST","EAST"] };
com_mun_model_enumeration_Orientation.NORTH = ["NORTH",0];
com_mun_model_enumeration_Orientation.NORTH.toString = $estr;
com_mun_model_enumeration_Orientation.NORTH.__enum__ = com_mun_model_enumeration_Orientation;
com_mun_model_enumeration_Orientation.SOUTH = ["SOUTH",1];
com_mun_model_enumeration_Orientation.SOUTH.toString = $estr;
com_mun_model_enumeration_Orientation.SOUTH.__enum__ = com_mun_model_enumeration_Orientation;
com_mun_model_enumeration_Orientation.WEST = ["WEST",2];
com_mun_model_enumeration_Orientation.WEST.toString = $estr;
com_mun_model_enumeration_Orientation.WEST.__enum__ = com_mun_model_enumeration_Orientation;
com_mun_model_enumeration_Orientation.EAST = ["EAST",3];
com_mun_model_enumeration_Orientation.EAST.toString = $estr;
com_mun_model_enumeration_Orientation.EAST.__enum__ = com_mun_model_enumeration_Orientation;
com_mun_model_enumeration_Orientation.__empty_constructs__ = [com_mun_model_enumeration_Orientation.NORTH,com_mun_model_enumeration_Orientation.SOUTH,com_mun_model_enumeration_Orientation.WEST,com_mun_model_enumeration_Orientation.EAST];
var com_mun_model_enumeration_ValueLogic = $hxClasses["com.mun.model.enumeration.ValueLogic"] = { __ename__ : ["com","mun","model","enumeration","ValueLogic"], __constructs__ : ["FALSE","TRUE","UNDEFINED","RISING_EDGE","DOWN_EDGE"] };
com_mun_model_enumeration_ValueLogic.FALSE = ["FALSE",0];
com_mun_model_enumeration_ValueLogic.FALSE.toString = $estr;
com_mun_model_enumeration_ValueLogic.FALSE.__enum__ = com_mun_model_enumeration_ValueLogic;
com_mun_model_enumeration_ValueLogic.TRUE = ["TRUE",1];
com_mun_model_enumeration_ValueLogic.TRUE.toString = $estr;
com_mun_model_enumeration_ValueLogic.TRUE.__enum__ = com_mun_model_enumeration_ValueLogic;
com_mun_model_enumeration_ValueLogic.UNDEFINED = ["UNDEFINED",2];
com_mun_model_enumeration_ValueLogic.UNDEFINED.toString = $estr;
com_mun_model_enumeration_ValueLogic.UNDEFINED.__enum__ = com_mun_model_enumeration_ValueLogic;
com_mun_model_enumeration_ValueLogic.RISING_EDGE = ["RISING_EDGE",3];
com_mun_model_enumeration_ValueLogic.RISING_EDGE.toString = $estr;
com_mun_model_enumeration_ValueLogic.RISING_EDGE.__enum__ = com_mun_model_enumeration_ValueLogic;
com_mun_model_enumeration_ValueLogic.DOWN_EDGE = ["DOWN_EDGE",4];
com_mun_model_enumeration_ValueLogic.DOWN_EDGE.toString = $estr;
com_mun_model_enumeration_ValueLogic.DOWN_EDGE.__enum__ = com_mun_model_enumeration_ValueLogic;
com_mun_model_enumeration_ValueLogic.__empty_constructs__ = [com_mun_model_enumeration_ValueLogic.FALSE,com_mun_model_enumeration_ValueLogic.TRUE,com_mun_model_enumeration_ValueLogic.UNDEFINED,com_mun_model_enumeration_ValueLogic.RISING_EDGE,com_mun_model_enumeration_ValueLogic.DOWN_EDGE];
var com_mun_model_gates_GateAbstract = function(leastInportNum) {
	this.leastInportNum = leastInportNum;
};
$hxClasses["com.mun.model.gates.GateAbstract"] = com_mun_model_gates_GateAbstract;
com_mun_model_gates_GateAbstract.__name__ = ["com","mun","model","gates","GateAbstract"];
com_mun_model_gates_GateAbstract.prototype = {
	leastInportNum: null
	,getLeastInportNumber: function() {
		return this.leastInportNum;
	}
	,addInPort: function() {
		return new com_mun_model_component_Inport();
	}
	,updateInPortPosition: function(portArray,xPosition,yPosition,height,width,orientation) {
		switch(orientation[1]) {
		case 0:
			var _g1 = 0;
			var _g = portArray.length;
			while(_g1 < _g) {
				var i = _g1++;
				portArray[i].set_xPosition(xPosition - width / 2 + width / (portArray.length + 1) * (i + 1));
				portArray[i].set_yPosition(yPosition + height / 2);
				if(portArray[i].get_sequence() == -1) {
					portArray[i].set_sequence(i);
				}
			}
			break;
		case 1:
			var _g11 = 0;
			var _g2 = portArray.length;
			while(_g11 < _g2) {
				var i1 = _g11++;
				portArray[i1].set_xPosition(xPosition - width / 2 + width / (portArray.length + 1) * (i1 + 1));
				portArray[i1].set_yPosition(yPosition - height / 2);
				if(portArray[i1].get_sequence() == -1) {
					portArray[i1].set_sequence(i1);
				}
			}
			break;
		case 2:
			var _g12 = 0;
			var _g3 = portArray.length;
			while(_g12 < _g3) {
				var i2 = _g12++;
				portArray[i2].set_xPosition(xPosition + width / 2);
				portArray[i2].set_yPosition(height / (portArray.length + 1) * (i2 + 1) + (yPosition - height / 2));
				if(portArray[i2].get_sequence() == -1) {
					portArray[i2].set_sequence(i2);
				}
			}
			break;
		case 3:
			var _g13 = 0;
			var _g4 = portArray.length;
			while(_g13 < _g4) {
				var i3 = _g13++;
				portArray[i3].set_xPosition(xPosition - width / 2);
				portArray[i3].set_yPosition(height / (portArray.length + 1) * (i3 + 1) + (yPosition - height / 2));
				if(portArray[i3].get_sequence() == -1) {
					portArray[i3].set_sequence(i3);
				}
			}
			break;
		}
		return portArray;
	}
	,updateOutPortPosition: function(portArray,xPosition,yPosition,height,width,orientation) {
		switch(orientation[1]) {
		case 0:
			var _g1 = 0;
			var _g = portArray.length;
			while(_g1 < _g) {
				var i = _g1++;
				portArray[i].set_xPosition(xPosition);
				portArray[i].set_yPosition(yPosition - height / 2);
			}
			break;
		case 1:
			var _g11 = 0;
			var _g2 = portArray.length;
			while(_g11 < _g2) {
				var i1 = _g11++;
				portArray[i1].set_xPosition(xPosition);
				portArray[i1].set_yPosition(yPosition + height / 2);
			}
			break;
		case 2:
			var _g12 = 0;
			var _g3 = portArray.length;
			while(_g12 < _g3) {
				var i2 = _g12++;
				portArray[i2].set_xPosition(xPosition - width / 2);
				portArray[i2].set_yPosition(yPosition);
			}
			break;
		case 3:
			var _g13 = 0;
			var _g4 = portArray.length;
			while(_g13 < _g4) {
				var i3 = _g13++;
				portArray[i3].set_xPosition(xPosition + width / 2);
				portArray[i3].set_yPosition(yPosition);
			}
			break;
		}
		return portArray;
	}
	,__class__: com_mun_model_gates_GateAbstract
};
var com_mun_model_gates_ComponentKind = function() { };
$hxClasses["com.mun.model.gates.ComponentKind"] = com_mun_model_gates_ComponentKind;
com_mun_model_gates_ComponentKind.__name__ = ["com","mun","model","gates","ComponentKind"];
com_mun_model_gates_ComponentKind.prototype = {
	getLeastInportNumber: null
	,algorithm: null
	,createPorts: null
	,addInPort: null
	,updateInPortPosition: null
	,updateOutPortPosition: null
	,drawComponent: null
	,__class__: com_mun_model_gates_ComponentKind
};
var com_mun_model_gates_AND = function() {
	com_mun_model_gates_GateAbstract.call(this,2);
};
$hxClasses["com.mun.model.gates.AND"] = com_mun_model_gates_AND;
com_mun_model_gates_AND.__name__ = ["com","mun","model","gates","AND"];
com_mun_model_gates_AND.__interfaces__ = [com_mun_model_gates_ComponentKind];
com_mun_model_gates_AND.__super__ = com_mun_model_gates_GateAbstract;
com_mun_model_gates_AND.prototype = $extend(com_mun_model_gates_GateAbstract.prototype,{
	algorithm: function(portArray) {
		var port;
		var value = com_mun_model_enumeration_ValueLogic.TRUE;
		var _g = 0;
		while(_g < portArray.length) {
			var port1 = portArray[_g];
			++_g;
			if(port1.get_portDescription() == com_mun_model_enumeration_IOTYPE.INPUT && port1.get_value() == com_mun_model_enumeration_ValueLogic.FALSE) {
				value = com_mun_model_enumeration_ValueLogic.FALSE;
				break;
			}
		}
		var _g1 = 0;
		while(_g1 < portArray.length) {
			var port2 = portArray[_g1];
			++_g1;
			if(port2.get_portDescription() == com_mun_model_enumeration_IOTYPE.OUTPUT) {
				HxOverrides.remove(portArray,port2);
				port2.set_value(value);
				portArray.push(port2);
			}
		}
		return portArray;
	}
	,createPorts: function(xPosition,yPosition,height,width,orientation,inportNum) {
		var portArray = [];
		switch(orientation[1]) {
		case 0:
			var counter = 0;
			while(counter < inportNum) {
				var inport = new com_mun_model_component_Inport(xPosition - width / 2 + width / (inportNum + 1) * (counter + 1),yPosition + height / 2);
				inport.set_sequence(counter);
				inport.set_portDescription(com_mun_model_enumeration_IOTYPE.INPUT);
				portArray.push(inport);
				++counter;
			}
			var outport_ = new com_mun_model_component_Outport(xPosition,yPosition - height / 2);
			outport_.set_portDescription(com_mun_model_enumeration_IOTYPE.OUTPUT);
			portArray.push(outport_);
			break;
		case 1:
			var counter1 = 0;
			while(counter1 < inportNum) {
				var inport1 = new com_mun_model_component_Inport(xPosition - width / 2 + width / (inportNum + 1) * (counter1 + 1),yPosition - height / 2);
				inport1.set_sequence(counter1);
				inport1.set_portDescription(com_mun_model_enumeration_IOTYPE.INPUT);
				portArray.push(inport1);
				++counter1;
			}
			var outport_1 = new com_mun_model_component_Outport(xPosition,yPosition + height / 2);
			outport_1.set_portDescription(com_mun_model_enumeration_IOTYPE.OUTPUT);
			portArray.push(outport_1);
			break;
		case 2:
			var counter2 = 0;
			while(counter2 < inportNum) {
				var inport2 = new com_mun_model_component_Inport(xPosition + width / 2,height / (inportNum + 1) * (counter2 + 1) + (yPosition - height / 2));
				inport2.set_sequence(counter2);
				inport2.set_portDescription(com_mun_model_enumeration_IOTYPE.INPUT);
				portArray.push(inport2);
				++counter2;
			}
			var outport_2 = new com_mun_model_component_Outport(xPosition - width / 2,yPosition);
			outport_2.set_portDescription(com_mun_model_enumeration_IOTYPE.OUTPUT);
			portArray.push(outport_2);
			break;
		case 3:
			var counter3 = 0;
			while(counter3 < inportNum) {
				var inport3 = new com_mun_model_component_Inport(xPosition - width / 2,height / (inportNum + 1) * (counter3 + 1) + (yPosition - height / 2));
				inport3.set_sequence(counter3);
				inport3.set_portDescription(com_mun_model_enumeration_IOTYPE.INPUT);
				portArray.push(inport3);
				++counter3;
			}
			var outport_3 = new com_mun_model_component_Outport(xPosition + width / 2,yPosition);
			outport_3.set_portDescription(com_mun_model_enumeration_IOTYPE.OUTPUT);
			portArray.push(outport_3);
			break;
		}
		return portArray;
	}
	,drawComponent: function(component,drawingAdapter,highLight) {
		var drawComponent = new com_mun_view_drawComponents_DrawAND(component,drawingAdapter);
		if(highLight) {
			drawComponent.drawCorrespondingComponent("red");
		} else {
			drawComponent.drawCorrespondingComponent("black");
		}
	}
	,__class__: com_mun_model_gates_AND
});
var com_mun_model_gates_FlipFlop = function() {
	com_mun_model_gates_GateAbstract.call(this,2);
};
$hxClasses["com.mun.model.gates.FlipFlop"] = com_mun_model_gates_FlipFlop;
com_mun_model_gates_FlipFlop.__name__ = ["com","mun","model","gates","FlipFlop"];
com_mun_model_gates_FlipFlop.__interfaces__ = [com_mun_model_gates_ComponentKind];
com_mun_model_gates_FlipFlop.__super__ = com_mun_model_gates_GateAbstract;
com_mun_model_gates_FlipFlop.prototype = $extend(com_mun_model_gates_GateAbstract.prototype,{
	algorithm: function(portArray) {
		var port;
		var value = com_mun_model_enumeration_ValueLogic.TRUE;
		var _g = 0;
		while(_g < portArray.length) {
			var port1 = portArray[_g];
			++_g;
			if(port1.get_portDescription() == com_mun_model_enumeration_IOTYPE.CLK) {
				if(port1.get_value() != com_mun_model_enumeration_ValueLogic.RISING_EDGE) {
					return portArray;
				}
			}
		}
		var _g1 = 0;
		while(_g1 < portArray.length) {
			var port2 = portArray[_g1];
			++_g1;
			if(port2.get_portDescription() == com_mun_model_enumeration_IOTYPE.D) {
				value = port2.get_value();
			}
		}
		var _g2 = 0;
		while(_g2 < portArray.length) {
			var port3 = portArray[_g2];
			++_g2;
			if(port3.get_portDescription() == com_mun_model_enumeration_IOTYPE.Q) {
				HxOverrides.remove(portArray,port3);
				port3.set_value(value);
				portArray.push(port3);
			}
			if(port3.get_portDescription() == com_mun_model_enumeration_IOTYPE.QN) {
				HxOverrides.remove(portArray,port3);
				if(value == com_mun_model_enumeration_ValueLogic.TRUE) {
					port3.set_value(com_mun_model_enumeration_ValueLogic.FALSE);
				} else if(value == com_mun_model_enumeration_ValueLogic.FALSE) {
					port3.set_value(com_mun_model_enumeration_ValueLogic.TRUE);
				}
				portArray.push(port3);
			}
		}
		return portArray;
	}
	,createPorts: function(xPosition,yPosition,height,width,orientation,inportNum) {
		var portArray = [];
		switch(orientation[1]) {
		case 0:
			var inport_D = new com_mun_model_component_Inport(xPosition - width / 2 + width / 3,yPosition + height / 2);
			inport_D.set_portDescription(com_mun_model_enumeration_IOTYPE.D);
			portArray.push(inport_D);
			var inport_CLK = new com_mun_model_component_Inport(xPosition - width / 2 + width / 3 * 2,yPosition + height / 2);
			inport_CLK.set_portDescription(com_mun_model_enumeration_IOTYPE.CLK);
			portArray.push(inport_CLK);
			var outport_Q = new com_mun_model_component_Outport(xPosition - width / 2 + width / 3,yPosition - height / 2);
			outport_Q.set_portDescription(com_mun_model_enumeration_IOTYPE.Q);
			portArray.push(outport_Q);
			var outport_QN = new com_mun_model_component_Outport(xPosition - width / 2 + width / 3 * 2,yPosition - height / 2);
			outport_QN.set_portDescription(com_mun_model_enumeration_IOTYPE.QN);
			portArray.push(outport_QN);
			break;
		case 1:
			var inport_D1 = new com_mun_model_component_Inport(xPosition - width / 2 + width / 3,yPosition - height / 2);
			inport_D1.set_portDescription(com_mun_model_enumeration_IOTYPE.D);
			portArray.push(inport_D1);
			var inport_CLK1 = new com_mun_model_component_Inport(xPosition - width / 2 + width / 3 * 2,yPosition - height / 2);
			inport_CLK1.set_portDescription(com_mun_model_enumeration_IOTYPE.CLK);
			portArray.push(inport_CLK1);
			var outport_Q1 = new com_mun_model_component_Outport(xPosition - width / 2 + width / 3,yPosition + height / 2);
			outport_Q1.set_portDescription(com_mun_model_enumeration_IOTYPE.Q);
			portArray.push(outport_Q1);
			var outport_QN1 = new com_mun_model_component_Outport(xPosition - width / 2 + width / 3 * 2,yPosition + height / 2);
			outport_QN1.set_portDescription(com_mun_model_enumeration_IOTYPE.QN);
			portArray.push(outport_QN1);
			break;
		case 2:
			var inport_D2 = new com_mun_model_component_Inport(xPosition + width / 2,height / 3 + (yPosition - height / 2));
			inport_D2.set_portDescription(com_mun_model_enumeration_IOTYPE.D);
			portArray.push(inport_D2);
			var inport_CLK2 = new com_mun_model_component_Inport(xPosition + width / 2,height / 3 * 2 + (yPosition - height / 2));
			inport_CLK2.set_portDescription(com_mun_model_enumeration_IOTYPE.CLK);
			portArray.push(inport_CLK2);
			var outport_Q2 = new com_mun_model_component_Outport(xPosition - width / 2,height / 3 + (yPosition - height / 2));
			outport_Q2.set_portDescription(com_mun_model_enumeration_IOTYPE.Q);
			portArray.push(outport_Q2);
			var outport_QN2 = new com_mun_model_component_Outport(xPosition - width / 2,height / 3 * 2 + (yPosition - height / 2));
			outport_QN2.set_portDescription(com_mun_model_enumeration_IOTYPE.QN);
			portArray.push(outport_QN2);
			break;
		case 3:
			var inport_D3 = new com_mun_model_component_Inport(xPosition - width / 2,height / 3 + (yPosition - height / 2));
			inport_D3.set_portDescription(com_mun_model_enumeration_IOTYPE.D);
			portArray.push(inport_D3);
			var inport_CLK3 = new com_mun_model_component_Inport(xPosition - width / 2,height / 3 * 2 + (yPosition - height / 2));
			inport_CLK3.set_portDescription(com_mun_model_enumeration_IOTYPE.CLK);
			portArray.push(inport_CLK3);
			var outport_Q3 = new com_mun_model_component_Outport(xPosition + width / 2,height / 3 + (yPosition - height / 2));
			outport_Q3.set_portDescription(com_mun_model_enumeration_IOTYPE.Q);
			portArray.push(outport_Q3);
			var outport_QN3 = new com_mun_model_component_Outport(xPosition + width / 2,height / 3 * 2 + (yPosition - height / 2));
			outport_QN3.set_portDescription(com_mun_model_enumeration_IOTYPE.QN);
			portArray.push(outport_QN3);
			break;
		}
		return portArray;
	}
	,addInPort: function() {
		return null;
	}
	,updateInPortPosition: function(portArray,xPosition,yPosition,height,width,orientation) {
		switch(orientation[1]) {
		case 0:
			var _g1 = 0;
			var _g = portArray.length;
			while(_g1 < _g) {
				var i = _g1++;
				if(portArray[i].get_portDescription() == com_mun_model_enumeration_IOTYPE.D) {
					portArray[i].set_xPosition(xPosition - width / 2 + width / 3);
					portArray[i].set_yPosition(yPosition + height / 2);
				}
				if(portArray[i].get_portDescription() == com_mun_model_enumeration_IOTYPE.CLK) {
					portArray[i].set_xPosition(xPosition - width / 2 + width / 3 * 2);
					portArray[i].set_yPosition(yPosition + height / 2);
				}
			}
			break;
		case 1:
			var _g11 = 0;
			var _g2 = portArray.length;
			while(_g11 < _g2) {
				var i1 = _g11++;
				if(portArray[i1].get_portDescription() == com_mun_model_enumeration_IOTYPE.D) {
					portArray[i1].set_xPosition(xPosition - width / 2 + width / 3);
					portArray[i1].set_yPosition(yPosition - height / 2);
				}
				if(portArray[i1].get_portDescription() == com_mun_model_enumeration_IOTYPE.CLK) {
					portArray[i1].set_xPosition(xPosition - width / 2 + width / 3 * 2);
					portArray[i1].set_yPosition(yPosition - height / 2);
				}
			}
			break;
		case 2:
			var _g12 = 0;
			var _g3 = portArray.length;
			while(_g12 < _g3) {
				var i2 = _g12++;
				if(portArray[i2].get_portDescription() == com_mun_model_enumeration_IOTYPE.D) {
					portArray[i2].set_xPosition(xPosition + width / 2);
					portArray[i2].set_yPosition(height / 3 + (yPosition - height / 2));
				}
				if(portArray[i2].get_portDescription() == com_mun_model_enumeration_IOTYPE.CLK) {
					portArray[i2].set_xPosition(xPosition + width / 2);
					portArray[i2].set_yPosition(height / 3 * 2 + (yPosition - height / 2));
				}
			}
			break;
		case 3:
			var _g13 = 0;
			var _g4 = portArray.length;
			while(_g13 < _g4) {
				var i3 = _g13++;
				if(portArray[i3].get_portDescription() == com_mun_model_enumeration_IOTYPE.D) {
					portArray[i3].set_xPosition(xPosition - width / 2);
					portArray[i3].set_yPosition(height / 3 + (yPosition - height / 2));
				}
				if(portArray[i3].get_portDescription() == com_mun_model_enumeration_IOTYPE.CLK) {
					portArray[i3].set_xPosition(xPosition - width / 2);
					portArray[i3].set_yPosition(height / 3 * 2 + (yPosition - height / 2));
				}
			}
			break;
		}
		return portArray;
	}
	,updateOutPortPosition: function(portArray,xPosition,yPosition,height,width,orientation) {
		switch(orientation[1]) {
		case 0:
			var _g1 = 0;
			var _g = portArray.length;
			while(_g1 < _g) {
				var i = _g1++;
				if(portArray[i].get_portDescription() == com_mun_model_enumeration_IOTYPE.Q) {
					portArray[i].set_xPosition(xPosition - width / 2 + width / 3);
					portArray[i].set_yPosition(yPosition - height / 2);
				}
				if(portArray[i].get_portDescription() == com_mun_model_enumeration_IOTYPE.QN) {
					portArray[i].set_xPosition(xPosition - width / 2 + width / 3 * 2);
					portArray[i].set_yPosition(yPosition - height / 2);
				}
			}
			break;
		case 1:
			var _g11 = 0;
			var _g2 = portArray.length;
			while(_g11 < _g2) {
				var i1 = _g11++;
				if(portArray[i1].get_portDescription() == com_mun_model_enumeration_IOTYPE.Q) {
					portArray[i1].set_xPosition(xPosition - width / 2 + width / 3);
					portArray[i1].set_yPosition(yPosition + height / 2);
				}
				if(portArray[i1].get_portDescription() == com_mun_model_enumeration_IOTYPE.QN) {
					portArray[i1].set_xPosition(xPosition - width / 2 + width / 3 * 2);
					portArray[i1].set_yPosition(yPosition + height / 2);
				}
			}
			break;
		case 2:
			var _g12 = 0;
			var _g3 = portArray.length;
			while(_g12 < _g3) {
				var i2 = _g12++;
				if(portArray[i2].get_portDescription() == com_mun_model_enumeration_IOTYPE.Q) {
					portArray[i2].set_xPosition(xPosition - width / 2);
					portArray[i2].set_yPosition(height / 3 + (yPosition - height / 2));
				}
				if(portArray[i2].get_portDescription() == com_mun_model_enumeration_IOTYPE.QN) {
					portArray[i2].set_xPosition(xPosition - width / 2);
					portArray[i2].set_yPosition(height / 3 * 2 + (yPosition - height / 2));
				}
			}
			break;
		case 3:
			var _g13 = 0;
			var _g4 = portArray.length;
			while(_g13 < _g4) {
				var i3 = _g13++;
				if(portArray[i3].get_portDescription() == com_mun_model_enumeration_IOTYPE.Q) {
					portArray[i3].set_xPosition(xPosition + width / 2);
					portArray[i3].set_yPosition(height / 3 + (yPosition - height / 2));
				}
				if(portArray[i3].get_portDescription() == com_mun_model_enumeration_IOTYPE.QN) {
					portArray[i3].set_xPosition(xPosition + width / 2);
					portArray[i3].set_yPosition(height / 3 * 2 + (yPosition - height / 2));
				}
			}
			break;
		}
		return portArray;
	}
	,drawComponent: function(component,drawingAdapter,highLight) {
		var drawComponent = new com_mun_view_drawComponents_DrawFlipFlop(component,drawingAdapter);
		if(highLight) {
			drawComponent.drawCorrespondingComponent("red");
		} else {
			drawComponent.drawCorrespondingComponent("black");
		}
	}
	,__class__: com_mun_model_gates_FlipFlop
});
var com_mun_model_gates_Input = function() {
	com_mun_model_gates_GateAbstract.call(this,1);
};
$hxClasses["com.mun.model.gates.Input"] = com_mun_model_gates_Input;
com_mun_model_gates_Input.__name__ = ["com","mun","model","gates","Input"];
com_mun_model_gates_Input.__interfaces__ = [com_mun_model_gates_ComponentKind];
com_mun_model_gates_Input.__super__ = com_mun_model_gates_GateAbstract;
com_mun_model_gates_Input.prototype = $extend(com_mun_model_gates_GateAbstract.prototype,{
	sequence: null
	,algorithm: function(portArray) {
		var port;
		var value = com_mun_model_enumeration_ValueLogic.TRUE;
		var _g = 0;
		while(_g < portArray.length) {
			var port1 = portArray[_g];
			++_g;
			if(port1.get_portDescription() == com_mun_model_enumeration_IOTYPE.INPUT) {
				value = port1.get_value();
				break;
			}
		}
		var _g1 = 0;
		while(_g1 < portArray.length) {
			var port2 = portArray[_g1];
			++_g1;
			if(port2.get_portDescription() == com_mun_model_enumeration_IOTYPE.OUTPUT) {
				HxOverrides.remove(portArray,port2);
				port2.set_value(value);
				portArray.push(port2);
			}
		}
		return portArray;
	}
	,createPorts: function(xPosition,yPosition,height,width,orientation,inportNum) {
		var portArray = [];
		inportNum = 1;
		switch(orientation[1]) {
		case 0:
			var inport = new com_mun_model_component_Inport(xPosition,yPosition + height / 2);
			inport.set_sequence(1);
			inport.set_portDescription(com_mun_model_enumeration_IOTYPE.INPUT);
			portArray.push(inport);
			var outport_ = new com_mun_model_component_Outport(xPosition,yPosition - height / 2);
			outport_.set_portDescription(com_mun_model_enumeration_IOTYPE.OUTPUT);
			portArray.push(outport_);
			break;
		case 1:
			var inport1 = new com_mun_model_component_Inport(xPosition,yPosition - height / 2);
			inport1.set_sequence(1);
			inport1.set_portDescription(com_mun_model_enumeration_IOTYPE.INPUT);
			portArray.push(inport1);
			var outport_1 = new com_mun_model_component_Outport(xPosition,yPosition + height / 2);
			outport_1.set_portDescription(com_mun_model_enumeration_IOTYPE.OUTPUT);
			portArray.push(outport_1);
			break;
		case 2:
			var inport2 = new com_mun_model_component_Inport(xPosition + width / 2,yPosition);
			inport2.set_sequence(1);
			inport2.set_portDescription(com_mun_model_enumeration_IOTYPE.INPUT);
			portArray.push(inport2);
			var outport_2 = new com_mun_model_component_Outport(xPosition - width / 2,yPosition);
			outport_2.set_portDescription(com_mun_model_enumeration_IOTYPE.OUTPUT);
			portArray.push(outport_2);
			break;
		case 3:
			var inport3 = new com_mun_model_component_Inport(xPosition - width / 2,yPosition);
			inport3.set_sequence(1);
			inport3.set_portDescription(com_mun_model_enumeration_IOTYPE.INPUT);
			portArray.push(inport3);
			var outport_3 = new com_mun_model_component_Outport(xPosition + width / 2,yPosition);
			outport_3.set_portDescription(com_mun_model_enumeration_IOTYPE.OUTPUT);
			portArray.push(outport_3);
			break;
		}
		return portArray;
	}
	,get_sequence: function() {
		return this.sequence;
	}
	,set_sequence: function(value) {
		return this.sequence = value;
	}
	,addInPort: function() {
		return null;
	}
	,updateInPortPosition: function(portArray,xPosition,yPosition,height,width,orientation) {
		switch(orientation[1]) {
		case 0:
			portArray[0].set_xPosition(xPosition);
			portArray[0].set_yPosition(yPosition + height / 2);
			break;
		case 1:
			portArray[0].set_xPosition(xPosition);
			portArray[0].set_yPosition(yPosition - height / 2);
			break;
		case 2:
			portArray[0].set_xPosition(xPosition + width / 2);
			portArray[0].set_yPosition(yPosition);
			break;
		case 3:
			portArray[0].set_xPosition(xPosition - width / 2);
			portArray[0].set_yPosition(yPosition);
			break;
		}
		return portArray;
	}
	,updateOutPortPosition: function(portArray,xPosition,yPosition,height,width,orientation) {
		switch(orientation[1]) {
		case 0:
			portArray[0].set_xPosition(xPosition);
			portArray[0].set_yPosition(yPosition - height / 2);
			break;
		case 1:
			portArray[0].set_xPosition(xPosition);
			portArray[0].set_yPosition(yPosition + height / 2);
			break;
		case 2:
			portArray[0].set_xPosition(xPosition - width / 2);
			portArray[0].set_yPosition(yPosition);
			break;
		case 3:
			portArray[0].set_xPosition(xPosition + width / 2);
			portArray[0].set_yPosition(yPosition);
			break;
		}
		return portArray;
	}
	,drawComponent: function(component,drawingAdapter,highLight) {
		var drawComponent = new com_mun_view_drawComponents_DrawInput(component,drawingAdapter);
		if(highLight) {
			drawComponent.drawCorrespondingComponent("red");
		} else {
			drawComponent.drawCorrespondingComponent("black");
		}
	}
	,__class__: com_mun_model_gates_Input
});
var com_mun_model_gates_MUX = function() {
	com_mun_model_gates_GateAbstract.call(this,2);
};
$hxClasses["com.mun.model.gates.MUX"] = com_mun_model_gates_MUX;
com_mun_model_gates_MUX.__name__ = ["com","mun","model","gates","MUX"];
com_mun_model_gates_MUX.__interfaces__ = [com_mun_model_gates_ComponentKind];
com_mun_model_gates_MUX.__super__ = com_mun_model_gates_GateAbstract;
com_mun_model_gates_MUX.prototype = $extend(com_mun_model_gates_GateAbstract.prototype,{
	algorithm: function(portArray) {
		var port;
		var value = com_mun_model_enumeration_ValueLogic.TRUE;
		var selectValue = com_mun_model_enumeration_ValueLogic.FALSE;
		var _g = 0;
		while(_g < portArray.length) {
			var port1 = portArray[_g];
			++_g;
			if(port1.get_portDescription() == com_mun_model_enumeration_IOTYPE.S) {
				selectValue = port1.get_value();
				break;
			}
		}
		if(selectValue == com_mun_model_enumeration_ValueLogic.TRUE) {
			var _g1 = 0;
			while(_g1 < portArray.length) {
				var port2 = portArray[_g1];
				++_g1;
				if(port2.get_sequence() == 1) {
					value = port2.get_value();
					break;
				}
			}
		} else if(selectValue == com_mun_model_enumeration_ValueLogic.FALSE) {
			var _g2 = 0;
			while(_g2 < portArray.length) {
				var port3 = portArray[_g2];
				++_g2;
				if(port3.get_sequence() == 0) {
					value = port3.get_value();
					break;
				}
			}
		}
		var _g3 = 0;
		while(_g3 < portArray.length) {
			var port4 = portArray[_g3];
			++_g3;
			if(port4.get_portDescription() == com_mun_model_enumeration_IOTYPE.OUTPUT) {
				HxOverrides.remove(portArray,port4);
				port4.set_value(value);
				portArray.push(port4);
				break;
			}
		}
		return portArray;
	}
	,createPorts: function(xPosition,yPosition,height,width,orientation,inportNum) {
		var portArray = [];
		switch(orientation[1]) {
		case 0:
			var inport_S = new com_mun_model_component_Inport(xPosition + width / 2,yPosition);
			inport_S.set_portDescription(com_mun_model_enumeration_IOTYPE.S);
			portArray.push(inport_S);
			var inport_1 = new com_mun_model_component_Inport(xPosition - width / 2 + height / 3 * 2,yPosition + height / 2);
			inport_1.set_portDescription(com_mun_model_enumeration_IOTYPE.INPUT);
			inport_1.set_sequence(0);
			portArray.push(inport_1);
			var inport_2 = new com_mun_model_component_Inport(xPosition - width / 2 + width / 3,yPosition + height / 2);
			inport_2.set_portDescription(com_mun_model_enumeration_IOTYPE.INPUT);
			inport_2.set_sequence(1);
			portArray.push(inport_2);
			var outport_ = new com_mun_model_component_Outport(xPosition,yPosition - height / 2);
			outport_.set_portDescription(com_mun_model_enumeration_IOTYPE.OUTPUT);
			portArray.push(outport_);
			break;
		case 1:
			var inport_S1 = new com_mun_model_component_Inport(xPosition - width / 2,yPosition);
			inport_S1.set_portDescription(com_mun_model_enumeration_IOTYPE.S);
			portArray.push(inport_S1);
			var inport_11 = new com_mun_model_component_Inport(xPosition - width / 2 + height / 3 * 2,yPosition - height / 2);
			inport_11.set_portDescription(com_mun_model_enumeration_IOTYPE.INPUT);
			inport_11.set_sequence(0);
			portArray.push(inport_11);
			var inport_21 = new com_mun_model_component_Inport(xPosition - width / 2 + width / 3,yPosition - height / 2);
			inport_21.set_portDescription(com_mun_model_enumeration_IOTYPE.INPUT);
			inport_21.set_sequence(1);
			portArray.push(inport_21);
			var outport_1 = new com_mun_model_component_Outport(xPosition,yPosition + height / 2);
			outport_1.set_portDescription(com_mun_model_enumeration_IOTYPE.OUTPUT);
			portArray.push(outport_1);
			break;
		case 2:
			var inport_S2 = new com_mun_model_component_Inport(xPosition,yPosition - height / 2);
			inport_S2.set_portDescription(com_mun_model_enumeration_IOTYPE.S);
			portArray.push(inport_S2);
			var inport_12 = new com_mun_model_component_Inport(xPosition + width / 2,height / 3 + (yPosition - height / 2));
			inport_12.set_portDescription(com_mun_model_enumeration_IOTYPE.INPUT);
			inport_12.set_sequence(0);
			portArray.push(inport_12);
			var inport_22 = new com_mun_model_component_Inport(xPosition + width / 2,height / 3 * 2 + (yPosition - height / 2));
			inport_22.set_portDescription(com_mun_model_enumeration_IOTYPE.INPUT);
			inport_22.set_sequence(1);
			portArray.push(inport_22);
			var outport_2 = new com_mun_model_component_Outport(xPosition - width / 2,yPosition);
			outport_2.set_portDescription(com_mun_model_enumeration_IOTYPE.OUTPUT);
			portArray.push(outport_2);
			break;
		case 3:
			var inport_S3 = new com_mun_model_component_Inport(xPosition,yPosition - height / 2);
			inport_S3.set_portDescription(com_mun_model_enumeration_IOTYPE.S);
			portArray.push(inport_S3);
			var inport_13 = new com_mun_model_component_Inport(xPosition - width / 2,height / 3 + (yPosition - height / 2));
			inport_13.set_portDescription(com_mun_model_enumeration_IOTYPE.INPUT);
			inport_13.set_sequence(0);
			portArray.push(inport_13);
			var inport_23 = new com_mun_model_component_Inport(xPosition - width / 2,height / 3 * 2 + (yPosition - height / 2));
			inport_23.set_portDescription(com_mun_model_enumeration_IOTYPE.INPUT);
			inport_23.set_sequence(1);
			portArray.push(inport_23);
			var outport_3 = new com_mun_model_component_Outport(xPosition + width / 2,yPosition);
			outport_3.set_portDescription(com_mun_model_enumeration_IOTYPE.OUTPUT);
			portArray.push(outport_3);
			break;
		}
		return portArray;
	}
	,updateInPortPosition: function(portArray,xPosition,yPosition,height,width,orientation) {
		switch(orientation[1]) {
		case 0:
			var _g1 = 0;
			var _g = portArray.length;
			while(_g1 < _g) {
				var i = _g1++;
				if(portArray[i].get_portDescription() != com_mun_model_enumeration_IOTYPE.S) {
					portArray[i].set_xPosition(xPosition - width / 2 + width / (portArray.length + 1) * (i + 1));
					portArray[i].set_yPosition(yPosition + height / 2);
					if(portArray[i].get_sequence() == -1) {
						portArray[i].set_sequence(i);
					}
				} else {
					portArray[i].set_xPosition(xPosition - width / 2);
					portArray[i].set_yPosition(yPosition);
				}
			}
			break;
		case 1:
			var _g11 = 0;
			var _g2 = portArray.length;
			while(_g11 < _g2) {
				var i1 = _g11++;
				if(portArray[i1].get_portDescription() != com_mun_model_enumeration_IOTYPE.S) {
					portArray[i1].set_xPosition(xPosition - width / 2 + width / (portArray.length + 1) * (i1 + 1));
					portArray[i1].set_yPosition(yPosition - height / 2);
					if(portArray[i1].get_sequence() == -1) {
						portArray[i1].set_sequence(i1);
					}
				} else {
					portArray[i1].set_xPosition(xPosition + width / 2);
					portArray[i1].set_yPosition(yPosition);
				}
			}
			break;
		case 2:
			var _g12 = 0;
			var _g3 = portArray.length;
			while(_g12 < _g3) {
				var i2 = _g12++;
				if(portArray[i2].get_portDescription() != com_mun_model_enumeration_IOTYPE.S) {
					portArray[i2].set_xPosition(xPosition + width / 2);
					portArray[i2].set_yPosition(height / (portArray.length + 1) * (i2 + 1) + (yPosition - height / 2));
					if(portArray[i2].get_sequence() == -1) {
						portArray[i2].set_sequence(i2);
					}
				} else {
					portArray[i2].set_xPosition(xPosition);
					portArray[i2].set_yPosition(yPosition - height / 2);
				}
			}
			break;
		case 3:
			var _g13 = 0;
			var _g4 = portArray.length;
			while(_g13 < _g4) {
				var i3 = _g13++;
				if(portArray[i3].get_portDescription() != com_mun_model_enumeration_IOTYPE.S) {
					portArray[i3].set_xPosition(xPosition - width / 2);
					portArray[i3].set_yPosition(height / (portArray.length + 1) * (i3 + 1) + (yPosition - height / 2));
					if(portArray[i3].get_sequence() == -1) {
						portArray[i3].set_sequence(i3);
					}
				} else {
					portArray[i3].set_xPosition(xPosition);
					portArray[i3].set_yPosition(yPosition - height / 2);
				}
			}
			break;
		}
		return portArray;
	}
	,drawComponent: function(component,drawingAdapter,highLight) {
		var drawComponent = new com_mun_view_drawComponents_DrawMUX(component,drawingAdapter);
		if(highLight) {
			drawComponent.drawCorrespondingComponent("red");
		} else {
			drawComponent.drawCorrespondingComponent("black");
		}
	}
	,__class__: com_mun_model_gates_MUX
});
var com_mun_model_gates_NAND = function() {
	com_mun_model_gates_GateAbstract.call(this,2);
};
$hxClasses["com.mun.model.gates.NAND"] = com_mun_model_gates_NAND;
com_mun_model_gates_NAND.__name__ = ["com","mun","model","gates","NAND"];
com_mun_model_gates_NAND.__interfaces__ = [com_mun_model_gates_ComponentKind];
com_mun_model_gates_NAND.__super__ = com_mun_model_gates_GateAbstract;
com_mun_model_gates_NAND.prototype = $extend(com_mun_model_gates_GateAbstract.prototype,{
	algorithm: function(portArray) {
		var port;
		var value = com_mun_model_enumeration_ValueLogic.FALSE;
		var _g = 0;
		while(_g < portArray.length) {
			var port1 = portArray[_g];
			++_g;
			if(port1.get_portDescription() == com_mun_model_enumeration_IOTYPE.INPUT && port1.get_value() == com_mun_model_enumeration_ValueLogic.FALSE) {
				value = com_mun_model_enumeration_ValueLogic.TRUE;
				break;
			}
		}
		var _g1 = 0;
		while(_g1 < portArray.length) {
			var port2 = portArray[_g1];
			++_g1;
			if(port2.get_portDescription() == com_mun_model_enumeration_IOTYPE.OUTPUT) {
				HxOverrides.remove(portArray,port2);
				port2.set_value(value);
				portArray.push(port2);
			}
		}
		return portArray;
	}
	,createPorts: function(xPosition,yPosition,height,width,orientation,inportNum) {
		var portArray = [];
		if(inportNum == null || inportNum < 2) {
			inportNum = 2;
		}
		switch(orientation[1]) {
		case 0:
			var counter = 0;
			while(counter < inportNum) {
				var inport = new com_mun_model_component_Inport(xPosition - width / 2 + width / (inportNum + 1) * (counter + 1),yPosition + height / 2);
				inport.set_sequence(counter + 1);
				inport.set_portDescription(com_mun_model_enumeration_IOTYPE.INPUT);
				portArray.push(inport);
				++counter;
			}
			var outport_ = new com_mun_model_component_Outport(xPosition,yPosition - height / 2);
			outport_.set_portDescription(com_mun_model_enumeration_IOTYPE.OUTPUT);
			portArray.push(outport_);
			break;
		case 1:
			var counter1 = 0;
			while(counter1 < inportNum) {
				var inport1 = new com_mun_model_component_Inport(xPosition - width / 2 + width / (inportNum + 1) * (counter1 + 1),yPosition - height / 2);
				inport1.set_sequence(counter1 + 1);
				inport1.set_portDescription(com_mun_model_enumeration_IOTYPE.INPUT);
				portArray.push(inport1);
				++counter1;
			}
			var outport_1 = new com_mun_model_component_Outport(xPosition,yPosition + height / 2);
			outport_1.set_portDescription(com_mun_model_enumeration_IOTYPE.OUTPUT);
			portArray.push(outport_1);
			break;
		case 2:
			var counter2 = 0;
			while(counter2 < inportNum) {
				var inport2 = new com_mun_model_component_Inport(xPosition + width / 2,height / (inportNum + 1) * (counter2 + 1) + (yPosition - height / 2));
				inport2.set_sequence(counter2 + 1);
				inport2.set_portDescription(com_mun_model_enumeration_IOTYPE.INPUT);
				portArray.push(inport2);
				++counter2;
			}
			var outport_2 = new com_mun_model_component_Outport(xPosition - width / 2,yPosition);
			outport_2.set_portDescription(com_mun_model_enumeration_IOTYPE.OUTPUT);
			portArray.push(outport_2);
			break;
		case 3:
			var counter3 = 0;
			while(counter3 < inportNum) {
				var inport3 = new com_mun_model_component_Inport(xPosition - width / 2,height / (inportNum + 1) * (counter3 + 1) + (yPosition - height / 2));
				inport3.set_sequence(counter3 + 1);
				inport3.set_portDescription(com_mun_model_enumeration_IOTYPE.INPUT);
				portArray.push(inport3);
				++counter3;
			}
			var outport_3 = new com_mun_model_component_Outport(xPosition + width / 2,yPosition);
			outport_3.set_portDescription(com_mun_model_enumeration_IOTYPE.OUTPUT);
			portArray.push(outport_3);
			break;
		}
		return portArray;
	}
	,drawComponent: function(component,drawingAdapter,highLight) {
		var drawComponent = new com_mun_view_drawComponents_DrawNAND(component,drawingAdapter);
		if(highLight) {
			drawComponent.drawCorrespondingComponent("red");
		} else {
			drawComponent.drawCorrespondingComponent("black");
		}
	}
	,__class__: com_mun_model_gates_NAND
});
var com_mun_model_gates_NOR = function() {
	com_mun_model_gates_GateAbstract.call(this,2);
};
$hxClasses["com.mun.model.gates.NOR"] = com_mun_model_gates_NOR;
com_mun_model_gates_NOR.__name__ = ["com","mun","model","gates","NOR"];
com_mun_model_gates_NOR.__interfaces__ = [com_mun_model_gates_ComponentKind];
com_mun_model_gates_NOR.__super__ = com_mun_model_gates_GateAbstract;
com_mun_model_gates_NOR.prototype = $extend(com_mun_model_gates_GateAbstract.prototype,{
	algorithm: function(portArray) {
		var port;
		var value = com_mun_model_enumeration_ValueLogic.TRUE;
		var _g = 0;
		while(_g < portArray.length) {
			var port1 = portArray[_g];
			++_g;
			if(port1.get_portDescription() == com_mun_model_enumeration_IOTYPE.INPUT && port1.get_value() == com_mun_model_enumeration_ValueLogic.TRUE) {
				value = com_mun_model_enumeration_ValueLogic.FALSE;
				break;
			}
		}
		var _g1 = 0;
		while(_g1 < portArray.length) {
			var port2 = portArray[_g1];
			++_g1;
			if(port2.get_portDescription() == com_mun_model_enumeration_IOTYPE.OUTPUT) {
				HxOverrides.remove(portArray,port2);
				port2.set_value(value);
				portArray.push(port2);
			}
		}
		return portArray;
	}
	,createPorts: function(xPosition,yPosition,height,width,orientation,inportNum) {
		var portArray = [];
		if(inportNum == null || inportNum < 2) {
			inportNum = 2;
		}
		switch(orientation[1]) {
		case 0:
			var counter = 0;
			while(counter < inportNum) {
				var inport = new com_mun_model_component_Inport(xPosition - width / 2 + width / (inportNum + 1) * (counter + 1),yPosition + height / 2);
				inport.set_sequence(counter + 1);
				inport.set_portDescription(com_mun_model_enumeration_IOTYPE.INPUT);
				portArray.push(inport);
				++counter;
			}
			var outport_ = new com_mun_model_component_Outport(xPosition,yPosition - height / 2);
			outport_.set_portDescription(com_mun_model_enumeration_IOTYPE.OUTPUT);
			portArray.push(outport_);
			break;
		case 1:
			var counter1 = 0;
			while(counter1 < inportNum) {
				var inport1 = new com_mun_model_component_Inport(xPosition - width / 2 + width / (inportNum + 1) * (counter1 + 1),yPosition - height / 2);
				inport1.set_sequence(counter1 + 1);
				inport1.set_portDescription(com_mun_model_enumeration_IOTYPE.INPUT);
				portArray.push(inport1);
				++counter1;
			}
			var outport_1 = new com_mun_model_component_Outport(xPosition,yPosition + height / 2);
			outport_1.set_portDescription(com_mun_model_enumeration_IOTYPE.OUTPUT);
			portArray.push(outport_1);
			break;
		case 2:
			var counter2 = 0;
			while(counter2 < inportNum) {
				var inport2 = new com_mun_model_component_Inport(xPosition + width / 2,height / (inportNum + 1) * (counter2 + 1) + (yPosition - height / 2));
				inport2.set_sequence(counter2 + 1);
				inport2.set_portDescription(com_mun_model_enumeration_IOTYPE.INPUT);
				portArray.push(inport2);
				++counter2;
			}
			var outport_2 = new com_mun_model_component_Outport(xPosition - width / 2,yPosition);
			outport_2.set_portDescription(com_mun_model_enumeration_IOTYPE.OUTPUT);
			portArray.push(outport_2);
			break;
		case 3:
			var counter3 = 0;
			while(counter3 < inportNum) {
				var inport3 = new com_mun_model_component_Inport(xPosition - width / 2,height / (inportNum + 1) * (counter3 + 1) + (yPosition - height / 2));
				inport3.set_sequence(counter3 + 1);
				inport3.set_portDescription(com_mun_model_enumeration_IOTYPE.INPUT);
				portArray.push(inport3);
				++counter3;
			}
			var outport_3 = new com_mun_model_component_Outport(xPosition + width / 2,yPosition);
			outport_3.set_portDescription(com_mun_model_enumeration_IOTYPE.OUTPUT);
			portArray.push(outport_3);
			break;
		}
		return portArray;
	}
	,drawComponent: function(component,drawingAdapter,highLight) {
		var drawComponent = new com_mun_view_drawComponents_DrawNOR(component,drawingAdapter);
		if(highLight) {
			drawComponent.drawCorrespondingComponent("red");
		} else {
			drawComponent.drawCorrespondingComponent("black");
		}
	}
	,__class__: com_mun_model_gates_NOR
});
var com_mun_model_gates_NOT = function() {
	com_mun_model_gates_GateAbstract.call(this,2);
};
$hxClasses["com.mun.model.gates.NOT"] = com_mun_model_gates_NOT;
com_mun_model_gates_NOT.__name__ = ["com","mun","model","gates","NOT"];
com_mun_model_gates_NOT.__interfaces__ = [com_mun_model_gates_ComponentKind];
com_mun_model_gates_NOT.__super__ = com_mun_model_gates_GateAbstract;
com_mun_model_gates_NOT.prototype = $extend(com_mun_model_gates_GateAbstract.prototype,{
	algorithm: function(portArray) {
		var port;
		var value = com_mun_model_enumeration_ValueLogic.TRUE;
		var _g = 0;
		while(_g < portArray.length) {
			var port1 = portArray[_g];
			++_g;
			if(port1.get_portDescription() == com_mun_model_enumeration_IOTYPE.INPUT) {
				value = port1.get_value();
				break;
			}
		}
		var _g1 = 0;
		while(_g1 < portArray.length) {
			var port2 = portArray[_g1];
			++_g1;
			if(port2.get_portDescription() == com_mun_model_enumeration_IOTYPE.OUTPUT) {
				HxOverrides.remove(portArray,port2);
				if(value == com_mun_model_enumeration_ValueLogic.TRUE) {
					port2.set_value(com_mun_model_enumeration_ValueLogic.FALSE);
				} else if(value == com_mun_model_enumeration_ValueLogic.FALSE) {
					port2.set_value(com_mun_model_enumeration_ValueLogic.TRUE);
				}
				portArray.push(port2);
			}
		}
		return portArray;
	}
	,createPorts: function(xPosition,yPosition,height,width,orientation,inportNum) {
		var portArray = [];
		inportNum = 1;
		switch(orientation[1]) {
		case 0:
			var counter = 0;
			while(counter < inportNum) {
				var inport = new com_mun_model_component_Inport(xPosition - width / 2 + width / (inportNum + 1) * (counter + 1),yPosition + height / 2);
				inport.set_sequence(counter + 1);
				inport.set_portDescription(com_mun_model_enumeration_IOTYPE.INPUT);
				portArray.push(inport);
				++counter;
			}
			var outport_ = new com_mun_model_component_Outport(xPosition,yPosition - height / 2);
			outport_.set_portDescription(com_mun_model_enumeration_IOTYPE.OUTPUT);
			portArray.push(outport_);
			break;
		case 1:
			var counter1 = 0;
			while(counter1 < inportNum) {
				var inport1 = new com_mun_model_component_Inport(xPosition - width / 2 + width / (inportNum + 1) * (counter1 + 1),yPosition - height / 2);
				inport1.set_sequence(counter1 + 1);
				inport1.set_portDescription(com_mun_model_enumeration_IOTYPE.INPUT);
				portArray.push(inport1);
				++counter1;
			}
			var outport_1 = new com_mun_model_component_Outport(xPosition,yPosition + height / 2);
			outport_1.set_portDescription(com_mun_model_enumeration_IOTYPE.OUTPUT);
			portArray.push(outport_1);
			break;
		case 2:
			var counter2 = 0;
			while(counter2 < inportNum) {
				var inport2 = new com_mun_model_component_Inport(xPosition + width / 2,height / (inportNum + 1) * (counter2 + 1) + (yPosition - height / 2));
				inport2.set_sequence(counter2 + 1);
				inport2.set_portDescription(com_mun_model_enumeration_IOTYPE.INPUT);
				portArray.push(inport2);
				++counter2;
			}
			var outport_2 = new com_mun_model_component_Outport(xPosition - width / 2,yPosition);
			outport_2.set_portDescription(com_mun_model_enumeration_IOTYPE.OUTPUT);
			portArray.push(outport_2);
			break;
		case 3:
			var counter3 = 0;
			while(counter3 < inportNum) {
				var inport3 = new com_mun_model_component_Inport(xPosition - width / 2,height / (inportNum + 1) * (counter3 + 1) + (yPosition - height / 2));
				inport3.set_sequence(counter3 + 1);
				inport3.set_portDescription(com_mun_model_enumeration_IOTYPE.INPUT);
				portArray.push(inport3);
				++counter3;
			}
			var outport_3 = new com_mun_model_component_Outport(xPosition + width / 2,yPosition);
			outport_3.set_portDescription(com_mun_model_enumeration_IOTYPE.OUTPUT);
			portArray.push(outport_3);
			break;
		}
		return portArray;
	}
	,drawComponent: function(component,drawingAdapter,highLight) {
		var drawComponent = new com_mun_view_drawComponents_DrawNOT(component,drawingAdapter);
		if(highLight) {
			drawComponent.drawCorrespondingComponent("red");
		} else {
			drawComponent.drawCorrespondingComponent("black");
		}
	}
	,__class__: com_mun_model_gates_NOT
});
var com_mun_model_gates_OR = function() {
	com_mun_model_gates_GateAbstract.call(this,2);
};
$hxClasses["com.mun.model.gates.OR"] = com_mun_model_gates_OR;
com_mun_model_gates_OR.__name__ = ["com","mun","model","gates","OR"];
com_mun_model_gates_OR.__interfaces__ = [com_mun_model_gates_ComponentKind];
com_mun_model_gates_OR.__super__ = com_mun_model_gates_GateAbstract;
com_mun_model_gates_OR.prototype = $extend(com_mun_model_gates_GateAbstract.prototype,{
	algorithm: function(portArray) {
		var port;
		var value = com_mun_model_enumeration_ValueLogic.FALSE;
		var _g = 0;
		while(_g < portArray.length) {
			var port1 = portArray[_g];
			++_g;
			if(port1.get_portDescription() == com_mun_model_enumeration_IOTYPE.INPUT && port1.get_value() == com_mun_model_enumeration_ValueLogic.TRUE) {
				value = com_mun_model_enumeration_ValueLogic.TRUE;
				break;
			}
		}
		var _g1 = 0;
		while(_g1 < portArray.length) {
			var port2 = portArray[_g1];
			++_g1;
			if(port2.get_portDescription() == com_mun_model_enumeration_IOTYPE.OUTPUT) {
				HxOverrides.remove(portArray,port2);
				port2.set_value(value);
				portArray.push(port2);
			}
		}
		return portArray;
	}
	,createPorts: function(xPosition,yPosition,height,width,orientation,inportNum) {
		var portArray = [];
		if(inportNum == null || inportNum < 3) {
			inportNum = 2;
		}
		switch(orientation[1]) {
		case 0:
			var counter = 0;
			while(counter < inportNum) {
				var inport = new com_mun_model_component_Inport(xPosition - width / 2 + width / (inportNum + 1) * (counter + 1),yPosition + height / 2);
				inport.set_sequence(counter + 1);
				inport.set_portDescription(com_mun_model_enumeration_IOTYPE.INPUT);
				portArray.push(inport);
				++counter;
			}
			var outport_ = new com_mun_model_component_Outport(xPosition,yPosition - height / 2);
			outport_.set_portDescription(com_mun_model_enumeration_IOTYPE.OUTPUT);
			portArray.push(outport_);
			break;
		case 1:
			var counter1 = 0;
			while(counter1 < inportNum) {
				var inport1 = new com_mun_model_component_Inport(xPosition - width / 2 + width / (inportNum + 1) * (counter1 + 1),yPosition - height / 2);
				inport1.set_sequence(counter1 + 1);
				inport1.set_portDescription(com_mun_model_enumeration_IOTYPE.INPUT);
				portArray.push(inport1);
				++counter1;
			}
			var outport_1 = new com_mun_model_component_Outport(xPosition,yPosition + height / 2);
			outport_1.set_portDescription(com_mun_model_enumeration_IOTYPE.OUTPUT);
			portArray.push(outport_1);
			break;
		case 2:
			var counter2 = 0;
			while(counter2 < inportNum) {
				var inport2 = new com_mun_model_component_Inport(xPosition + width / 2,height / (inportNum + 1) * (counter2 + 1) + (yPosition - height / 2));
				inport2.set_sequence(counter2 + 1);
				inport2.set_portDescription(com_mun_model_enumeration_IOTYPE.INPUT);
				portArray.push(inport2);
				++counter2;
			}
			var outport_2 = new com_mun_model_component_Outport(xPosition - width / 2,yPosition);
			outport_2.set_portDescription(com_mun_model_enumeration_IOTYPE.OUTPUT);
			portArray.push(outport_2);
			break;
		case 3:
			var counter3 = 0;
			while(counter3 < inportNum) {
				var inport3 = new com_mun_model_component_Inport(xPosition - width / 2,height / (inportNum + 1) * (counter3 + 1) + (yPosition - height / 2));
				inport3.set_sequence(counter3 + 1);
				inport3.set_portDescription(com_mun_model_enumeration_IOTYPE.INPUT);
				portArray.push(inport3);
				++counter3;
			}
			var outport_3 = new com_mun_model_component_Outport(xPosition + width / 2,yPosition);
			outport_3.set_portDescription(com_mun_model_enumeration_IOTYPE.OUTPUT);
			portArray.push(outport_3);
			break;
		}
		return portArray;
	}
	,drawComponent: function(component,drawingAdapter,highLight) {
		var drawComponent = new com_mun_view_drawComponents_DrawOR(component,drawingAdapter);
		if(highLight) {
			drawComponent.drawCorrespondingComponent("red");
		} else {
			drawComponent.drawCorrespondingComponent("black");
		}
	}
	,__class__: com_mun_model_gates_OR
});
var com_mun_model_gates_Output = function() {
	com_mun_model_gates_GateAbstract.call(this,1);
};
$hxClasses["com.mun.model.gates.Output"] = com_mun_model_gates_Output;
com_mun_model_gates_Output.__name__ = ["com","mun","model","gates","Output"];
com_mun_model_gates_Output.__interfaces__ = [com_mun_model_gates_ComponentKind];
com_mun_model_gates_Output.__super__ = com_mun_model_gates_GateAbstract;
com_mun_model_gates_Output.prototype = $extend(com_mun_model_gates_GateAbstract.prototype,{
	algorithm: function(portArray) {
		var port;
		var value = com_mun_model_enumeration_ValueLogic.TRUE;
		var _g = 0;
		while(_g < portArray.length) {
			var port1 = portArray[_g];
			++_g;
			if(port1.get_portDescription() == com_mun_model_enumeration_IOTYPE.INPUT) {
				value = port1.get_value();
				break;
			}
		}
		var _g1 = 0;
		while(_g1 < portArray.length) {
			var port2 = portArray[_g1];
			++_g1;
			if(port2.get_portDescription() == com_mun_model_enumeration_IOTYPE.OUTPUT) {
				HxOverrides.remove(portArray,port2);
				port2.set_value(value);
				portArray.push(port2);
			}
		}
		return portArray;
	}
	,createPorts: function(xPosition,yPosition,height,width,orientation,inportNum) {
		var portArray = [];
		inportNum = 1;
		switch(orientation[1]) {
		case 0:
			var inport = new com_mun_model_component_Inport(xPosition,yPosition + height / 2);
			inport.set_sequence(1);
			inport.set_portDescription(com_mun_model_enumeration_IOTYPE.INPUT);
			portArray.push(inport);
			var outport_ = new com_mun_model_component_Outport(xPosition,yPosition - height / 2);
			outport_.set_portDescription(com_mun_model_enumeration_IOTYPE.OUTPUT);
			portArray.push(outport_);
			break;
		case 1:
			var inport1 = new com_mun_model_component_Inport(xPosition,yPosition - height / 2);
			inport1.set_sequence(1);
			inport1.set_portDescription(com_mun_model_enumeration_IOTYPE.INPUT);
			portArray.push(inport1);
			var outport_1 = new com_mun_model_component_Outport(xPosition,yPosition + height / 2);
			outport_1.set_portDescription(com_mun_model_enumeration_IOTYPE.OUTPUT);
			portArray.push(outport_1);
			break;
		case 2:
			var inport2 = new com_mun_model_component_Inport(xPosition + width / 2,yPosition);
			inport2.set_sequence(1);
			inport2.set_portDescription(com_mun_model_enumeration_IOTYPE.INPUT);
			portArray.push(inport2);
			var outport_2 = new com_mun_model_component_Outport(xPosition - width / 2,yPosition);
			outport_2.set_portDescription(com_mun_model_enumeration_IOTYPE.OUTPUT);
			portArray.push(outport_2);
			break;
		case 3:
			var inport3 = new com_mun_model_component_Inport(xPosition - width / 2,yPosition);
			inport3.set_sequence(1);
			inport3.set_portDescription(com_mun_model_enumeration_IOTYPE.INPUT);
			portArray.push(inport3);
			var outport_3 = new com_mun_model_component_Outport(xPosition + width / 2,yPosition);
			outport_3.set_portDescription(com_mun_model_enumeration_IOTYPE.OUTPUT);
			portArray.push(outport_3);
			break;
		}
		return portArray;
	}
	,updateInPortPosition: function(portArray,xPosition,yPosition,height,width,orientation) {
		switch(orientation[1]) {
		case 0:
			portArray[0].set_xPosition(xPosition);
			portArray[0].set_yPosition(yPosition + height / 2);
			break;
		case 1:
			portArray[0].set_xPosition(xPosition);
			portArray[0].set_yPosition(yPosition - height / 2);
			break;
		case 2:
			portArray[0].set_xPosition(xPosition + width / 2);
			portArray[0].set_yPosition(yPosition);
			break;
		case 3:
			portArray[0].set_xPosition(xPosition - width / 2);
			portArray[0].set_yPosition(yPosition);
			break;
		}
		return portArray;
	}
	,updateOutPortPosition: function(portArray,xPosition,yPosition,height,width,orientation) {
		switch(orientation[1]) {
		case 0:
			portArray[0].set_xPosition(xPosition);
			portArray[0].set_yPosition(yPosition - height / 2);
			break;
		case 1:
			portArray[0].set_xPosition(xPosition);
			portArray[0].set_yPosition(yPosition + height / 2);
			break;
		case 2:
			portArray[0].set_xPosition(xPosition - width / 2);
			portArray[0].set_yPosition(yPosition);
			break;
		case 3:
			portArray[0].set_xPosition(xPosition + width / 2);
			portArray[0].set_yPosition(yPosition);
			break;
		}
		return portArray;
	}
	,drawComponent: function(component,drawingAdapter,highLight) {
		var drawComponent = new com_mun_view_drawComponents_DrawOutput(component,drawingAdapter);
		if(highLight) {
			drawComponent.drawCorrespondingComponent("red");
		} else {
			drawComponent.drawCorrespondingComponent("black");
		}
	}
	,__class__: com_mun_model_gates_Output
});
var com_mun_model_gates_XOR = function() {
	com_mun_model_gates_GateAbstract.call(this,2);
};
$hxClasses["com.mun.model.gates.XOR"] = com_mun_model_gates_XOR;
com_mun_model_gates_XOR.__name__ = ["com","mun","model","gates","XOR"];
com_mun_model_gates_XOR.__interfaces__ = [com_mun_model_gates_ComponentKind];
com_mun_model_gates_XOR.__super__ = com_mun_model_gates_GateAbstract;
com_mun_model_gates_XOR.prototype = $extend(com_mun_model_gates_GateAbstract.prototype,{
	algorithm: function(portArray) {
		var port;
		var value;
		var counter = 0;
		var _g = 0;
		while(_g < portArray.length) {
			var port1 = portArray[_g];
			++_g;
			if(port1.get_portDescription() == com_mun_model_enumeration_IOTYPE.INPUT && port1.get_value() == com_mun_model_enumeration_ValueLogic.TRUE) {
				++counter;
			}
		}
		if(counter % 2 == 0) {
			value = com_mun_model_enumeration_ValueLogic.FALSE;
		} else {
			value = com_mun_model_enumeration_ValueLogic.TRUE;
		}
		var _g1 = 0;
		while(_g1 < portArray.length) {
			var port2 = portArray[_g1];
			++_g1;
			if(port2.get_portDescription() == com_mun_model_enumeration_IOTYPE.OUTPUT) {
				HxOverrides.remove(portArray,port2);
				port2.set_value(value);
				portArray.push(port2);
			}
		}
		return portArray;
	}
	,createPorts: function(xPosition,yPosition,height,width,orientation,inportNum) {
		var portArray = [];
		if(inportNum == null || inportNum < 2) {
			inportNum = 2;
		}
		switch(orientation[1]) {
		case 0:
			var counter = 0;
			while(counter < inportNum) {
				var inport = new com_mun_model_component_Inport(xPosition - width / 2 + width / (inportNum + 1) * (counter + 1),yPosition + height / 2);
				inport.set_sequence(counter + 1);
				inport.set_portDescription(com_mun_model_enumeration_IOTYPE.INPUT);
				portArray.push(inport);
				++counter;
			}
			var outport_ = new com_mun_model_component_Outport(xPosition,yPosition - height / 2);
			outport_.set_portDescription(com_mun_model_enumeration_IOTYPE.OUTPUT);
			portArray.push(outport_);
			break;
		case 1:
			var counter1 = 0;
			while(counter1 < inportNum) {
				var inport1 = new com_mun_model_component_Inport(xPosition - width / 2 + width / (inportNum + 1) * (counter1 + 1),yPosition - height / 2);
				inport1.set_sequence(counter1 + 1);
				inport1.set_portDescription(com_mun_model_enumeration_IOTYPE.INPUT);
				portArray.push(inport1);
				++counter1;
			}
			var outport_1 = new com_mun_model_component_Outport(xPosition,yPosition + height / 2);
			outport_1.set_portDescription(com_mun_model_enumeration_IOTYPE.OUTPUT);
			portArray.push(outport_1);
			break;
		case 2:
			var counter2 = 0;
			while(counter2 < inportNum) {
				var inport2 = new com_mun_model_component_Inport(xPosition + width / 2,height / (inportNum + 1) * (counter2 + 1) + (yPosition - height / 2));
				inport2.set_sequence(counter2 + 1);
				inport2.set_portDescription(com_mun_model_enumeration_IOTYPE.INPUT);
				portArray.push(inport2);
				++counter2;
			}
			var outport_2 = new com_mun_model_component_Outport(xPosition - width / 2,yPosition);
			outport_2.set_portDescription(com_mun_model_enumeration_IOTYPE.OUTPUT);
			portArray.push(outport_2);
			break;
		case 3:
			var counter3 = 0;
			while(counter3 < inportNum) {
				var inport3 = new com_mun_model_component_Inport(xPosition - width / 2,height / (inportNum + 1) * (counter3 + 1) + (yPosition - height / 2));
				inport3.set_sequence(counter3 + 1);
				inport3.set_portDescription(com_mun_model_enumeration_IOTYPE.INPUT);
				portArray.push(inport3);
				++counter3;
			}
			var outport_3 = new com_mun_model_component_Outport(xPosition + width / 2,yPosition);
			outport_3.set_portDescription(com_mun_model_enumeration_IOTYPE.OUTPUT);
			portArray.push(outport_3);
			break;
		}
		return portArray;
	}
	,drawComponent: function(component,drawingAdapter,highLight) {
		var drawComponent = new com_mun_view_drawComponents_DrawXOR(component,drawingAdapter);
		if(highLight) {
			drawComponent.drawCorrespondingComponent("red");
		} else {
			drawComponent.drawCorrespondingComponent("black");
		}
	}
	,__class__: com_mun_model_gates_XOR
});
var com_mun_view_drawComponents_Constant = function() {
	this.portRadius = 4;
};
$hxClasses["com.mun.view.drawComponents.Constant"] = com_mun_view_drawComponents_Constant;
com_mun_view_drawComponents_Constant.__name__ = ["com","mun","view","drawComponents","Constant"];
com_mun_view_drawComponents_Constant.prototype = {
	portRadius: null
	,get_portRadius: function() {
		return this.portRadius;
	}
	,set_portRadius: function(value) {
		return this.portRadius = value;
	}
	,__class__: com_mun_view_drawComponents_Constant
	,__properties__: {set_portRadius:"set_portRadius",get_portRadius:"get_portRadius"}
};
var com_mun_view_drawComponents_DrawComponent = function() { };
$hxClasses["com.mun.view.drawComponents.DrawComponent"] = com_mun_view_drawComponents_DrawComponent;
com_mun_view_drawComponents_DrawComponent.__name__ = ["com","mun","view","drawComponents","DrawComponent"];
com_mun_view_drawComponents_DrawComponent.prototype = {
	drawCorrespondingComponent: null
	,__class__: com_mun_view_drawComponents_DrawComponent
};
var com_mun_view_drawComponents_DrawAND = function(component,drawingAdapter) {
	com_mun_view_drawComponents_Constant.call(this);
	this.component = component;
	this.drawingAdapter = drawingAdapter;
};
$hxClasses["com.mun.view.drawComponents.DrawAND"] = com_mun_view_drawComponents_DrawAND;
com_mun_view_drawComponents_DrawAND.__name__ = ["com","mun","view","drawComponents","DrawAND"];
com_mun_view_drawComponents_DrawAND.__interfaces__ = [com_mun_view_drawComponents_DrawComponent];
com_mun_view_drawComponents_DrawAND.__super__ = com_mun_view_drawComponents_Constant;
com_mun_view_drawComponents_DrawAND.prototype = $extend(com_mun_view_drawComponents_Constant.prototype,{
	drawingAdapter: null
	,component: null
	,drawCorrespondingComponent: function(strokeColor) {
		if(strokeColor == null || strokeColor == "") {
			strokeColor = "black";
		}
		this.drawingAdapter.setStrokeColor(strokeColor);
		this.drawingAdapter.drawAndShape(this.component.get_xPosition(),this.component.get_yPosition(),this.component.get_width(),this.component.get_height(),this.component.get_orientation());
		var i = this.component.get_inportIterator();
		while(i.hasNext()) {
			var i1 = i.next();
			var port = i1;
			this.drawingAdapter.setFillColor("black");
			this.drawingAdapter.drawCricle(port.get_xPosition(),port.get_yPosition(),this.get_portRadius());
		}
		var i2 = this.component.get_outportIterator();
		while(i2.hasNext()) {
			var i3 = i2.next();
			var port1 = i3;
			this.drawingAdapter.setFillColor("black");
			this.drawingAdapter.drawCricle(port1.get_xPosition(),port1.get_yPosition(),this.get_portRadius());
		}
		this.drawingAdapter.resetDrawingParam();
	}
	,__class__: com_mun_view_drawComponents_DrawAND
});
var com_mun_view_drawComponents_DrawFlipFlop = function(component,drawingAdapter) {
	com_mun_view_drawComponents_Constant.call(this);
	this.component = component;
	this.drawingAdapter = drawingAdapter;
};
$hxClasses["com.mun.view.drawComponents.DrawFlipFlop"] = com_mun_view_drawComponents_DrawFlipFlop;
com_mun_view_drawComponents_DrawFlipFlop.__name__ = ["com","mun","view","drawComponents","DrawFlipFlop"];
com_mun_view_drawComponents_DrawFlipFlop.__interfaces__ = [com_mun_view_drawComponents_DrawComponent];
com_mun_view_drawComponents_DrawFlipFlop.__super__ = com_mun_view_drawComponents_Constant;
com_mun_view_drawComponents_DrawFlipFlop.prototype = $extend(com_mun_view_drawComponents_Constant.prototype,{
	drawingAdapter: null
	,component: null
	,drawCorrespondingComponent: function(strokeColor) {
		if(strokeColor == null || strokeColor == "") {
			strokeColor = "black";
		}
		this.drawingAdapter.setStrokeColor(strokeColor);
		this.drawingAdapter.drawRect(this.component.get_xPosition(),this.component.get_yPosition(),this.component.get_width(),this.component.get_height());
		this.drawingAdapter.drawText("FF",this.component.get_xPosition() - 4,this.component.get_yPosition(),this.component.get_width());
		var i = this.component.get_inportIterator();
		while(i.hasNext()) {
			var i1 = i.next();
			var port = i1;
			this.drawingAdapter.setFillColor("black");
			this.drawingAdapter.drawCricle(port.get_xPosition(),port.get_yPosition(),this.get_portRadius());
			var _g = this.component.get_orientation();
			switch(_g[1]) {
			case 0:
				if(port.get_portDescription() == com_mun_model_enumeration_IOTYPE.D) {
					this.drawingAdapter.drawText("D",port.get_xPosition() - 2,port.get_yPosition() - 5,this.component.get_width() - 2);
				} else if(port.get_portDescription() == com_mun_model_enumeration_IOTYPE.CLK) {
					this.drawingAdapter.drawText("CLK",port.get_xPosition() - 6,port.get_yPosition() - 5,this.component.get_width() - 2);
				}
				break;
			case 1:
				if(port.get_portDescription() == com_mun_model_enumeration_IOTYPE.D) {
					this.drawingAdapter.drawText("D",port.get_xPosition() - 3,port.get_yPosition() + 10,this.component.get_width() - 2);
				} else if(port.get_portDescription() == com_mun_model_enumeration_IOTYPE.CLK) {
					this.drawingAdapter.drawText("CLK",port.get_xPosition() - 3,port.get_yPosition() + 10,this.component.get_width() - 2);
				}
				break;
			case 2:
				if(port.get_portDescription() == com_mun_model_enumeration_IOTYPE.D) {
					this.drawingAdapter.drawText("D",port.get_xPosition() - 10,port.get_yPosition() + 2,this.component.get_width() - 2);
				} else if(port.get_portDescription() == com_mun_model_enumeration_IOTYPE.CLK) {
					this.drawingAdapter.drawText("CLK",port.get_xPosition() - 20,port.get_yPosition() + 2,this.component.get_width() - 2);
				}
				break;
			case 3:
				if(port.get_portDescription() == com_mun_model_enumeration_IOTYPE.D) {
					this.drawingAdapter.drawText("D",port.get_xPosition() + 3,port.get_yPosition() + 3,this.component.get_width() - 2);
				} else if(port.get_portDescription() == com_mun_model_enumeration_IOTYPE.CLK) {
					this.drawingAdapter.drawText("CLK",port.get_xPosition() + 3,port.get_yPosition() + 3,this.component.get_width() - 2);
				}
				break;
			}
		}
		var i2 = this.component.get_outportIterator();
		while(i2.hasNext()) {
			var i3 = i2.next();
			var port1 = i3;
			this.drawingAdapter.setFillColor("black");
			this.drawingAdapter.drawCricle(port1.get_xPosition(),port1.get_yPosition(),this.get_portRadius());
			var _g1 = this.component.get_orientation();
			switch(_g1[1]) {
			case 0:
				if(port1.get_portDescription() == com_mun_model_enumeration_IOTYPE.Q) {
					this.drawingAdapter.drawText("Q",port1.get_xPosition() - 2,port1.get_yPosition() + 10,this.component.get_width() - 2);
				} else if(port1.get_portDescription() == com_mun_model_enumeration_IOTYPE.QN) {
					this.drawingAdapter.drawText("QN",port1.get_xPosition() - 6,port1.get_yPosition() + 10,this.component.get_width() - 2);
				}
				break;
			case 1:
				if(port1.get_portDescription() == com_mun_model_enumeration_IOTYPE.Q) {
					this.drawingAdapter.drawText("Q",port1.get_xPosition() - 3,port1.get_yPosition() - 7,this.component.get_width() - 2);
				} else if(port1.get_portDescription() == com_mun_model_enumeration_IOTYPE.QN) {
					this.drawingAdapter.drawText("QN",port1.get_xPosition() - 3,port1.get_yPosition() - 7,this.component.get_width() - 2);
				}
				break;
			case 2:
				if(port1.get_portDescription() == com_mun_model_enumeration_IOTYPE.Q) {
					this.drawingAdapter.drawText("Q",port1.get_xPosition() + 3,port1.get_yPosition() + 2,this.component.get_width() - 2);
				} else if(port1.get_portDescription() == com_mun_model_enumeration_IOTYPE.QN) {
					this.drawingAdapter.drawText("QN",port1.get_xPosition() + 3,port1.get_yPosition() + 2,this.component.get_width() - 2);
				}
				break;
			case 3:
				if(port1.get_portDescription() == com_mun_model_enumeration_IOTYPE.Q) {
					this.drawingAdapter.drawText("Q",port1.get_xPosition() - 10,port1.get_yPosition() + 3,this.component.get_width() - 2);
				} else if(port1.get_portDescription() == com_mun_model_enumeration_IOTYPE.QN) {
					this.drawingAdapter.drawText("QN",port1.get_xPosition() - 14,port1.get_yPosition() + 3,this.component.get_width() - 2);
				}
				break;
			}
		}
		this.drawingAdapter.resetDrawingParam();
	}
	,__class__: com_mun_view_drawComponents_DrawFlipFlop
});
var com_mun_view_drawComponents_DrawInput = function(component,drawingAdapter) {
	com_mun_view_drawComponents_Constant.call(this);
	this.component = component;
	this.drawingAdapter = drawingAdapter;
};
$hxClasses["com.mun.view.drawComponents.DrawInput"] = com_mun_view_drawComponents_DrawInput;
com_mun_view_drawComponents_DrawInput.__name__ = ["com","mun","view","drawComponents","DrawInput"];
com_mun_view_drawComponents_DrawInput.__interfaces__ = [com_mun_view_drawComponents_DrawComponent];
com_mun_view_drawComponents_DrawInput.__super__ = com_mun_view_drawComponents_Constant;
com_mun_view_drawComponents_DrawInput.prototype = $extend(com_mun_view_drawComponents_Constant.prototype,{
	drawingAdapter: null
	,component: null
	,drawCorrespondingComponent: function(strokeColor) {
		if(strokeColor == null || strokeColor == "") {
			strokeColor = "black";
		}
		this.drawingAdapter.setStrokeColor(strokeColor);
		this.drawingAdapter.setFillColor("red");
		this.drawingAdapter.drawCricle(this.component.get_xPosition(),this.component.get_yPosition(),7);
		this.drawingAdapter.setTextColor("black");
		var i = this.component.get_outportIterator();
		while(i.hasNext()) {
			var i1 = i.next();
			var port = i1;
			this.drawingAdapter.setFillColor("black");
			this.drawingAdapter.drawCricle(port.get_xPosition(),port.get_yPosition(),this.get_portRadius());
		}
		this.drawingAdapter.resetDrawingParam();
	}
	,__class__: com_mun_view_drawComponents_DrawInput
});
var com_mun_view_drawComponents_DrawLink = function(link,drawingAdapter) {
	com_mun_view_drawComponents_Constant.call(this);
	this.link = link;
	this.drawingAdapter = drawingAdapter;
};
$hxClasses["com.mun.view.drawComponents.DrawLink"] = com_mun_view_drawComponents_DrawLink;
com_mun_view_drawComponents_DrawLink.__name__ = ["com","mun","view","drawComponents","DrawLink"];
com_mun_view_drawComponents_DrawLink.__interfaces__ = [com_mun_view_drawComponents_DrawComponent];
com_mun_view_drawComponents_DrawLink.__super__ = com_mun_view_drawComponents_Constant;
com_mun_view_drawComponents_DrawLink.prototype = $extend(com_mun_view_drawComponents_Constant.prototype,{
	drawingAdapter: null
	,link: null
	,drawCorrespondingComponent: function(strokeColor) {
		if(strokeColor == null || strokeColor == "") {
			strokeColor = "black";
		}
		this.drawingAdapter.setStrokeColor(strokeColor);
		this.drawingAdapter.drawLine(this.link.get_leftEndpoint().get_xPosition(),this.link.get_leftEndpoint().get_yPosition(),this.link.get_rightEndpoint().get_xPosition(),this.link.get_rightEndpoint().get_yPosition());
	}
	,__class__: com_mun_view_drawComponents_DrawLink
});
var com_mun_view_drawComponents_DrawMUX = function(component,drawingAdapter) {
	com_mun_view_drawComponents_Constant.call(this);
	this.component = component;
	this.drawingAdapter = drawingAdapter;
};
$hxClasses["com.mun.view.drawComponents.DrawMUX"] = com_mun_view_drawComponents_DrawMUX;
com_mun_view_drawComponents_DrawMUX.__name__ = ["com","mun","view","drawComponents","DrawMUX"];
com_mun_view_drawComponents_DrawMUX.__interfaces__ = [com_mun_view_drawComponents_DrawComponent];
com_mun_view_drawComponents_DrawMUX.__super__ = com_mun_view_drawComponents_Constant;
com_mun_view_drawComponents_DrawMUX.prototype = $extend(com_mun_view_drawComponents_Constant.prototype,{
	drawingAdapter: null
	,component: null
	,drawCorrespondingComponent: function(strokeColor) {
		if(strokeColor == null || strokeColor == "") {
			strokeColor = "black";
		}
		this.drawingAdapter.setStrokeColor(strokeColor);
		this.drawingAdapter.drawRect(this.component.get_xPosition(),this.component.get_yPosition(),this.component.get_width(),this.component.get_height());
		this.drawingAdapter.setTextColor("black");
		this.drawingAdapter.drawText("MUX",this.component.get_xPosition() - 8,this.component.get_yPosition(),this.component.get_width() - 2);
		var i = this.component.get_inportIterator();
		while(i.hasNext()) {
			var i1 = i.next();
			var port = i1;
			this.drawingAdapter.setFillColor("black");
			this.drawingAdapter.drawCricle(port.get_xPosition(),port.get_yPosition(),this.get_portRadius());
			this.drawingAdapter.setTextColor("black");
			var _g = this.component.get_orientation();
			switch(_g[1]) {
			case 0:
				if(port.get_portDescription() == com_mun_model_enumeration_IOTYPE.S) {
					this.drawingAdapter.drawText("S",port.get_xPosition() - 7,port.get_yPosition() + 2,this.component.get_width() - 4);
				} else {
					this.drawingAdapter.drawText(port.get_sequence() + "",port.get_xPosition() - 2,port.get_yPosition() - 5,this.component.get_width() - 4);
				}
				break;
			case 1:
				if(port.get_portDescription() == com_mun_model_enumeration_IOTYPE.S) {
					this.drawingAdapter.drawText("S",port.get_xPosition() + 3,port.get_yPosition(),this.component.get_width() - 4);
				} else {
					this.drawingAdapter.drawText(port.get_sequence() + "",port.get_xPosition(),port.get_yPosition() + 10,this.component.get_width() - 4);
				}
				break;
			case 2:
				if(port.get_portDescription() == com_mun_model_enumeration_IOTYPE.S) {
					this.drawingAdapter.drawText("S",port.get_xPosition() - 2,port.get_yPosition() + 10,this.component.get_width() - 4);
				} else {
					this.drawingAdapter.drawText(port.get_sequence() + "",port.get_xPosition() - 8,port.get_yPosition(),this.component.get_width() - 4);
				}
				break;
			case 3:
				if(port.get_portDescription() == com_mun_model_enumeration_IOTYPE.S) {
					this.drawingAdapter.drawText("S",port.get_xPosition() - 2,port.get_yPosition() + 10,this.component.get_width() - 4);
				} else {
					this.drawingAdapter.drawText(port.get_sequence() + "",port.get_xPosition() + 3,port.get_yPosition() + 2,this.component.get_width() - 4);
				}
				break;
			}
		}
		var i2 = this.component.get_outportIterator();
		while(i2.hasNext()) {
			var i3 = i2.next();
			var port1 = i3;
			this.drawingAdapter.setFillColor("black");
			this.drawingAdapter.drawCricle(port1.get_xPosition(),port1.get_yPosition(),this.get_portRadius());
		}
		this.drawingAdapter.resetDrawingParam();
	}
	,__class__: com_mun_view_drawComponents_DrawMUX
});
var com_mun_view_drawComponents_DrawNAND = function(component,drawingAdapter) {
	com_mun_view_drawComponents_Constant.call(this);
	this.component = component;
	this.drawingAdapter = drawingAdapter;
};
$hxClasses["com.mun.view.drawComponents.DrawNAND"] = com_mun_view_drawComponents_DrawNAND;
com_mun_view_drawComponents_DrawNAND.__name__ = ["com","mun","view","drawComponents","DrawNAND"];
com_mun_view_drawComponents_DrawNAND.__interfaces__ = [com_mun_view_drawComponents_DrawComponent];
com_mun_view_drawComponents_DrawNAND.__super__ = com_mun_view_drawComponents_Constant;
com_mun_view_drawComponents_DrawNAND.prototype = $extend(com_mun_view_drawComponents_Constant.prototype,{
	drawingAdapter: null
	,component: null
	,drawCorrespondingComponent: function(strokeColor) {
		if(strokeColor == null || strokeColor == "") {
			strokeColor = "black";
		}
		this.drawingAdapter.setStrokeColor(strokeColor);
		this.drawingAdapter.drawNAndShape(this.component.get_xPosition(),this.component.get_yPosition(),this.component.get_width(),this.component.get_height(),this.component.get_orientation());
		var i = this.component.get_inportIterator();
		while(i.hasNext()) {
			var i1 = i.next();
			var port = i1;
			this.drawingAdapter.setFillColor("black");
			this.drawingAdapter.drawCricle(port.get_xPosition(),port.get_yPosition(),this.get_portRadius());
		}
		var i2 = this.component.get_outportIterator();
		while(i2.hasNext()) {
			var i3 = i2.next();
			var port1 = i3;
			this.drawingAdapter.setFillColor("black");
			this.drawingAdapter.drawCricle(port1.get_xPosition(),port1.get_yPosition(),this.get_portRadius());
		}
		this.drawingAdapter.resetDrawingParam();
	}
	,__class__: com_mun_view_drawComponents_DrawNAND
});
var com_mun_view_drawComponents_DrawNOR = function(component,drawingAdapter) {
	com_mun_view_drawComponents_Constant.call(this);
	this.component = component;
	this.drawingAdapter = drawingAdapter;
};
$hxClasses["com.mun.view.drawComponents.DrawNOR"] = com_mun_view_drawComponents_DrawNOR;
com_mun_view_drawComponents_DrawNOR.__name__ = ["com","mun","view","drawComponents","DrawNOR"];
com_mun_view_drawComponents_DrawNOR.__interfaces__ = [com_mun_view_drawComponents_DrawComponent];
com_mun_view_drawComponents_DrawNOR.__super__ = com_mun_view_drawComponents_Constant;
com_mun_view_drawComponents_DrawNOR.prototype = $extend(com_mun_view_drawComponents_Constant.prototype,{
	drawingAdapter: null
	,component: null
	,drawCorrespondingComponent: function(strokeColor) {
		if(strokeColor == null || strokeColor == "") {
			strokeColor = "black";
		}
		this.drawingAdapter.setStrokeColor(strokeColor);
		this.drawingAdapter.drawNOrShape(this.component.get_xPosition(),this.component.get_yPosition(),this.component.get_width(),this.component.get_height(),this.component.get_orientation());
		var i = this.component.get_inportIterator();
		while(i.hasNext()) {
			var i1 = i.next();
			var port = i1;
			this.drawingAdapter.setFillColor("black");
			this.drawingAdapter.drawCricle(port.get_xPosition(),port.get_yPosition(),this.get_portRadius());
		}
		var i2 = this.component.get_outportIterator();
		while(i2.hasNext()) {
			var i3 = i2.next();
			var port1 = i3;
			this.drawingAdapter.setFillColor("black");
			this.drawingAdapter.drawCricle(port1.get_xPosition(),port1.get_yPosition(),this.get_portRadius());
		}
		this.drawingAdapter.resetDrawingParam();
	}
	,__class__: com_mun_view_drawComponents_DrawNOR
});
var com_mun_view_drawComponents_DrawNOT = function(component,drawingAdapter) {
	com_mun_view_drawComponents_Constant.call(this);
	this.component = component;
	this.drawingAdapter = drawingAdapter;
};
$hxClasses["com.mun.view.drawComponents.DrawNOT"] = com_mun_view_drawComponents_DrawNOT;
com_mun_view_drawComponents_DrawNOT.__name__ = ["com","mun","view","drawComponents","DrawNOT"];
com_mun_view_drawComponents_DrawNOT.__interfaces__ = [com_mun_view_drawComponents_DrawComponent];
com_mun_view_drawComponents_DrawNOT.__super__ = com_mun_view_drawComponents_Constant;
com_mun_view_drawComponents_DrawNOT.prototype = $extend(com_mun_view_drawComponents_Constant.prototype,{
	drawingAdapter: null
	,component: null
	,drawCorrespondingComponent: function(strokeColor) {
		if(strokeColor == null || strokeColor == "") {
			strokeColor = "black";
		}
		this.drawingAdapter.setStrokeColor(strokeColor);
		this.drawingAdapter.drawNotShape(this.component.get_xPosition(),this.component.get_yPosition(),this.component.get_width(),this.component.get_height(),this.component.get_orientation());
		var i = this.component.get_inportIterator();
		while(i.hasNext()) {
			var i1 = i.next();
			var port = i1;
			this.drawingAdapter.setFillColor("black");
			this.drawingAdapter.drawCricle(port.get_xPosition(),port.get_yPosition(),this.get_portRadius());
		}
		var i2 = this.component.get_outportIterator();
		while(i2.hasNext()) {
			var i3 = i2.next();
			var port1 = i3;
			this.drawingAdapter.setFillColor("black");
			this.drawingAdapter.drawCricle(port1.get_xPosition(),port1.get_yPosition(),this.get_portRadius());
		}
		this.drawingAdapter.resetDrawingParam();
	}
	,__class__: com_mun_view_drawComponents_DrawNOT
});
var com_mun_view_drawComponents_DrawOR = function(component,drawingAdapter) {
	com_mun_view_drawComponents_Constant.call(this);
	this.component = component;
	this.drawingAdapter = drawingAdapter;
};
$hxClasses["com.mun.view.drawComponents.DrawOR"] = com_mun_view_drawComponents_DrawOR;
com_mun_view_drawComponents_DrawOR.__name__ = ["com","mun","view","drawComponents","DrawOR"];
com_mun_view_drawComponents_DrawOR.__interfaces__ = [com_mun_view_drawComponents_DrawComponent];
com_mun_view_drawComponents_DrawOR.__super__ = com_mun_view_drawComponents_Constant;
com_mun_view_drawComponents_DrawOR.prototype = $extend(com_mun_view_drawComponents_Constant.prototype,{
	drawingAdapter: null
	,component: null
	,drawCorrespondingComponent: function(strokeColor) {
		if(strokeColor == null || strokeColor == "") {
			strokeColor = "black";
		}
		this.drawingAdapter.setStrokeColor(strokeColor);
		this.drawingAdapter.drawOrShape(this.component.get_xPosition(),this.component.get_yPosition(),this.component.get_width(),this.component.get_height(),this.component.get_orientation());
		var i = this.component.get_inportIterator();
		while(i.hasNext()) {
			var i1 = i.next();
			var port = i1;
			this.drawingAdapter.setFillColor("black");
			this.drawingAdapter.drawCricle(port.get_xPosition(),port.get_yPosition(),this.get_portRadius());
		}
		var i2 = this.component.get_outportIterator();
		while(i2.hasNext()) {
			var i3 = i2.next();
			var port1 = i3;
			this.drawingAdapter.setFillColor("black");
			this.drawingAdapter.drawCricle(port1.get_xPosition(),port1.get_yPosition(),this.get_portRadius());
		}
		this.drawingAdapter.resetDrawingParam();
	}
	,__class__: com_mun_view_drawComponents_DrawOR
});
var com_mun_view_drawComponents_DrawOutput = function(component,drawingAdapter) {
	com_mun_view_drawComponents_Constant.call(this);
	this.component = component;
	this.drawingAdapter = drawingAdapter;
};
$hxClasses["com.mun.view.drawComponents.DrawOutput"] = com_mun_view_drawComponents_DrawOutput;
com_mun_view_drawComponents_DrawOutput.__name__ = ["com","mun","view","drawComponents","DrawOutput"];
com_mun_view_drawComponents_DrawOutput.__interfaces__ = [com_mun_view_drawComponents_DrawComponent];
com_mun_view_drawComponents_DrawOutput.__super__ = com_mun_view_drawComponents_Constant;
com_mun_view_drawComponents_DrawOutput.prototype = $extend(com_mun_view_drawComponents_Constant.prototype,{
	drawingAdapter: null
	,component: null
	,drawCorrespondingComponent: function(strokeColor) {
		if(strokeColor == null || strokeColor == "") {
			strokeColor = "black";
		}
		this.drawingAdapter.setStrokeColor(strokeColor);
		this.drawingAdapter.setFillColor("black");
		this.drawingAdapter.drawCricle(this.component.get_xPosition(),this.component.get_yPosition(),7);
		this.drawingAdapter.setTextColor("white");
		var i = this.component.get_inportIterator();
		while(i.hasNext()) {
			var i1 = i.next();
			var port = i1;
			this.drawingAdapter.setFillColor("black");
			this.drawingAdapter.drawCricle(port.get_xPosition(),port.get_yPosition(),this.get_portRadius());
		}
		this.drawingAdapter.resetDrawingParam();
	}
	,__class__: com_mun_view_drawComponents_DrawOutput
});
var com_mun_view_drawComponents_DrawXOR = function(component,drawingAdapter) {
	com_mun_view_drawComponents_Constant.call(this);
	this.component = component;
	this.drawingAdapter = drawingAdapter;
};
$hxClasses["com.mun.view.drawComponents.DrawXOR"] = com_mun_view_drawComponents_DrawXOR;
com_mun_view_drawComponents_DrawXOR.__name__ = ["com","mun","view","drawComponents","DrawXOR"];
com_mun_view_drawComponents_DrawXOR.__interfaces__ = [com_mun_view_drawComponents_DrawComponent];
com_mun_view_drawComponents_DrawXOR.__super__ = com_mun_view_drawComponents_Constant;
com_mun_view_drawComponents_DrawXOR.prototype = $extend(com_mun_view_drawComponents_Constant.prototype,{
	drawingAdapter: null
	,component: null
	,drawCorrespondingComponent: function(strokeColor) {
		if(strokeColor == null || strokeColor == "") {
			strokeColor = "black";
		}
		this.drawingAdapter.setStrokeColor(strokeColor);
		this.drawingAdapter.drawXorShape(this.component.get_xPosition(),this.component.get_yPosition(),this.component.get_width(),this.component.get_height(),this.component.get_orientation());
		var i = this.component.get_inportIterator();
		while(i.hasNext()) {
			var i1 = i.next();
			var port = i1;
			this.drawingAdapter.setFillColor("black");
			this.drawingAdapter.drawCricle(port.get_xPosition(),port.get_yPosition(),this.get_portRadius());
		}
		var i2 = this.component.get_outportIterator();
		while(i2.hasNext()) {
			var i3 = i2.next();
			var port1 = i3;
			this.drawingAdapter.setFillColor("black");
			this.drawingAdapter.drawCricle(port1.get_xPosition(),port1.get_yPosition(),this.get_portRadius());
		}
		this.drawingAdapter.resetDrawingParam();
	}
	,__class__: com_mun_view_drawComponents_DrawXOR
});
var com_mun_view_drawingImpl_Box = function(x_position,y_position,width,height,orientation,worldToView) {
	var x0 = worldToView.convertX(x_position - width / 2);
	var y0 = worldToView.convertY(y_position - height / 2);
	var x1 = worldToView.invertX(x_position + width / 2);
	var y1 = worldToView.invertY(y_position + height / 2);
	switch(orientation[1]) {
	case 0:
		this.xb = x0;
		this.yb = y0;
		this.xc = x1;
		this.yc = y0;
		this.xd = x1;
		this.yd = y1;
		this.xa = x0;
		this.ya = y1;
		break;
	case 1:
		this.xd = x0;
		this.yd = y0;
		this.xa = x1;
		this.ya = y0;
		this.xb = x1;
		this.yb = y1;
		this.xc = x0;
		this.yc = y1;
		break;
	case 2:
		this.xc = x0;
		this.yc = y0;
		this.xd = x1;
		this.yd = y0;
		this.xa = x1;
		this.ya = y1;
		this.xb = x0;
		this.yb = y1;
		break;
	case 3:
		this.xa = x0;
		this.ya = y0;
		this.xb = x1;
		this.yb = y0;
		this.xc = x1;
		this.yc = y1;
		this.xd = x0;
		this.yd = y1;
		break;
	}
};
$hxClasses["com.mun.view.drawingImpl.Box"] = com_mun_view_drawingImpl_Box;
com_mun_view_drawingImpl_Box.__name__ = ["com","mun","view","drawingImpl","Box"];
com_mun_view_drawingImpl_Box.prototype = {
	xa: null
	,ya: null
	,xb: null
	,yb: null
	,xc: null
	,yc: null
	,xd: null
	,yd: null
	,get_xa: function() {
		return this.xa;
	}
	,get_ya: function() {
		return this.ya;
	}
	,get_xb: function() {
		return this.xb;
	}
	,get_yb: function() {
		return this.yb;
	}
	,get_xc: function() {
		return this.xc;
	}
	,get_yc: function() {
		return this.yc;
	}
	,get_xd: function() {
		return this.xd;
	}
	,get_yd: function() {
		return this.yd;
	}
	,__class__: com_mun_view_drawingImpl_Box
};
var com_mun_view_drawingImpl_DrawingAdapter = function(cxt) {
	this.font = "8px serif";
	this.lineWidth = 1.0;
	this.textColor = "black";
	this.fillColor = "gray";
	this.strokeColor = "black";
	this.cxt = cxt;
	this.worldToView = new com_mun_view_drawingImpl_WorldToView(1);
};
$hxClasses["com.mun.view.drawingImpl.DrawingAdapter"] = com_mun_view_drawingImpl_DrawingAdapter;
com_mun_view_drawingImpl_DrawingAdapter.__name__ = ["com","mun","view","drawingImpl","DrawingAdapter"];
com_mun_view_drawingImpl_DrawingAdapter.__interfaces__ = [com_mun_model_drawingInterface_DrawingAdapterI];
com_mun_view_drawingImpl_DrawingAdapter.prototype = {
	cxt: null
	,worldToView: null
	,strokeColor: null
	,fillColor: null
	,textColor: null
	,lineWidth: null
	,font: null
	,resetDrawingParam: function() {
		this.strokeColor = "black";
		this.fillColor = "gray";
		this.textColor = "black";
		this.lineWidth = 1.0;
		this.font = "8px serif";
	}
	,setStrokeColor: function(color) {
		this.strokeColor = color;
	}
	,setFillColor: function(color) {
		this.fillColor = color;
	}
	,setTextColor: function(color) {
		this.textColor = color;
	}
	,setTextFont: function(font) {
		this.font = font;
	}
	,setLineWidth: function(width) {
		this.cxt.lineWidth = width;
	}
	,drawAndShape: function(x,y,width,height,orientation) {
		var r = new com_mun_view_drawingImpl_Box(x,y,width,height,orientation,this.worldToView);
		this.cxt.beginPath();
		this.cxt.moveTo(r.get_xa(),r.get_ya());
		this.cxt.lineTo((r.get_xa() + r.get_xb()) / 2,(r.get_ya() + r.get_yb()) / 2);
		var cxmin = Math.min(Math.min(r.get_xa(),r.get_xb()),Math.min(r.get_xc(),r.get_xd()));
		var cymin = Math.min(Math.min(r.get_ya(),r.get_yb()),Math.min(r.get_yc(),r.get_yd()));
		var cxmax = Math.max(Math.max(r.get_xa(),r.get_xb()),Math.max(r.get_xc(),r.get_xd()));
		var cymax = Math.max(Math.max(r.get_ya(),r.get_yb()),Math.max(r.get_yc(),r.get_yd()));
		switch(orientation[1]) {
		case 0:
			this.cxt.ellipse(x,y,(cxmax - cxmin) / 2,(cymax - cymin) / 2,180 * Math.PI / 180,0,Math.PI);
			break;
		case 1:
			this.cxt.ellipse(x,y,(cxmax - cxmin) / 2,(cymax - cymin) / 2,0 * Math.PI / 180,0,Math.PI);
			break;
		case 2:
			this.cxt.ellipse(x,y,(cxmax - cxmin) / 2,(cymax - cymin) / 2,90 * Math.PI / 180,0,Math.PI);
			break;
		case 3:
			this.cxt.ellipse(x,y,(cxmax - cxmin) / 2,(cymax - cymin) / 2,270 * Math.PI / 180,0,Math.PI);
			break;
		}
		this.cxt.lineTo(r.get_xd(),r.get_yd());
		this.cxt.closePath();
		this.cxt.fillStyle = this.fillColor;
		this.cxt.strokeStyle = this.strokeColor;
		this.cxt.fill();
		this.cxt.stroke();
	}
	,drawNAndShape: function(x,y,width,height,orientation) {
		var r = new com_mun_view_drawingImpl_Box(x,y,width,height,orientation,this.worldToView);
		this.cxt.beginPath();
		this.cxt.moveTo(r.get_xa(),r.get_ya());
		this.cxt.lineTo((r.get_xa() + r.get_xb()) / 2,(r.get_ya() + r.get_yb()) / 2);
		this.cxt.lineTo((r.get_xc() + r.get_xd()) / 2,(r.get_yc() + r.get_yd()) / 2);
		this.cxt.lineTo(r.get_xd(),r.get_yd());
		this.cxt.closePath();
		var cxmin = Math.min(Math.min(r.get_xa(),r.get_xb()),Math.min(r.get_xc(),r.get_xd()));
		var cymin = Math.min(Math.min(r.get_ya(),r.get_yb()),Math.min(r.get_yc(),r.get_yd()));
		var cxmax = Math.max(Math.max(r.get_xa(),r.get_xb()),Math.max(r.get_xc(),r.get_xd()));
		var cymax = Math.max(Math.max(r.get_ya(),r.get_yb()),Math.max(r.get_yc(),r.get_yd()));
		var circleCentreX = (r.get_xb() + r.get_xc()) / 2;
		var circleCentreY = (r.get_yb() + r.get_yc()) / 2;
		var radius = Math.sqrt((r.get_xb() - r.get_xc()) * (r.get_xb() - r.get_xc()) + (r.get_yb() - r.get_yc()) * (r.get_yb() - r.get_yc())) / 10;
		switch(orientation[1]) {
		case 0:
			this.cxt.ellipse(x,y,(cxmax - cxmin) / 2,(cymax - cymin) / 2 - 2 * radius,180 * Math.PI / 180,0,Math.PI);
			break;
		case 1:
			this.cxt.ellipse(x,y,(cxmax - cxmin) / 2,(cymax - cymin) / 2 - 2 * radius,0 * Math.PI / 180,0,Math.PI);
			break;
		case 2:
			this.cxt.ellipse(x,y,(cxmax - cxmin) / 2,(cymax - cymin) / 2 - 2 * radius,90 * Math.PI / 180,0,Math.PI);
			break;
		case 3:
			this.cxt.ellipse(x,y,(cxmax - cxmin) / 2,(cymax - cymin) / 2 - 2 * radius,270 * Math.PI / 180,0,Math.PI);
			this.cxt.closePath();
			break;
		}
		this.cxt.closePath();
		this.cxt.arc((r.get_xb() + r.get_xc()) / 2,(r.get_yb() + r.get_yc()) / 2,radius,0,2 * Math.PI,false);
		this.cxt.fillStyle = this.fillColor;
		this.cxt.strokeStyle = this.strokeColor;
		this.cxt.fill();
		this.cxt.stroke();
	}
	,drawOrShape: function(x,y,width,height,orientation) {
		var r = new com_mun_view_drawingImpl_Box(x,y,width,height,orientation,this.worldToView);
		this.cxt.beginPath();
		this.cxt.moveTo(r.get_xa(),r.get_ya());
		this.cxt.quadraticCurveTo((r.get_xa() + r.get_xb()) / 2,(r.get_ya() + r.get_yb()) / 2,(r.get_xb() + r.get_xc()) / 2,(r.get_yb() + r.get_yc()) / 2);
		this.cxt.quadraticCurveTo((r.get_xc() + r.get_xd()) / 2,(r.get_yc() + r.get_yd()) / 2,r.get_xd(),r.get_yd());
		this.cxt.quadraticCurveTo(0.25 * (r.get_xa() + r.get_xb() + r.get_xc() + r.get_xd()),0.25 * (r.get_ya() + r.get_yb() + r.get_yc() + r.get_yd()),r.get_xa(),r.get_ya());
		this.cxt.closePath();
		this.cxt.fillStyle = this.fillColor;
		this.cxt.strokeStyle = this.strokeColor;
		this.cxt.fill();
		this.cxt.stroke();
	}
	,drawNOrShape: function(x,y,width,height,orientation) {
		var r = new com_mun_view_drawingImpl_Box(x,y,width,height,orientation,this.worldToView);
		var radius = Math.sqrt((r.get_xb() - r.get_xc()) * (r.get_xb() - r.get_xc()) + (r.get_yb() - r.get_yc()) * (r.get_yb() - r.get_yc())) / 10;
		this.cxt.beginPath();
		this.cxt.moveTo(r.get_xa(),r.get_ya());
		this.cxt.quadraticCurveTo((r.get_xa() + r.get_xb()) / 2,(r.get_ya() + r.get_yb()) / 2,(r.get_xb() + r.get_xc()) / 2,(r.get_yb() + r.get_yc()) / 2);
		this.cxt.quadraticCurveTo((r.get_xc() + r.get_xd()) / 2,(r.get_yc() + r.get_yd()) / 2,r.get_xd(),r.get_yd());
		this.cxt.quadraticCurveTo(0.25 * (r.get_xa() + r.get_xb() + r.get_xc() + r.get_xd()),0.25 * (r.get_ya() + r.get_yb() + r.get_yc() + r.get_yd()),r.get_xa(),r.get_ya());
		this.cxt.closePath();
		this.cxt.arc((r.get_xb() + r.get_xc()) / 2,(r.get_yb() + r.get_yc()) / 2,radius,0,2 * Math.PI,false);
		this.cxt.fillStyle = this.fillColor;
		this.cxt.fill();
		this.cxt.stroke();
	}
	,drawBufferShape: function(x,y,width,height,orientation) {
		var r = new com_mun_view_drawingImpl_Box(x,y,width,height,orientation,this.worldToView);
		this.cxt.beginPath();
		this.cxt.moveTo(r.get_xa(),r.get_ya());
		this.cxt.lineTo((r.get_xb() + r.get_xc()) / 2,(r.get_yb() + r.get_yc()) / 2);
		this.cxt.lineTo(r.get_xd(),r.get_yd());
		this.cxt.fillStyle = this.fillColor;
		this.cxt.strokeStyle = this.strokeColor;
		this.cxt.closePath();
		this.cxt.fill();
		this.cxt.stroke();
	}
	,drawNotShape: function(x,y,width,height,orientation) {
		var r = new com_mun_view_drawingImpl_Box(x,y,width,height,orientation,this.worldToView);
		this.cxt.beginPath();
		this.cxt.moveTo(r.get_xa(),r.get_ya());
		this.cxt.lineTo((r.get_xb() + r.get_xc()) / 2,(r.get_yb() + r.get_yc()) / 2);
		this.cxt.lineTo(r.get_xd(),r.get_yd());
		this.cxt.closePath();
		var circleCentreX = (r.get_xb() + r.get_xc()) / 2;
		var circleCentreY = (r.get_yb() + r.get_yc()) / 2;
		var radius = Math.sqrt((r.get_xb() - r.get_xc()) * (r.get_xb() - r.get_xc()) + (r.get_yb() - r.get_yc()) * (r.get_yb() - r.get_yc())) / 10;
		switch(orientation[1]) {
		case 0:
			this.cxt.arc(circleCentreX,circleCentreY + radius / 2,radius,0,2 * Math.PI,false);
			break;
		case 1:
			this.cxt.arc(circleCentreX,circleCentreY - radius / 2,radius,0,2 * Math.PI,false);
			break;
		case 2:
			this.cxt.arc(circleCentreX + radius / 2,circleCentreY,radius,0,2 * Math.PI,false);
			break;
		case 3:
			this.cxt.arc(circleCentreX - radius / 2,circleCentreY,radius,0,2 * Math.PI,false);
			break;
		}
		this.cxt.fillStyle = this.fillColor;
		this.cxt.strokeStyle = this.strokeColor;
		this.cxt.fill();
		this.cxt.stroke();
	}
	,drawXorShape: function(x,y,width,height,orientation) {
		var r = new com_mun_view_drawingImpl_Box(x,y,width,height,orientation,this.worldToView);
		this.cxt.beginPath();
		this.cxt.moveTo(r.get_xa(),r.get_ya());
		this.cxt.quadraticCurveTo((r.get_xa() + r.get_xb()) / 2,(r.get_ya() + r.get_yb()) / 2,(r.get_xb() + r.get_xc()) / 2,(r.get_yb() + r.get_yc()) / 2);
		this.cxt.quadraticCurveTo((r.get_xc() + r.get_xd()) / 2,(r.get_yc() + r.get_yd()) / 2,r.get_xd(),r.get_yd());
		this.cxt.quadraticCurveTo(0.25 * (r.get_xa() + r.get_xb() + r.get_xc() + r.get_xd()),0.25 * (r.get_ya() + r.get_yb() + r.get_yc() + r.get_yd()),r.get_xa(),r.get_ya());
		this.cxt.closePath();
		this.cxt.fillStyle = this.fillColor;
		this.cxt.strokeStyle = this.strokeColor;
		this.cxt.fill();
		switch(orientation[1]) {
		case 0:
			this.cxt.moveTo(r.get_xa() + width / 8,r.get_ya());
			this.cxt.quadraticCurveTo(0.25 * (r.get_xa() + r.get_xb() + r.get_xc() + r.get_xd()),0.29 * (r.get_ya() + r.get_yb() + r.get_yc() + r.get_yd()),r.get_xa() + width / 8 * 7,r.get_ya());
			break;
		case 1:
			this.cxt.moveTo(r.get_xa() - width / 8,r.get_ya());
			this.cxt.quadraticCurveTo(0.25 * (r.get_xa() + r.get_xb() + r.get_xc() + r.get_xd()),0.22 * (r.get_ya() + r.get_yb() + r.get_yc() + r.get_yd()),r.get_xa() - width / 8 * 7,r.get_ya());
			break;
		case 2:
			this.cxt.moveTo(r.get_xa(),r.get_ya() - width / 8);
			this.cxt.quadraticCurveTo(0.28 * (r.get_xa() + r.get_xb() + r.get_xc() + r.get_xd()),0.25 * (r.get_ya() + r.get_yb() + r.get_yc() + r.get_yd()),r.get_xa(),r.get_ya() - width / 8 * 7);
			break;
		case 3:
			this.cxt.moveTo(r.get_xa(),r.get_ya() + width / 8);
			this.cxt.quadraticCurveTo(0.22 * (r.get_xa() + r.get_xb() + r.get_xc() + r.get_xd()),0.25 * (r.get_ya() + r.get_yb() + r.get_yc() + r.get_yd()),r.get_xa(),r.get_ya() + width / 8 * 7);
			break;
		}
		this.cxt.stroke();
	}
	,drawRect: function(x,y,width,height) {
		var x0 = this.worldToView.convertX(x - width / 2);
		var y0 = this.worldToView.convertY(y - height / 2);
		var x1 = this.worldToView.convertX(x + width / 2);
		var y1 = this.worldToView.convertY(y + height / 2);
		this.cxt.rect(Math.min(x0,x1),Math.min(y0,y1),Math.abs(x1 - x0),Math.abs(y1 - y0));
		this.cxt.fillStyle = this.fillColor;
		this.cxt.strokeStyle = this.strokeColor;
		this.cxt.fill();
		this.cxt.stroke();
	}
	,drawText: function(str,x,y,width) {
		this.cxt.font = this.font;
		this.cxt.fillStyle = this.textColor;
		this.cxt.strokeStyle = this.strokeColor;
		this.cxt.fillText(str,x,y,width);
	}
	,drawCricle: function(x,y,radius) {
		var x0 = this.worldToView.convertX(x);
		var y0 = this.worldToView.convertY(y);
		var x1 = this.worldToView.convertX(x);
		var y1 = this.worldToView.convertY(y);
		this.cxt.beginPath();
		this.cxt.arc(Math.min(x0,x1),Math.min(y0,y1),radius,0,2 * Math.PI,false);
		this.cxt.fillStyle = this.fillColor;
		this.cxt.strokeStyle = this.strokeColor;
		this.cxt.fill();
		this.cxt.stroke();
	}
	,drawLine: function(vx0,vy0,vx1,vy1) {
		var x0 = this.worldToView.convertX(vx0);
		var y0 = this.worldToView.convertY(vy0);
		var x1 = this.worldToView.convertX(vx1);
		var y1 = this.worldToView.convertY(vy1);
		this.cxt.beginPath();
		this.cxt.moveTo(x0,y0);
		this.cxt.lineTo(x1,y1);
		this.cxt.closePath();
		this.cxt.lineWidth = this.lineWidth;
		this.cxt.fillStyle = this.fillColor;
		this.cxt.strokeStyle = this.strokeColor;
		this.cxt.fill();
		this.cxt.stroke();
	}
	,__class__: com_mun_view_drawingImpl_DrawingAdapter
};
var com_mun_view_drawingImpl_WorldToViewI = function() { };
$hxClasses["com.mun.view.drawingImpl.WorldToViewI"] = com_mun_view_drawingImpl_WorldToViewI;
com_mun_view_drawingImpl_WorldToViewI.__name__ = ["com","mun","view","drawingImpl","WorldToViewI"];
com_mun_view_drawingImpl_WorldToViewI.prototype = {
	convertX: null
	,convertY: null
	,invertX: null
	,invertY: null
	,__class__: com_mun_view_drawingImpl_WorldToViewI
};
var com_mun_view_drawingImpl_WorldToView = function(base) {
	this.base = 1;
	this.base = base;
};
$hxClasses["com.mun.view.drawingImpl.WorldToView"] = com_mun_view_drawingImpl_WorldToView;
com_mun_view_drawingImpl_WorldToView.__name__ = ["com","mun","view","drawingImpl","WorldToView"];
com_mun_view_drawingImpl_WorldToView.__interfaces__ = [com_mun_view_drawingImpl_WorldToViewI];
com_mun_view_drawingImpl_WorldToView.prototype = {
	base: null
	,convertX: function(x) {
		return this.base * x;
	}
	,convertY: function(y) {
		return this.base * y;
	}
	,invertX: function(view_x) {
		return this.base * view_x;
	}
	,invertY: function(view_y) {
		return this.base * view_y;
	}
	,__class__: com_mun_view_drawingImpl_WorldToView
};
var haxe_IMap = function() { };
$hxClasses["haxe.IMap"] = haxe_IMap;
haxe_IMap.__name__ = ["haxe","IMap"];
haxe_IMap.prototype = {
	get: null
	,set: null
	,exists: null
	,remove: null
	,keys: null
	,iterator: null
	,toString: null
	,__class__: haxe_IMap
};
var haxe__$Int32_Int32_$Impl_$ = {};
$hxClasses["haxe._Int32.Int32_Impl_"] = haxe__$Int32_Int32_$Impl_$;
haxe__$Int32_Int32_$Impl_$.__name__ = ["haxe","_Int32","Int32_Impl_"];
haxe__$Int32_Int32_$Impl_$.preIncrement = function(this1) {
	this1 = ++this1 | 0;
	return this1;
};
haxe__$Int32_Int32_$Impl_$.postIncrement = function(this1) {
	var ret = this1++;
	this1 |= 0;
	return ret;
};
haxe__$Int32_Int32_$Impl_$.preDecrement = function(this1) {
	this1 = --this1 | 0;
	return this1;
};
haxe__$Int32_Int32_$Impl_$.postDecrement = function(this1) {
	var ret = this1--;
	this1 |= 0;
	return ret;
};
haxe__$Int32_Int32_$Impl_$.add = function(a,b) {
	return a + b | 0;
};
haxe__$Int32_Int32_$Impl_$.addInt = function(a,b) {
	return a + b | 0;
};
haxe__$Int32_Int32_$Impl_$.sub = function(a,b) {
	return a - b | 0;
};
haxe__$Int32_Int32_$Impl_$.subInt = function(a,b) {
	return a - b | 0;
};
haxe__$Int32_Int32_$Impl_$.intSub = function(a,b) {
	return a - b | 0;
};
haxe__$Int32_Int32_$Impl_$.mul = function(a,b) {
	return haxe__$Int32_Int32_$Impl_$._mul(a,b);
};
haxe__$Int32_Int32_$Impl_$.mulInt = function(a,b) {
	return haxe__$Int32_Int32_$Impl_$._mul(a,b);
};
haxe__$Int32_Int32_$Impl_$.toFloat = function(this1) {
	return this1;
};
haxe__$Int32_Int32_$Impl_$.ucompare = function(a,b) {
	if(a < 0) {
		if(b < 0) {
			return ~b - ~a | 0;
		} else {
			return 1;
		}
	}
	if(b < 0) {
		return -1;
	} else {
		return a - b | 0;
	}
};
haxe__$Int32_Int32_$Impl_$.clamp = function(x) {
	return x | 0;
};
var haxe__$Int64_Int64_$Impl_$ = {};
$hxClasses["haxe._Int64.Int64_Impl_"] = haxe__$Int64_Int64_$Impl_$;
haxe__$Int64_Int64_$Impl_$.__name__ = ["haxe","_Int64","Int64_Impl_"];
haxe__$Int64_Int64_$Impl_$.__properties__ = {get_low:"get_low",get_high:"get_high"};
haxe__$Int64_Int64_$Impl_$._new = function(x) {
	var this1 = x;
	return this1;
};
haxe__$Int64_Int64_$Impl_$.copy = function(this1) {
	var this2 = new haxe__$Int64__$_$_$Int64(this1.high,this1.low);
	return this2;
};
haxe__$Int64_Int64_$Impl_$.make = function(high,low) {
	var this1 = new haxe__$Int64__$_$_$Int64(high,low);
	return this1;
};
haxe__$Int64_Int64_$Impl_$.ofInt = function(x) {
	var this1 = new haxe__$Int64__$_$_$Int64(x >> 31,x);
	return this1;
};
haxe__$Int64_Int64_$Impl_$.toInt = function(x) {
	if(x.high != x.low >> 31) {
		throw new js__$Boot_HaxeError("Overflow");
	}
	return x.low;
};
haxe__$Int64_Int64_$Impl_$["is"] = function(val) {
	return js_Boot.__instanceof(val,haxe__$Int64__$_$_$Int64);
};
haxe__$Int64_Int64_$Impl_$.getHigh = function(x) {
	return x.high;
};
haxe__$Int64_Int64_$Impl_$.getLow = function(x) {
	return x.low;
};
haxe__$Int64_Int64_$Impl_$.isNeg = function(x) {
	return x.high < 0;
};
haxe__$Int64_Int64_$Impl_$.isZero = function(x) {
	var this1 = new haxe__$Int64__$_$_$Int64(0,0);
	var b = this1;
	if(x.high == b.high) {
		return x.low == b.low;
	} else {
		return false;
	}
};
haxe__$Int64_Int64_$Impl_$.compare = function(a,b) {
	var v = a.high - b.high | 0;
	if(v != 0) {
		v = v;
	} else {
		v = haxe__$Int32_Int32_$Impl_$.ucompare(a.low,b.low);
	}
	if(a.high < 0) {
		if(b.high < 0) {
			return v;
		} else {
			return -1;
		}
	} else if(b.high >= 0) {
		return v;
	} else {
		return 1;
	}
};
haxe__$Int64_Int64_$Impl_$.ucompare = function(a,b) {
	var v = haxe__$Int32_Int32_$Impl_$.ucompare(a.high,b.high);
	if(v != 0) {
		return v;
	} else {
		return haxe__$Int32_Int32_$Impl_$.ucompare(a.low,b.low);
	}
};
haxe__$Int64_Int64_$Impl_$.toStr = function(x) {
	return haxe__$Int64_Int64_$Impl_$.toString(x);
};
haxe__$Int64_Int64_$Impl_$.toString = function(this1) {
	var i = this1;
	var this2 = new haxe__$Int64__$_$_$Int64(0,0);
	var b = this2;
	if(i.high == b.high && i.low == b.low) {
		return "0";
	}
	var str = "";
	var neg = false;
	if(i.high < 0) {
		neg = true;
	}
	var this3 = new haxe__$Int64__$_$_$Int64(0,10);
	var ten = this3;
	while(true) {
		var this4 = new haxe__$Int64__$_$_$Int64(0,0);
		var b1 = this4;
		if(!(i.high != b1.high || i.low != b1.low)) {
			break;
		}
		var r = haxe__$Int64_Int64_$Impl_$.divMod(i,ten);
		if(r.modulus.high < 0) {
			var x = r.modulus;
			var high = ~x.high;
			var low = -x.low;
			if(low == 0) {
				var ret = high++;
				high = high | 0;
			}
			var this5 = new haxe__$Int64__$_$_$Int64(high,low);
			str = this5.low + str;
			var x1 = r.quotient;
			var high1 = ~x1.high;
			var low1 = -x1.low;
			if(low1 == 0) {
				var ret1 = high1++;
				high1 = high1 | 0;
			}
			var this6 = new haxe__$Int64__$_$_$Int64(high1,low1);
			i = this6;
		} else {
			str = r.modulus.low + str;
			i = r.quotient;
		}
	}
	if(neg) {
		str = "-" + str;
	}
	return str;
};
haxe__$Int64_Int64_$Impl_$.parseString = function(sParam) {
	return haxe_Int64Helper.parseString(sParam);
};
haxe__$Int64_Int64_$Impl_$.fromFloat = function(f) {
	return haxe_Int64Helper.fromFloat(f);
};
haxe__$Int64_Int64_$Impl_$.divMod = function(dividend,divisor) {
	if(divisor.high == 0) {
		var _g = divisor.low;
		switch(_g) {
		case 0:
			throw new js__$Boot_HaxeError("divide by zero");
			break;
		case 1:
			var this1 = new haxe__$Int64__$_$_$Int64(dividend.high,dividend.low);
			var this2 = new haxe__$Int64__$_$_$Int64(0,0);
			return { quotient : this1, modulus : this2};
		}
	}
	var divSign = dividend.high < 0 != divisor.high < 0;
	var modulus;
	if(dividend.high < 0) {
		var high = ~dividend.high;
		var low = -dividend.low;
		if(low == 0) {
			var ret = high++;
			high = high | 0;
		}
		var this3 = new haxe__$Int64__$_$_$Int64(high,low);
		modulus = this3;
	} else {
		var this4 = new haxe__$Int64__$_$_$Int64(dividend.high,dividend.low);
		modulus = this4;
	}
	if(divisor.high < 0) {
		var high1 = ~divisor.high;
		var low1 = -divisor.low;
		if(low1 == 0) {
			var ret1 = high1++;
			high1 = high1 | 0;
		}
		var this5 = new haxe__$Int64__$_$_$Int64(high1,low1);
		divisor = this5;
	} else {
		divisor = divisor;
	}
	var this6 = new haxe__$Int64__$_$_$Int64(0,0);
	var quotient = this6;
	var this7 = new haxe__$Int64__$_$_$Int64(0,1);
	var mask = this7;
	while(!(divisor.high < 0)) {
		var v = haxe__$Int32_Int32_$Impl_$.ucompare(divisor.high,modulus.high);
		var cmp = v != 0 ? v : haxe__$Int32_Int32_$Impl_$.ucompare(divisor.low,modulus.low);
		var b = 1;
		b &= 63;
		if(b == 0) {
			var this8 = new haxe__$Int64__$_$_$Int64(divisor.high,divisor.low);
			divisor = this8;
		} else if(b < 32) {
			var this9 = new haxe__$Int64__$_$_$Int64(divisor.high << b | divisor.low >>> 32 - b,divisor.low << b);
			divisor = this9;
		} else {
			var this10 = new haxe__$Int64__$_$_$Int64(divisor.low << b - 32,0);
			divisor = this10;
		}
		var b1 = 1;
		b1 &= 63;
		if(b1 == 0) {
			var this11 = new haxe__$Int64__$_$_$Int64(mask.high,mask.low);
			mask = this11;
		} else if(b1 < 32) {
			var this12 = new haxe__$Int64__$_$_$Int64(mask.high << b1 | mask.low >>> 32 - b1,mask.low << b1);
			mask = this12;
		} else {
			var this13 = new haxe__$Int64__$_$_$Int64(mask.low << b1 - 32,0);
			mask = this13;
		}
		if(cmp >= 0) {
			break;
		}
	}
	while(true) {
		var this14 = new haxe__$Int64__$_$_$Int64(0,0);
		var b2 = this14;
		if(!(mask.high != b2.high || mask.low != b2.low)) {
			break;
		}
		var v1 = haxe__$Int32_Int32_$Impl_$.ucompare(modulus.high,divisor.high);
		if((v1 != 0 ? v1 : haxe__$Int32_Int32_$Impl_$.ucompare(modulus.low,divisor.low)) >= 0) {
			var this15 = new haxe__$Int64__$_$_$Int64(quotient.high | mask.high,quotient.low | mask.low);
			quotient = this15;
			var high2 = modulus.high - divisor.high | 0;
			var low2 = modulus.low - divisor.low | 0;
			if(haxe__$Int32_Int32_$Impl_$.ucompare(modulus.low,divisor.low) < 0) {
				var ret2 = high2--;
				high2 = high2 | 0;
			}
			var this16 = new haxe__$Int64__$_$_$Int64(high2,low2);
			modulus = this16;
		}
		var b3 = 1;
		b3 &= 63;
		if(b3 == 0) {
			var this17 = new haxe__$Int64__$_$_$Int64(mask.high,mask.low);
			mask = this17;
		} else if(b3 < 32) {
			var this18 = new haxe__$Int64__$_$_$Int64(mask.high >>> b3,mask.high << 32 - b3 | mask.low >>> b3);
			mask = this18;
		} else {
			var this19 = new haxe__$Int64__$_$_$Int64(0,mask.high >>> b3 - 32);
			mask = this19;
		}
		var b4 = 1;
		b4 &= 63;
		if(b4 == 0) {
			var this20 = new haxe__$Int64__$_$_$Int64(divisor.high,divisor.low);
			divisor = this20;
		} else if(b4 < 32) {
			var this21 = new haxe__$Int64__$_$_$Int64(divisor.high >>> b4,divisor.high << 32 - b4 | divisor.low >>> b4);
			divisor = this21;
		} else {
			var this22 = new haxe__$Int64__$_$_$Int64(0,divisor.high >>> b4 - 32);
			divisor = this22;
		}
	}
	if(divSign) {
		var high3 = ~quotient.high;
		var low3 = -quotient.low;
		if(low3 == 0) {
			var ret3 = high3++;
			high3 = high3 | 0;
		}
		var this23 = new haxe__$Int64__$_$_$Int64(high3,low3);
		quotient = this23;
	}
	if(dividend.high < 0) {
		var high4 = ~modulus.high;
		var low4 = -modulus.low;
		if(low4 == 0) {
			var ret4 = high4++;
			high4 = high4 | 0;
		}
		var this24 = new haxe__$Int64__$_$_$Int64(high4,low4);
		modulus = this24;
	}
	return { quotient : quotient, modulus : modulus};
};
haxe__$Int64_Int64_$Impl_$.neg = function(x) {
	var high = ~x.high;
	var low = -x.low;
	if(low == 0) {
		var ret = high++;
		high = high | 0;
	}
	var this1 = new haxe__$Int64__$_$_$Int64(high,low);
	return this1;
};
haxe__$Int64_Int64_$Impl_$.preIncrement = function(this1) {
	var this2 = new haxe__$Int64__$_$_$Int64(this1.high,this1.low);
	this1 = this2;
	var ret = this1.low++;
	this1.low = this1.low | 0;
	if(this1.low == 0) {
		var ret1 = this1.high++;
		this1.high = this1.high | 0;
	}
	return this1;
};
haxe__$Int64_Int64_$Impl_$.postIncrement = function(this1) {
	var ret = this1;
	var this2 = new haxe__$Int64__$_$_$Int64(this1.high,this1.low);
	this1 = this2;
	var ret1 = this1.low++;
	this1.low = this1.low | 0;
	if(this1.low == 0) {
		var ret2 = this1.high++;
		this1.high = this1.high | 0;
	}
	return ret;
};
haxe__$Int64_Int64_$Impl_$.preDecrement = function(this1) {
	var this2 = new haxe__$Int64__$_$_$Int64(this1.high,this1.low);
	this1 = this2;
	if(this1.low == 0) {
		var ret = this1.high--;
		this1.high = this1.high | 0;
	}
	var ret1 = this1.low--;
	this1.low = this1.low | 0;
	return this1;
};
haxe__$Int64_Int64_$Impl_$.postDecrement = function(this1) {
	var ret = this1;
	var this2 = new haxe__$Int64__$_$_$Int64(this1.high,this1.low);
	this1 = this2;
	if(this1.low == 0) {
		var ret1 = this1.high--;
		this1.high = this1.high | 0;
	}
	var ret2 = this1.low--;
	this1.low = this1.low | 0;
	return ret;
};
haxe__$Int64_Int64_$Impl_$.add = function(a,b) {
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this1 = new haxe__$Int64__$_$_$Int64(high,low);
	return this1;
};
haxe__$Int64_Int64_$Impl_$.addInt = function(a,b) {
	var this1 = new haxe__$Int64__$_$_$Int64(b >> 31,b);
	var b1 = this1;
	var high = a.high + b1.high | 0;
	var low = a.low + b1.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this2 = new haxe__$Int64__$_$_$Int64(high,low);
	return this2;
};
haxe__$Int64_Int64_$Impl_$.sub = function(a,b) {
	var high = a.high - b.high | 0;
	var low = a.low - b.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(a.low,b.low) < 0) {
		var ret = high--;
		high = high | 0;
	}
	var this1 = new haxe__$Int64__$_$_$Int64(high,low);
	return this1;
};
haxe__$Int64_Int64_$Impl_$.subInt = function(a,b) {
	var this1 = new haxe__$Int64__$_$_$Int64(b >> 31,b);
	var b1 = this1;
	var high = a.high - b1.high | 0;
	var low = a.low - b1.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(a.low,b1.low) < 0) {
		var ret = high--;
		high = high | 0;
	}
	var this2 = new haxe__$Int64__$_$_$Int64(high,low);
	return this2;
};
haxe__$Int64_Int64_$Impl_$.intSub = function(a,b) {
	var this1 = new haxe__$Int64__$_$_$Int64(a >> 31,a);
	var a1 = this1;
	var high = a1.high - b.high | 0;
	var low = a1.low - b.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(a1.low,b.low) < 0) {
		var ret = high--;
		high = high | 0;
	}
	var this2 = new haxe__$Int64__$_$_$Int64(high,low);
	return this2;
};
haxe__$Int64_Int64_$Impl_$.mul = function(a,b) {
	var mask = 65535;
	var al = a.low & mask;
	var ah = a.low >>> 16;
	var bl = b.low & mask;
	var bh = b.low >>> 16;
	var p00 = haxe__$Int32_Int32_$Impl_$._mul(al,bl);
	var p10 = haxe__$Int32_Int32_$Impl_$._mul(ah,bl);
	var p01 = haxe__$Int32_Int32_$Impl_$._mul(al,bh);
	var p11 = haxe__$Int32_Int32_$Impl_$._mul(ah,bh);
	var low = p00;
	var high = (p11 + (p01 >>> 16) | 0) + (p10 >>> 16) | 0;
	p01 = p01 << 16;
	low = low + p01 | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,p01) < 0) {
		var ret = high++;
		high = high | 0;
	}
	p10 = p10 << 16;
	low = low + p10 | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,p10) < 0) {
		var ret1 = high++;
		high = high | 0;
	}
	high = high + (haxe__$Int32_Int32_$Impl_$._mul(a.low,b.high) + haxe__$Int32_Int32_$Impl_$._mul(a.high,b.low) | 0) | 0;
	var this1 = new haxe__$Int64__$_$_$Int64(high,low);
	return this1;
};
haxe__$Int64_Int64_$Impl_$.mulInt = function(a,b) {
	var this1 = new haxe__$Int64__$_$_$Int64(b >> 31,b);
	var b1 = this1;
	var mask = 65535;
	var al = a.low & mask;
	var ah = a.low >>> 16;
	var bl = b1.low & mask;
	var bh = b1.low >>> 16;
	var p00 = haxe__$Int32_Int32_$Impl_$._mul(al,bl);
	var p10 = haxe__$Int32_Int32_$Impl_$._mul(ah,bl);
	var p01 = haxe__$Int32_Int32_$Impl_$._mul(al,bh);
	var p11 = haxe__$Int32_Int32_$Impl_$._mul(ah,bh);
	var low = p00;
	var high = (p11 + (p01 >>> 16) | 0) + (p10 >>> 16) | 0;
	p01 = p01 << 16;
	low = low + p01 | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,p01) < 0) {
		var ret = high++;
		high = high | 0;
	}
	p10 = p10 << 16;
	low = low + p10 | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,p10) < 0) {
		var ret1 = high++;
		high = high | 0;
	}
	high = high + (haxe__$Int32_Int32_$Impl_$._mul(a.low,b1.high) + haxe__$Int32_Int32_$Impl_$._mul(a.high,b1.low) | 0) | 0;
	var this2 = new haxe__$Int64__$_$_$Int64(high,low);
	return this2;
};
haxe__$Int64_Int64_$Impl_$.div = function(a,b) {
	return haxe__$Int64_Int64_$Impl_$.divMod(a,b).quotient;
};
haxe__$Int64_Int64_$Impl_$.divInt = function(a,b) {
	var this1 = new haxe__$Int64__$_$_$Int64(b >> 31,b);
	return haxe__$Int64_Int64_$Impl_$.divMod(a,this1).quotient;
};
haxe__$Int64_Int64_$Impl_$.intDiv = function(a,b) {
	var this1 = new haxe__$Int64__$_$_$Int64(a >> 31,a);
	var x = haxe__$Int64_Int64_$Impl_$.divMod(this1,b).quotient;
	if(x.high != x.low >> 31) {
		throw new js__$Boot_HaxeError("Overflow");
	}
	var x1 = x.low;
	var this2 = new haxe__$Int64__$_$_$Int64(x1 >> 31,x1);
	return this2;
};
haxe__$Int64_Int64_$Impl_$.mod = function(a,b) {
	return haxe__$Int64_Int64_$Impl_$.divMod(a,b).modulus;
};
haxe__$Int64_Int64_$Impl_$.modInt = function(a,b) {
	var this1 = new haxe__$Int64__$_$_$Int64(b >> 31,b);
	var x = haxe__$Int64_Int64_$Impl_$.divMod(a,this1).modulus;
	if(x.high != x.low >> 31) {
		throw new js__$Boot_HaxeError("Overflow");
	}
	var x1 = x.low;
	var this2 = new haxe__$Int64__$_$_$Int64(x1 >> 31,x1);
	return this2;
};
haxe__$Int64_Int64_$Impl_$.intMod = function(a,b) {
	var this1 = new haxe__$Int64__$_$_$Int64(a >> 31,a);
	var x = haxe__$Int64_Int64_$Impl_$.divMod(this1,b).modulus;
	if(x.high != x.low >> 31) {
		throw new js__$Boot_HaxeError("Overflow");
	}
	var x1 = x.low;
	var this2 = new haxe__$Int64__$_$_$Int64(x1 >> 31,x1);
	return this2;
};
haxe__$Int64_Int64_$Impl_$.eq = function(a,b) {
	if(a.high == b.high) {
		return a.low == b.low;
	} else {
		return false;
	}
};
haxe__$Int64_Int64_$Impl_$.eqInt = function(a,b) {
	var this1 = new haxe__$Int64__$_$_$Int64(b >> 31,b);
	var b1 = this1;
	if(a.high == b1.high) {
		return a.low == b1.low;
	} else {
		return false;
	}
};
haxe__$Int64_Int64_$Impl_$.neq = function(a,b) {
	if(!(a.high != b.high)) {
		return a.low != b.low;
	} else {
		return true;
	}
};
haxe__$Int64_Int64_$Impl_$.neqInt = function(a,b) {
	var this1 = new haxe__$Int64__$_$_$Int64(b >> 31,b);
	var b1 = this1;
	if(!(a.high != b1.high)) {
		return a.low != b1.low;
	} else {
		return true;
	}
};
haxe__$Int64_Int64_$Impl_$.lt = function(a,b) {
	var v = a.high - b.high | 0;
	if(v != 0) {
		v = v;
	} else {
		v = haxe__$Int32_Int32_$Impl_$.ucompare(a.low,b.low);
	}
	return (a.high < 0 ? b.high < 0 ? v : -1 : b.high >= 0 ? v : 1) < 0;
};
haxe__$Int64_Int64_$Impl_$.ltInt = function(a,b) {
	var this1 = new haxe__$Int64__$_$_$Int64(b >> 31,b);
	var b1 = this1;
	var v = a.high - b1.high | 0;
	if(v != 0) {
		v = v;
	} else {
		v = haxe__$Int32_Int32_$Impl_$.ucompare(a.low,b1.low);
	}
	return (a.high < 0 ? b1.high < 0 ? v : -1 : b1.high >= 0 ? v : 1) < 0;
};
haxe__$Int64_Int64_$Impl_$.intLt = function(a,b) {
	var this1 = new haxe__$Int64__$_$_$Int64(a >> 31,a);
	var a1 = this1;
	var v = a1.high - b.high | 0;
	if(v != 0) {
		v = v;
	} else {
		v = haxe__$Int32_Int32_$Impl_$.ucompare(a1.low,b.low);
	}
	return (a1.high < 0 ? b.high < 0 ? v : -1 : b.high >= 0 ? v : 1) < 0;
};
haxe__$Int64_Int64_$Impl_$.lte = function(a,b) {
	var v = a.high - b.high | 0;
	if(v != 0) {
		v = v;
	} else {
		v = haxe__$Int32_Int32_$Impl_$.ucompare(a.low,b.low);
	}
	return (a.high < 0 ? b.high < 0 ? v : -1 : b.high >= 0 ? v : 1) <= 0;
};
haxe__$Int64_Int64_$Impl_$.lteInt = function(a,b) {
	var this1 = new haxe__$Int64__$_$_$Int64(b >> 31,b);
	var b1 = this1;
	var v = a.high - b1.high | 0;
	if(v != 0) {
		v = v;
	} else {
		v = haxe__$Int32_Int32_$Impl_$.ucompare(a.low,b1.low);
	}
	return (a.high < 0 ? b1.high < 0 ? v : -1 : b1.high >= 0 ? v : 1) <= 0;
};
haxe__$Int64_Int64_$Impl_$.intLte = function(a,b) {
	var this1 = new haxe__$Int64__$_$_$Int64(a >> 31,a);
	var a1 = this1;
	var v = a1.high - b.high | 0;
	if(v != 0) {
		v = v;
	} else {
		v = haxe__$Int32_Int32_$Impl_$.ucompare(a1.low,b.low);
	}
	return (a1.high < 0 ? b.high < 0 ? v : -1 : b.high >= 0 ? v : 1) <= 0;
};
haxe__$Int64_Int64_$Impl_$.gt = function(a,b) {
	var v = a.high - b.high | 0;
	if(v != 0) {
		v = v;
	} else {
		v = haxe__$Int32_Int32_$Impl_$.ucompare(a.low,b.low);
	}
	return (a.high < 0 ? b.high < 0 ? v : -1 : b.high >= 0 ? v : 1) > 0;
};
haxe__$Int64_Int64_$Impl_$.gtInt = function(a,b) {
	var this1 = new haxe__$Int64__$_$_$Int64(b >> 31,b);
	var b1 = this1;
	var v = a.high - b1.high | 0;
	if(v != 0) {
		v = v;
	} else {
		v = haxe__$Int32_Int32_$Impl_$.ucompare(a.low,b1.low);
	}
	return (a.high < 0 ? b1.high < 0 ? v : -1 : b1.high >= 0 ? v : 1) > 0;
};
haxe__$Int64_Int64_$Impl_$.intGt = function(a,b) {
	var this1 = new haxe__$Int64__$_$_$Int64(a >> 31,a);
	var a1 = this1;
	var v = a1.high - b.high | 0;
	if(v != 0) {
		v = v;
	} else {
		v = haxe__$Int32_Int32_$Impl_$.ucompare(a1.low,b.low);
	}
	return (a1.high < 0 ? b.high < 0 ? v : -1 : b.high >= 0 ? v : 1) > 0;
};
haxe__$Int64_Int64_$Impl_$.gte = function(a,b) {
	var v = a.high - b.high | 0;
	if(v != 0) {
		v = v;
	} else {
		v = haxe__$Int32_Int32_$Impl_$.ucompare(a.low,b.low);
	}
	return (a.high < 0 ? b.high < 0 ? v : -1 : b.high >= 0 ? v : 1) >= 0;
};
haxe__$Int64_Int64_$Impl_$.gteInt = function(a,b) {
	var this1 = new haxe__$Int64__$_$_$Int64(b >> 31,b);
	var b1 = this1;
	var v = a.high - b1.high | 0;
	if(v != 0) {
		v = v;
	} else {
		v = haxe__$Int32_Int32_$Impl_$.ucompare(a.low,b1.low);
	}
	return (a.high < 0 ? b1.high < 0 ? v : -1 : b1.high >= 0 ? v : 1) >= 0;
};
haxe__$Int64_Int64_$Impl_$.intGte = function(a,b) {
	var this1 = new haxe__$Int64__$_$_$Int64(a >> 31,a);
	var a1 = this1;
	var v = a1.high - b.high | 0;
	if(v != 0) {
		v = v;
	} else {
		v = haxe__$Int32_Int32_$Impl_$.ucompare(a1.low,b.low);
	}
	return (a1.high < 0 ? b.high < 0 ? v : -1 : b.high >= 0 ? v : 1) >= 0;
};
haxe__$Int64_Int64_$Impl_$.complement = function(a) {
	var this1 = new haxe__$Int64__$_$_$Int64(~a.high,~a.low);
	return this1;
};
haxe__$Int64_Int64_$Impl_$.and = function(a,b) {
	var this1 = new haxe__$Int64__$_$_$Int64(a.high & b.high,a.low & b.low);
	return this1;
};
haxe__$Int64_Int64_$Impl_$.or = function(a,b) {
	var this1 = new haxe__$Int64__$_$_$Int64(a.high | b.high,a.low | b.low);
	return this1;
};
haxe__$Int64_Int64_$Impl_$.xor = function(a,b) {
	var this1 = new haxe__$Int64__$_$_$Int64(a.high ^ b.high,a.low ^ b.low);
	return this1;
};
haxe__$Int64_Int64_$Impl_$.shl = function(a,b) {
	b &= 63;
	if(b == 0) {
		var this1 = new haxe__$Int64__$_$_$Int64(a.high,a.low);
		return this1;
	} else if(b < 32) {
		var this2 = new haxe__$Int64__$_$_$Int64(a.high << b | a.low >>> 32 - b,a.low << b);
		return this2;
	} else {
		var this3 = new haxe__$Int64__$_$_$Int64(a.low << b - 32,0);
		return this3;
	}
};
haxe__$Int64_Int64_$Impl_$.shr = function(a,b) {
	b &= 63;
	if(b == 0) {
		var this1 = new haxe__$Int64__$_$_$Int64(a.high,a.low);
		return this1;
	} else if(b < 32) {
		var this2 = new haxe__$Int64__$_$_$Int64(a.high >> b,a.high << 32 - b | a.low >>> b);
		return this2;
	} else {
		var this3 = new haxe__$Int64__$_$_$Int64(a.high >> 31,a.high >> b - 32);
		return this3;
	}
};
haxe__$Int64_Int64_$Impl_$.ushr = function(a,b) {
	b &= 63;
	if(b == 0) {
		var this1 = new haxe__$Int64__$_$_$Int64(a.high,a.low);
		return this1;
	} else if(b < 32) {
		var this2 = new haxe__$Int64__$_$_$Int64(a.high >>> b,a.high << 32 - b | a.low >>> b);
		return this2;
	} else {
		var this3 = new haxe__$Int64__$_$_$Int64(0,a.high >>> b - 32);
		return this3;
	}
};
haxe__$Int64_Int64_$Impl_$.get_high = function(this1) {
	return this1.high;
};
haxe__$Int64_Int64_$Impl_$.set_high = function(this1,x) {
	return this1.high = x;
};
haxe__$Int64_Int64_$Impl_$.get_low = function(this1) {
	return this1.low;
};
haxe__$Int64_Int64_$Impl_$.set_low = function(this1,x) {
	return this1.low = x;
};
var haxe__$Int64__$_$_$Int64 = function(high,low) {
	this.high = high;
	this.low = low;
};
$hxClasses["haxe._Int64.___Int64"] = haxe__$Int64__$_$_$Int64;
haxe__$Int64__$_$_$Int64.__name__ = ["haxe","_Int64","___Int64"];
haxe__$Int64__$_$_$Int64.prototype = {
	high: null
	,low: null
	,toString: function() {
		return haxe__$Int64_Int64_$Impl_$.toString(this);
	}
	,__class__: haxe__$Int64__$_$_$Int64
};
var haxe_Int64Helper = function() { };
$hxClasses["haxe.Int64Helper"] = haxe_Int64Helper;
haxe_Int64Helper.__name__ = ["haxe","Int64Helper"];
haxe_Int64Helper.parseString = function(sParam) {
	var this1 = new haxe__$Int64__$_$_$Int64(0,10);
	var base = this1;
	var this2 = new haxe__$Int64__$_$_$Int64(0,0);
	var current = this2;
	var this3 = new haxe__$Int64__$_$_$Int64(0,1);
	var multiplier = this3;
	var sIsNegative = false;
	var s = StringTools.trim(sParam);
	if(s.charAt(0) == "-") {
		sIsNegative = true;
		s = s.substring(1,s.length);
	}
	var len = s.length;
	var _g1 = 0;
	var _g = len;
	while(_g1 < _g) {
		var i = _g1++;
		var digitInt = HxOverrides.cca(s,len - 1 - i) - 48;
		if(digitInt < 0 || digitInt > 9) {
			throw new js__$Boot_HaxeError("NumberFormatError");
		}
		var this4 = new haxe__$Int64__$_$_$Int64(digitInt >> 31,digitInt);
		var digit = this4;
		if(sIsNegative) {
			var mask = 65535;
			var al = multiplier.low & mask;
			var ah = multiplier.low >>> 16;
			var bl = digit.low & mask;
			var bh = digit.low >>> 16;
			var p00 = haxe__$Int32_Int32_$Impl_$._mul(al,bl);
			var p10 = haxe__$Int32_Int32_$Impl_$._mul(ah,bl);
			var p01 = haxe__$Int32_Int32_$Impl_$._mul(al,bh);
			var p11 = haxe__$Int32_Int32_$Impl_$._mul(ah,bh);
			var low = p00;
			var high = (p11 + (p01 >>> 16) | 0) + (p10 >>> 16) | 0;
			p01 = p01 << 16;
			low = low + p01 | 0;
			if(haxe__$Int32_Int32_$Impl_$.ucompare(low,p01) < 0) {
				var ret = high++;
				high = high | 0;
			}
			p10 = p10 << 16;
			low = low + p10 | 0;
			if(haxe__$Int32_Int32_$Impl_$.ucompare(low,p10) < 0) {
				var ret1 = high++;
				high = high | 0;
			}
			high = high + (haxe__$Int32_Int32_$Impl_$._mul(multiplier.low,digit.high) + haxe__$Int32_Int32_$Impl_$._mul(multiplier.high,digit.low) | 0) | 0;
			var this5 = new haxe__$Int64__$_$_$Int64(high,low);
			var b = this5;
			var high1 = current.high - b.high | 0;
			var low1 = current.low - b.low | 0;
			if(haxe__$Int32_Int32_$Impl_$.ucompare(current.low,b.low) < 0) {
				var ret2 = high1--;
				high1 = high1 | 0;
			}
			var this6 = new haxe__$Int64__$_$_$Int64(high1,low1);
			current = this6;
			if(!(current.high < 0)) {
				throw new js__$Boot_HaxeError("NumberFormatError: Underflow");
			}
		} else {
			var mask1 = 65535;
			var al1 = multiplier.low & mask1;
			var ah1 = multiplier.low >>> 16;
			var bl1 = digit.low & mask1;
			var bh1 = digit.low >>> 16;
			var p001 = haxe__$Int32_Int32_$Impl_$._mul(al1,bl1);
			var p101 = haxe__$Int32_Int32_$Impl_$._mul(ah1,bl1);
			var p011 = haxe__$Int32_Int32_$Impl_$._mul(al1,bh1);
			var p111 = haxe__$Int32_Int32_$Impl_$._mul(ah1,bh1);
			var low2 = p001;
			var high2 = (p111 + (p011 >>> 16) | 0) + (p101 >>> 16) | 0;
			p011 = p011 << 16;
			low2 = low2 + p011 | 0;
			if(haxe__$Int32_Int32_$Impl_$.ucompare(low2,p011) < 0) {
				var ret3 = high2++;
				high2 = high2 | 0;
			}
			p101 = p101 << 16;
			low2 = low2 + p101 | 0;
			if(haxe__$Int32_Int32_$Impl_$.ucompare(low2,p101) < 0) {
				var ret4 = high2++;
				high2 = high2 | 0;
			}
			high2 = high2 + (haxe__$Int32_Int32_$Impl_$._mul(multiplier.low,digit.high) + haxe__$Int32_Int32_$Impl_$._mul(multiplier.high,digit.low) | 0) | 0;
			var this7 = new haxe__$Int64__$_$_$Int64(high2,low2);
			var b1 = this7;
			var high3 = current.high + b1.high | 0;
			var low3 = current.low + b1.low | 0;
			if(haxe__$Int32_Int32_$Impl_$.ucompare(low3,current.low) < 0) {
				var ret5 = high3++;
				high3 = high3 | 0;
			}
			var this8 = new haxe__$Int64__$_$_$Int64(high3,low3);
			current = this8;
			if(current.high < 0) {
				throw new js__$Boot_HaxeError("NumberFormatError: Overflow");
			}
		}
		var mask2 = 65535;
		var al2 = multiplier.low & mask2;
		var ah2 = multiplier.low >>> 16;
		var bl2 = base.low & mask2;
		var bh2 = base.low >>> 16;
		var p002 = haxe__$Int32_Int32_$Impl_$._mul(al2,bl2);
		var p102 = haxe__$Int32_Int32_$Impl_$._mul(ah2,bl2);
		var p012 = haxe__$Int32_Int32_$Impl_$._mul(al2,bh2);
		var p112 = haxe__$Int32_Int32_$Impl_$._mul(ah2,bh2);
		var low4 = p002;
		var high4 = (p112 + (p012 >>> 16) | 0) + (p102 >>> 16) | 0;
		p012 = p012 << 16;
		low4 = low4 + p012 | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low4,p012) < 0) {
			var ret6 = high4++;
			high4 = high4 | 0;
		}
		p102 = p102 << 16;
		low4 = low4 + p102 | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low4,p102) < 0) {
			var ret7 = high4++;
			high4 = high4 | 0;
		}
		high4 = high4 + (haxe__$Int32_Int32_$Impl_$._mul(multiplier.low,base.high) + haxe__$Int32_Int32_$Impl_$._mul(multiplier.high,base.low) | 0) | 0;
		var this9 = new haxe__$Int64__$_$_$Int64(high4,low4);
		multiplier = this9;
	}
	return current;
};
haxe_Int64Helper.fromFloat = function(f) {
	if(isNaN(f) || !isFinite(f)) {
		throw new js__$Boot_HaxeError("Number is NaN or Infinite");
	}
	var noFractions = f - f % 1;
	if(noFractions > 9007199254740991) {
		throw new js__$Boot_HaxeError("Conversion overflow");
	}
	if(noFractions < -9007199254740991) {
		throw new js__$Boot_HaxeError("Conversion underflow");
	}
	var this1 = new haxe__$Int64__$_$_$Int64(0,0);
	var result = this1;
	var neg = noFractions < 0;
	var rest = neg ? -noFractions : noFractions;
	var i = 0;
	while(rest >= 1) {
		var curr = rest % 2;
		rest /= 2;
		if(curr >= 1) {
			var this2 = new haxe__$Int64__$_$_$Int64(0,1);
			var a = this2;
			var b = i;
			b &= 63;
			var b1;
			if(b == 0) {
				var this3 = new haxe__$Int64__$_$_$Int64(a.high,a.low);
				b1 = this3;
			} else if(b < 32) {
				var this4 = new haxe__$Int64__$_$_$Int64(a.high << b | a.low >>> 32 - b,a.low << b);
				b1 = this4;
			} else {
				var this5 = new haxe__$Int64__$_$_$Int64(a.low << b - 32,0);
				b1 = this5;
			}
			var high = result.high + b1.high | 0;
			var low = result.low + b1.low | 0;
			if(haxe__$Int32_Int32_$Impl_$.ucompare(low,result.low) < 0) {
				var ret = high++;
				high = high | 0;
			}
			var this6 = new haxe__$Int64__$_$_$Int64(high,low);
			result = this6;
		}
		++i;
	}
	if(neg) {
		var high1 = ~result.high;
		var low1 = -result.low;
		if(low1 == 0) {
			var ret1 = high1++;
			high1 = high1 | 0;
		}
		var this7 = new haxe__$Int64__$_$_$Int64(high1,low1);
		result = this7;
	}
	return result;
};
var haxe_io_FPHelper = function() { };
$hxClasses["haxe.io.FPHelper"] = haxe_io_FPHelper;
haxe_io_FPHelper.__name__ = ["haxe","io","FPHelper"];
haxe_io_FPHelper.i32ToFloat = function(i) {
	var sign = 1 - (i >>> 31 << 1);
	var exp = i >>> 23 & 255;
	var sig = i & 8388607;
	if(sig == 0 && exp == 0) {
		return 0.0;
	}
	return sign * (1 + Math.pow(2,-23) * sig) * Math.pow(2,exp - 127);
};
haxe_io_FPHelper.floatToI32 = function(f) {
	if(f == 0) {
		return 0;
	}
	var af = f < 0 ? -f : f;
	var exp = Math.floor(Math.log(af) / 0.6931471805599453);
	if(exp < -127) {
		exp = -127;
	} else if(exp > 128) {
		exp = 128;
	}
	var sig = Math.round((af / Math.pow(2,exp) - 1) * 8388608);
	if(sig == 8388608 && exp < 128) {
		sig = 0;
		++exp;
	}
	return (f < 0 ? -2147483648 : 0) | exp + 127 << 23 | sig;
};
haxe_io_FPHelper.i64ToDouble = function(low,high) {
	var sign = 1 - (high >>> 31 << 1);
	var exp = (high >> 20 & 2047) - 1023;
	var sig = (high & 1048575) * 4294967296. + (low >>> 31) * 2147483648. + (low & 2147483647);
	if(sig == 0 && exp == -1023) {
		return 0.0;
	}
	return sign * (1.0 + Math.pow(2,-52) * sig) * Math.pow(2,exp);
};
haxe_io_FPHelper.doubleToI64 = function(v) {
	var i64 = haxe_io_FPHelper.i64tmp;
	if(v == 0) {
		i64.low = 0;
		i64.high = 0;
	} else if(!isFinite(v)) {
		if(v > 0) {
			i64.low = 0;
			i64.high = 2146435072;
		} else {
			i64.low = 0;
			i64.high = -1048576;
		}
	} else {
		var av = v < 0 ? -v : v;
		var exp = Math.floor(Math.log(av) / 0.6931471805599453);
		var sig = Math.round((av / Math.pow(2,exp) - 1) * 4503599627370496.);
		var sig_l = sig | 0;
		var sig_h = sig / 4294967296.0 | 0;
		i64.low = sig_l;
		i64.high = (v < 0 ? -2147483648 : 0) | exp + 1023 << 20 | sig_h;
	}
	return i64;
};
var js__$Boot_HaxeError = function(val) {
	Error.call(this);
	this.val = val;
	this.message = String(val);
	if(Error.captureStackTrace) {
		Error.captureStackTrace(this,js__$Boot_HaxeError);
	}
};
$hxClasses["js._Boot.HaxeError"] = js__$Boot_HaxeError;
js__$Boot_HaxeError.__name__ = ["js","_Boot","HaxeError"];
js__$Boot_HaxeError.wrap = function(val) {
	if((val instanceof Error)) {
		return val;
	} else {
		return new js__$Boot_HaxeError(val);
	}
};
js__$Boot_HaxeError.__super__ = Error;
js__$Boot_HaxeError.prototype = $extend(Error.prototype,{
	val: null
	,__class__: js__$Boot_HaxeError
});
var js_Boot = function() { };
$hxClasses["js.Boot"] = js_Boot;
js_Boot.__name__ = ["js","Boot"];
js_Boot.__unhtml = function(s) {
	return s.split("&").join("&amp;").split("<").join("&lt;").split(">").join("&gt;");
};
js_Boot.__trace = function(v,i) {
	var msg = i != null ? i.fileName + ":" + i.lineNumber + ": " : "";
	msg += js_Boot.__string_rec(v,"");
	if(i != null && i.customParams != null) {
		var _g = 0;
		var _g1 = i.customParams;
		while(_g < _g1.length) {
			var v1 = _g1[_g];
			++_g;
			msg += "," + js_Boot.__string_rec(v1,"");
		}
	}
	var d;
	var tmp;
	if(typeof(document) != "undefined") {
		d = document.getElementById("haxe:trace");
		tmp = d != null;
	} else {
		tmp = false;
	}
	if(tmp) {
		d.innerHTML += js_Boot.__unhtml(msg) + "<br/>";
	} else if(typeof console != "undefined" && console.log != null) {
		console.log(msg);
	}
};
js_Boot.__clear_trace = function() {
	var d = document.getElementById("haxe:trace");
	if(d != null) {
		d.innerHTML = "";
	}
};
js_Boot.isClass = function(o) {
	return o.__name__;
};
js_Boot.isEnum = function(e) {
	return e.__ename__;
};
js_Boot.getClass = function(o) {
	if((o instanceof Array) && o.__enum__ == null) {
		return Array;
	} else {
		var cl = o.__class__;
		if(cl != null) {
			return cl;
		}
		var name = js_Boot.__nativeClassName(o);
		if(name != null) {
			return js_Boot.__resolveNativeClass(name);
		}
		return null;
	}
};
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(o instanceof Array) {
			if(o.__enum__) {
				if(o.length == 2) {
					return o[0];
				}
				var str = o[0] + "(";
				s += "\t";
				var _g1 = 2;
				var _g = o.length;
				while(_g1 < _g) {
					var i = _g1++;
					if(i != 2) {
						str += "," + js_Boot.__string_rec(o[i],s);
					} else {
						str += js_Boot.__string_rec(o[i],s);
					}
				}
				return str + ")";
			}
			var l = o.length;
			var i1;
			var str1 = "[";
			s += "\t";
			var _g11 = 0;
			var _g2 = l;
			while(_g11 < _g2) {
				var i2 = _g11++;
				str1 += (i2 > 0 ? "," : "") + js_Boot.__string_rec(o[i2],s);
			}
			str1 += "]";
			return str1;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( e ) {
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var k = null;
		var str2 = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		for( var k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str2.length != 2) {
			str2 += ", \n";
		}
		str2 += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str2 += "\n" + s + "}";
		return str2;
	case "string":
		return o;
	default:
		return String(o);
	}
};
js_Boot.__interfLoop = function(cc,cl) {
	if(cc == null) {
		return false;
	}
	if(cc == cl) {
		return true;
	}
	var intf = cc.__interfaces__;
	if(intf != null) {
		var _g1 = 0;
		var _g = intf.length;
		while(_g1 < _g) {
			var i = _g1++;
			var i1 = intf[i];
			if(i1 == cl || js_Boot.__interfLoop(i1,cl)) {
				return true;
			}
		}
	}
	return js_Boot.__interfLoop(cc.__super__,cl);
};
js_Boot.__instanceof = function(o,cl) {
	if(cl == null) {
		return false;
	}
	switch(cl) {
	case Array:
		if((o instanceof Array)) {
			return o.__enum__ == null;
		} else {
			return false;
		}
		break;
	case Bool:
		return typeof(o) == "boolean";
	case Dynamic:
		return true;
	case Float:
		return typeof(o) == "number";
	case Int:
		if(typeof(o) == "number") {
			return (o|0) === o;
		} else {
			return false;
		}
		break;
	case String:
		return typeof(o) == "string";
	default:
		if(o != null) {
			if(typeof(cl) == "function") {
				if(o instanceof cl) {
					return true;
				}
				if(js_Boot.__interfLoop(js_Boot.getClass(o),cl)) {
					return true;
				}
			} else if(typeof(cl) == "object" && js_Boot.__isNativeObj(cl)) {
				if(o instanceof cl) {
					return true;
				}
			}
		} else {
			return false;
		}
		if(cl == Class ? o.__name__ != null : false) {
			return true;
		}
		if(cl == Enum ? o.__ename__ != null : false) {
			return true;
		}
		return o.__enum__ == cl;
	}
};
js_Boot.__cast = function(o,t) {
	if(js_Boot.__instanceof(o,t)) {
		return o;
	} else {
		throw new js__$Boot_HaxeError("Cannot cast " + Std.string(o) + " to " + Std.string(t));
	}
};
js_Boot.__nativeClassName = function(o) {
	var name = js_Boot.__toStr.call(o).slice(8,-1);
	if(name == "Object" || name == "Function" || name == "Math" || name == "JSON") {
		return null;
	}
	return name;
};
js_Boot.__isNativeObj = function(o) {
	return js_Boot.__nativeClassName(o) != null;
};
js_Boot.__resolveNativeClass = function(name) {
	return $global[name];
};
var js_Browser = function() { };
$hxClasses["js.Browser"] = js_Browser;
js_Browser.__name__ = ["js","Browser"];
js_Browser.__properties__ = {get_supported:"get_supported",get_console:"get_console",get_navigator:"get_navigator",get_location:"get_location",get_document:"get_document",get_window:"get_window"};
js_Browser.get_window = function() {
	return window;
};
js_Browser.get_document = function() {
	return window.document;
};
js_Browser.get_location = function() {
	return window.location;
};
js_Browser.get_navigator = function() {
	return window.navigator;
};
js_Browser.get_console = function() {
	return window.console;
};
js_Browser.get_supported = function() {
	return typeof(window) != "undefined";
};
js_Browser.getLocalStorage = function() {
	try {
		var s = window.localStorage;
		s.getItem("");
		return s;
	} catch( e ) {
		return null;
	}
};
js_Browser.getSessionStorage = function() {
	try {
		var s = window.sessionStorage;
		s.getItem("");
		return s;
	} catch( e ) {
		return null;
	}
};
js_Browser.createXMLHttpRequest = function() {
	if(typeof XMLHttpRequest != "undefined") {
		return new XMLHttpRequest();
	}
	if(typeof ActiveXObject != "undefined") {
		return new ActiveXObject("Microsoft.XMLHTTP");
	}
	throw new js__$Boot_HaxeError("Unable to create XMLHttpRequest object.");
};
js_Browser.alert = function(v) {
	window.alert(js_Boot.__string_rec(v,""));
};
var js_Lib = function() { };
$hxClasses["js.Lib"] = js_Lib;
js_Lib.__name__ = ["js","Lib"];
js_Lib.__properties__ = {get_undefined:"get_undefined"};
js_Lib.debug = function() {
	debugger;
};
js_Lib.alert = function(v) {
	alert(js_Boot.__string_rec(v,""));
};
js_Lib["eval"] = function(code) {
	return eval(code);
};
js_Lib.get_undefined = function() {
	return undefined;
};
var js_html__$CanvasElement_CanvasUtil = function() { };
$hxClasses["js.html._CanvasElement.CanvasUtil"] = js_html__$CanvasElement_CanvasUtil;
js_html__$CanvasElement_CanvasUtil.__name__ = ["js","html","_CanvasElement","CanvasUtil"];
js_html__$CanvasElement_CanvasUtil.getContextWebGL = function(canvas,attribs) {
	var _g = 0;
	var _g1 = ["webgl","experimental-webgl"];
	while(_g < _g1.length) {
		var name = _g1[_g];
		++_g;
		var ctx = canvas.getContext(name,attribs);
		if(ctx != null) {
			return ctx;
		}
	}
	return null;
};
var js_html_compat_ArrayBuffer = function(a) {
	if((a instanceof Array) && a.__enum__ == null) {
		this.a = a;
		this.byteLength = a.length;
	} else {
		var len = a;
		this.a = [];
		var _g1 = 0;
		var _g = len;
		while(_g1 < _g) {
			var i = _g1++;
			this.a[i] = 0;
		}
		this.byteLength = len;
	}
};
$hxClasses["js.html.compat.ArrayBuffer"] = js_html_compat_ArrayBuffer;
js_html_compat_ArrayBuffer.__name__ = ["js","html","compat","ArrayBuffer"];
js_html_compat_ArrayBuffer.sliceImpl = function(begin,end) {
	var u = new Uint8Array(this,begin,end == null ? null : end - begin);
	var result = new ArrayBuffer(u.byteLength);
	var resultArray = new Uint8Array(result);
	resultArray.set(u);
	return result;
};
js_html_compat_ArrayBuffer.prototype = {
	byteLength: null
	,a: null
	,slice: function(begin,end) {
		return new js_html_compat_ArrayBuffer(this.a.slice(begin,end));
	}
	,__class__: js_html_compat_ArrayBuffer
};
var js_html_compat_Float32Array = function() { };
$hxClasses["js.html.compat.Float32Array"] = js_html_compat_Float32Array;
js_html_compat_Float32Array.__name__ = ["js","html","compat","Float32Array"];
js_html_compat_Float32Array._new = function(arg1,offset,length) {
	var arr;
	if(typeof(arg1) == "number") {
		arr = [];
		var _g1 = 0;
		var _g = arg1;
		while(_g1 < _g) {
			var i = _g1++;
			arr[i] = 0;
		}
		arr.byteLength = arr.length << 2;
		arr.byteOffset = 0;
		var _g2 = [];
		var _g21 = 0;
		var _g11 = arr.length << 2;
		while(_g21 < _g11) {
			var i1 = _g21++;
			_g2.push(0);
		}
		arr.buffer = new js_html_compat_ArrayBuffer(_g2);
	} else if(js_Boot.__instanceof(arg1,js_html_compat_ArrayBuffer)) {
		var buffer = arg1;
		if(offset == null) {
			offset = 0;
		}
		if(length == null) {
			length = buffer.byteLength - offset >> 2;
		}
		arr = [];
		var _g12 = 0;
		var _g3 = length;
		while(_g12 < _g3) {
			var i2 = _g12++;
			var val = buffer.a[offset++] | buffer.a[offset++] << 8 | buffer.a[offset++] << 16 | buffer.a[offset++] << 24;
			arr.push(haxe_io_FPHelper.i32ToFloat(val));
		}
		arr.byteLength = arr.length << 2;
		arr.byteOffset = offset;
		arr.buffer = buffer;
	} else if((arg1 instanceof Array) && arg1.__enum__ == null) {
		arr = arg1.slice();
		var buffer1 = [];
		var _g4 = 0;
		while(_g4 < arr.length) {
			var f = arr[_g4];
			++_g4;
			var i3 = haxe_io_FPHelper.floatToI32(f);
			buffer1.push(i3 & 255);
			buffer1.push(i3 >> 8 & 255);
			buffer1.push(i3 >> 16 & 255);
			buffer1.push(i3 >>> 24);
		}
		arr.byteLength = arr.length << 2;
		arr.byteOffset = 0;
		arr.buffer = new js_html_compat_ArrayBuffer(buffer1);
	} else {
		throw new js__$Boot_HaxeError("TODO " + Std.string(arg1));
	}
	arr.subarray = js_html_compat_Float32Array._subarray;
	arr.set = js_html_compat_Float32Array._set;
	return arr;
};
js_html_compat_Float32Array._set = function(arg,offset) {
	if(js_Boot.__instanceof(arg.buffer,js_html_compat_ArrayBuffer)) {
		var a = arg;
		if(arg.byteLength + offset > this.byteLength) {
			throw new js__$Boot_HaxeError("set() outside of range");
		}
		var _g1 = 0;
		var _g = arg.byteLength;
		while(_g1 < _g) {
			var i = _g1++;
			this[i + offset] = a[i];
		}
	} else if((arg instanceof Array) && arg.__enum__ == null) {
		var a1 = arg;
		if(a1.length + offset > this.byteLength) {
			throw new js__$Boot_HaxeError("set() outside of range");
		}
		var _g11 = 0;
		var _g2 = a1.length;
		while(_g11 < _g2) {
			var i1 = _g11++;
			this[i1 + offset] = a1[i1];
		}
	} else {
		throw new js__$Boot_HaxeError("TODO");
	}
};
js_html_compat_Float32Array._subarray = function(start,end) {
	var a = js_html_compat_Float32Array._new(this.slice(start,end));
	a.byteOffset = start * 4;
	return a;
};
var js_html_compat_Uint8Array = function() { };
$hxClasses["js.html.compat.Uint8Array"] = js_html_compat_Uint8Array;
js_html_compat_Uint8Array.__name__ = ["js","html","compat","Uint8Array"];
js_html_compat_Uint8Array._new = function(arg1,offset,length) {
	var arr;
	if(typeof(arg1) == "number") {
		arr = [];
		var _g1 = 0;
		var _g = arg1;
		while(_g1 < _g) {
			var i = _g1++;
			arr[i] = 0;
		}
		arr.byteLength = arr.length;
		arr.byteOffset = 0;
		arr.buffer = new js_html_compat_ArrayBuffer(arr);
	} else if(js_Boot.__instanceof(arg1,js_html_compat_ArrayBuffer)) {
		var buffer = arg1;
		if(offset == null) {
			offset = 0;
		}
		if(length == null) {
			length = buffer.byteLength - offset;
		}
		if(offset == 0) {
			arr = buffer.a;
		} else {
			arr = buffer.a.slice(offset,offset + length);
		}
		arr.byteLength = arr.length;
		arr.byteOffset = offset;
		arr.buffer = buffer;
	} else if((arg1 instanceof Array) && arg1.__enum__ == null) {
		arr = arg1.slice();
		arr.byteLength = arr.length;
		arr.byteOffset = 0;
		arr.buffer = new js_html_compat_ArrayBuffer(arr);
	} else {
		throw new js__$Boot_HaxeError("TODO " + Std.string(arg1));
	}
	arr.subarray = js_html_compat_Uint8Array._subarray;
	arr.set = js_html_compat_Uint8Array._set;
	return arr;
};
js_html_compat_Uint8Array._set = function(arg,offset) {
	if(js_Boot.__instanceof(arg.buffer,js_html_compat_ArrayBuffer)) {
		var a = arg;
		if(arg.byteLength + offset > this.byteLength) {
			throw new js__$Boot_HaxeError("set() outside of range");
		}
		var _g1 = 0;
		var _g = arg.byteLength;
		while(_g1 < _g) {
			var i = _g1++;
			this[i + offset] = a[i];
		}
	} else if((arg instanceof Array) && arg.__enum__ == null) {
		var a1 = arg;
		if(a1.length + offset > this.byteLength) {
			throw new js__$Boot_HaxeError("set() outside of range");
		}
		var _g11 = 0;
		var _g2 = a1.length;
		while(_g11 < _g2) {
			var i1 = _g11++;
			this[i1 + offset] = a1[i1];
		}
	} else {
		throw new js__$Boot_HaxeError("TODO");
	}
};
js_html_compat_Uint8Array._subarray = function(start,end) {
	var a = js_html_compat_Uint8Array._new(this.slice(start,end));
	a.byteOffset = start;
	return a;
};
var js_jquery_JqEltsIterator = function(j) {
	this.i = 0;
	this.j = j;
};
$hxClasses["js.jquery.JqEltsIterator"] = js_jquery_JqEltsIterator;
js_jquery_JqEltsIterator.__name__ = ["js","jquery","JqEltsIterator"];
js_jquery_JqEltsIterator.prototype = {
	j: null
	,i: null
	,hasNext: function() {
		return this.i < this.j.length;
	}
	,next: function() {
		return $(this.j[this.i++]);
	}
	,__class__: js_jquery_JqEltsIterator
};
var js_jquery_JqIterator = function(j) {
	this.i = 0;
	this.j = j;
};
$hxClasses["js.jquery.JqIterator"] = js_jquery_JqIterator;
js_jquery_JqIterator.__name__ = ["js","jquery","JqIterator"];
js_jquery_JqIterator.prototype = {
	j: null
	,i: null
	,hasNext: function() {
		return this.i < this.j.length;
	}
	,next: function() {
		return this.j[this.i++];
	}
	,__class__: js_jquery_JqIterator
};
function $iterator(o) { if( o instanceof Array ) return function() { return HxOverrides.iter(o); }; return typeof(o.iterator) == 'function' ? $bind(o,o.iterator) : o.iterator; }
var $_, $fid = 0;
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $fid++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = function(){ return f.method.apply(f.scope, arguments); }; f.scope = o; f.method = m; o.hx__closures__[m.__id__] = f; } return f; }
function $arrayPush(x) { this.push(x); }
$hxClasses["Math"] = Math;
String.prototype.__class__ = $hxClasses["String"] = String;
String.__name__ = ["String"];
$hxClasses["Array"] = Array;
Array.__name__ = ["Array"];
Date.prototype.__class__ = $hxClasses["Date"] = Date;
Date.__name__ = ["Date"];
var Int = $hxClasses["Int"] = { __name__ : ["Int"]};
var Dynamic = $hxClasses["Dynamic"] = { __name__ : ["Dynamic"]};
var Float = $hxClasses["Float"] = Number;
Float.__name__ = ["Float"];
var Bool = $hxClasses["Bool"] = Boolean;
Bool.__ename__ = ["Bool"];
var Class = $hxClasses["Class"] = { __name__ : ["Class"]};
var Enum = { };
var Void = $hxClasses["Void"] = { __ename__ : ["Void"]};
var ArrayBuffer = $global.ArrayBuffer || js_html_compat_ArrayBuffer;
if(ArrayBuffer.prototype.slice == null) {
	ArrayBuffer.prototype.slice = js_html_compat_ArrayBuffer.sliceImpl;
}
var Float32Array = $global.Float32Array || js_html_compat_Float32Array._new;
var Uint8Array = $global.Uint8Array || js_html_compat_Uint8Array._new;
if(typeof($) != "undefined" && $.fn != null) {
	$.fn.elements = function() {
		return new js_jquery_JqEltsIterator(this);
	};
}
if(typeof($) != "undefined" && $.fn != null) {
	$.fn.iterator = function() {
		return new js_jquery_JqIterator(this);
	};
}
StringTools.winMetaCharacters = [32,40,41,37,33,94,34,60,62,38,124,10,13,44,59];
haxe__$Int32_Int32_$Impl_$._mul = Math.imul != null ? Math.imul : function(a,b) {
	return a * (b & 65535) + (a * (b >>> 16) << 16 | 0) | 0;
};
haxe_io_FPHelper.i64tmp = (function($this) {
	var $r;
	var this1 = new haxe__$Int64__$_$_$Int64(0,0);
	$r = this1;
	return $r;
}(this));
haxe_io_FPHelper.LN2 = 0.6931471805599453;
js_Boot.__toStr = ({ }).toString;
js_html_compat_Float32Array.BYTES_PER_ELEMENT = 4;
js_html_compat_Uint8Array.BYTES_PER_ELEMENT = 1;
Test.main();
})(typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this);
