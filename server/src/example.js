// Generated by Haxe 3.4.3
if (process.version < "v4.0.0") console.warn("Module " + (typeof(module) == "undefined" ? "" : module.filename) + " requires node.js version 4.0.0 or higher");
(function ($global) { "use strict";
var $estr = function() { return js_Boot.__string_rec(this,''); };
function $extend(from, fields) {
	function Inherit() {} Inherit.prototype = from; var proto = new Inherit();
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var EReg = function() { };
EReg.__name__ = true;
EReg.prototype = {
	__class__: EReg
};
var HxOverrides = function() { };
HxOverrides.__name__ = true;
HxOverrides.cca = function(s,index) {
	var x = s.charCodeAt(index);
	if(x != x) {
		return undefined;
	}
	return x;
};
HxOverrides.remove = function(a,obj) {
	var i = a.indexOf(obj);
	if(i == -1) {
		return false;
	}
	a.splice(i,1);
	return true;
};
HxOverrides.iter = function(a) {
	return { cur : 0, arr : a, hasNext : function() {
		return this.cur < this.arr.length;
	}, next : function() {
		return this.arr[this.cur++];
	}};
};
var js_npm_mongoose_TModel = require("mongoose").Model;
var js_npm_mongoose_macro_Model = function() { };
js_npm_mongoose_macro_Model.__name__ = true;
js_npm_mongoose_macro_Model.__super__ = js_npm_mongoose_TModel;
js_npm_mongoose_macro_Model.prototype = $extend(js_npm_mongoose_TModel.prototype,{
	__class__: js_npm_mongoose_macro_Model
});
var Stuff = function() { };
Stuff.__name__ = true;
Stuff.get_Schema = function() {
	if(Stuff._schema == null) {
		Stuff._schema = new js_npm_mongoose_Schema({ fileList : { type : [{ fileName : { type : String}, fileType : { type : String}, id : { type : String}}], optional : true}, fileName : { type : String}, isFolder : { type : Boolean}, metainformation : { type : { created : { type : Date}, fileType : { type : String}, owner : { type : String}, permissions : { type : [{ group : { type : String}, permission : { type : String}}]}}}, version : { type : [{ contents : { type : String}, modified : { type : Date}, number : { type : Number}}]}},{ });
		var proto1 = Stuff.prototype;
		var _g = 0;
		var _g1 = Reflect.fields(proto1);
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			var v = proto1[f];
			var _g2 = Type["typeof"](v);
			if(_g2[1] == 5) {
				Stuff._schema.methods[f] = v;
			}
		}
	}
	return Stuff._schema;
};
Stuff.__super__ = js_npm_mongoose_macro_Model;
Stuff.prototype = $extend(js_npm_mongoose_macro_Model.prototype,{
	__class__: Stuff
});
var Account = function() { };
Account.__name__ = true;
Account.get_Schema = function() {
	if(Account._schema == null) {
		Account._schema = new js_npm_mongoose_Schema({ email : { type : String}, password : { type : String}, username : { type : String}},{ });
		var proto1 = Account.prototype;
		var _g = 0;
		var _g1 = Reflect.fields(proto1);
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			var v = proto1[f];
			var _g2 = Type["typeof"](v);
			if(_g2[1] == 5) {
				Account._schema.methods[f] = v;
			}
		}
	}
	return Account._schema;
};
Account.__super__ = js_npm_mongoose_macro_Model;
Account.prototype = $extend(js_npm_mongoose_macro_Model.prototype,{
	__class__: Account
});
var js_npm_mongoose_macro_Manager = function() { };
js_npm_mongoose_macro_Manager.__name__ = true;
js_npm_mongoose_macro_Manager.__super__ = {}
js_npm_mongoose_macro_Manager.prototype = $extend({}.prototype,{
	__class__: js_npm_mongoose_macro_Manager
});
var StuffManager = function() { };
StuffManager.__name__ = true;
StuffManager.build = function(mongoose,name,collectionName,skipInit) {
	var m = mongoose.model(name,Stuff.get_Schema(),collectionName,skipInit);
	var proto = StuffManager.prototype;
	var _g = 0;
	var _g1 = Reflect.fields(proto);
	while(_g < _g1.length) {
		var f = _g1[_g];
		++_g;
		m[f] = proto[f];
	}
	return m;
};
StuffManager.__super__ = js_npm_mongoose_macro_Manager;
StuffManager.prototype = $extend(js_npm_mongoose_macro_Manager.prototype,{
	__class__: StuffManager
});
var AccountManager = function() { };
AccountManager.__name__ = true;
AccountManager.build = function(mongoose,name,collectionName,skipInit) {
	var m = mongoose.model(name,Account.get_Schema(),collectionName,skipInit);
	var proto = AccountManager.prototype;
	var _g = 0;
	var _g1 = Reflect.fields(proto);
	while(_g < _g1.length) {
		var f = _g1[_g];
		++_g;
		m[f] = proto[f];
	}
	return m;
};
AccountManager.__super__ = js_npm_mongoose_macro_Manager;
AccountManager.prototype = $extend(js_npm_mongoose_macro_Manager.prototype,{
	__class__: AccountManager
});
var util_Async = function() { };
util_Async.__name__ = true;
var Main = function() {
	var _gthis = this;
	var app = new js_npm_Express();
	var database = new js_npm_mongoose_Mongoose();
	database.connect("mongodb://localhost/test_mongoose",function(err) {
		console.log("inside callback for connect err is " + err);
	});
	var m = database.model("test",Stuff.get_Schema(),null,null);
	var proto = StuffManager.prototype;
	var _g = 0;
	var _g1 = Reflect.fields(proto);
	while(_g < _g1.length) {
		var f = _g1[_g];
		++_g;
		m[f] = proto[f];
	}
	var stuffMan = m;
	var m1 = database.model("account",Account.get_Schema(),null,null);
	var proto1 = AccountManager.prototype;
	var _g2 = 0;
	var _g11 = Reflect.fields(proto1);
	while(_g2 < _g11.length) {
		var f1 = _g11[_g2];
		++_g2;
		m1[f1] = proto1[f1];
	}
	var accountMan = m1;
	stuffMan.find({ "fileList.id" : "5ab26446b9920407b0b8fab0"},function(err1,stuff) {
		console.log(stuff[0].fileList);
	});
	var mailTransport = js_npm_Nodemailer.createTransport({ service : "Gmail", auth : { user : "web.circuitdiagram@gmail.com", pass : "Webapplication"}});
	app.set("port",3000);
	var tmp = js_node_Path.join(__dirname.substring(0,__dirname.indexOf("server\\src")));
	app["use"](new js_npm_express_Static(tmp));
	var tmp1 = js_npm_express_BodyParser.json();
	app["use"](tmp1);
	var jsonParser = js_npm_express_BodyParser.json();
	console.log(__dirname.substring(0,__dirname.indexOf("server\\src")) + "client\\src");
	app.get("/",function(req,res) {
		res.sendfile(__dirname + "/login.html");
	});
	app.post("/",jsonParser,function(req1,res1) {
		var _req = req1;
		accountMan.find({ "username" : _req.body.username, "password" : _req.body.password},function(err2,account) {
			if(err2 == null) {
				if(account.length != 0) {
					console.log(Std.string(_req.body.username) + " login success");
					res1.send("y");
				} else {
					console.log(Std.string(_req.body.username) + " login fail, wrong password");
					res1.send("n");
				}
			} else {
				console.log("login error:" + err2);
				res1.send("n");
			}
		});
	});
	app.get("/regist",function(req2,res2) {
		res2.sendfile(__dirname + "/regist.html");
	});
	app.post("/regist",jsonParser,function(req3,res3) {
		var _req1 = req3;
		if(_req1.body.username != "") {
			accountMan.find({ "username" : _req1.body.username},function(err0,namedata) {
				if(err0 == null) {
					if(namedata.length == 0) {
						accountMan.find({ "email" : _req1.body.email},function(err11,emaildata) {
							if(err11 == null) {
								if(emaildata.length == 0) {
									var ac = { username : _req1.body.username, password : _req1.body.password, email : _req1.body.email};
									accountMan.create(ac,function(err3,newdata) {
										console.log("creating new account error is: " + err3 + " stuff is " + Std.string(newdata));
										if(err3 == null) {
											var d = { isFolder : true, fileName : _req1.body.username, version : [{ number : 0, contents : "", modified : new Date()}], fileList : [], metainformation : { fileType : "Folder", owner : _req1.body.username, permissions : [{ group : "", permission : "read&write"}], created : new Date()}};
											stuffMan.create(d,function(err6,newfolder) {
												console.log("creating new folder error is: " + err6 + " stuff is " + Std.string(newfolder));
												stuffMan.find({ "fileName" : "", "isFolder" : true},function(err4,root) {
													if(err4 == null) {
														if(root.length != 0) {
															root[0].fileList.push({ fileName : _req1.body.username, id : Std.string(newfolder._id), fileType : "Folder"});
															stuffMan.update({ "_id" : root[0]._id},{ "fileList" : root[0].fileList},function(err5,root1) {
																if(err5 == null) {
																	console.log("new account register: " + Std.string(_req1.body.username));
																	res3.send("t");
																} else {
																	res3.send("fail");
																}
															});
														} else {
															res3.send("fail");
														}
													} else {
														res3.send("fail");
													}
												});
											});
										} else {
											res3.send("fail");
										}
									});
								} else {
									res3.send("email");
								}
							} else {
								console.log("register error: " + err0);
								res3.send("email");
							}
						});
					} else {
						res3.send("username");
					}
				} else {
					console.log("register error: " + err0);
					res3.send("username");
				}
			});
		} else {
			res3.send("fail");
		}
	});
	app.get("/app/users",function(req4,res4,next) {
		var _req2 = req4;
		var username = req4.param("username");
		res4.sendfile(__dirname.substring(0,__dirname.indexOf("server\\src")) + "\\client\\app.html");
	});
	app.post("/app/users",jsonParser,function(req5,res5,next1) {
		var _req3 = req5;
		var d_isFolder = true;
		var d_fileName = "root";
		var d_version = [{ number : 0, contents : JSON.stringify(_req3.body), modified : new Date()}];
		var d_fileList = [];
		var d_metainformation = { fileType : "folder", owner : "test", permissions : [{ group : "a", permission : "read&write"}], created : new Date()};
		stuffMan.find({ _id : "5aab092ca8b48b227462332f"},function(errk,datak) {
			res5.send(datak[0].version[0].contents);
		});
	});
	app.post("/app/users/folder",function(req6,res6,next2) {
		var _req4 = req6;
		console.log(req6.param("new") + req6.param("username") + req6.param("folder") + req6.param("fileName"));
		var stufftemp = stuffMan;
		if(req6.param("new") == "true") {
			var path = req6.param("folder").split("/");
			path.pop();
			_gthis.findFileId(path,stufftemp,function(err7,id) {
				path = req6.param("folder").split("/");
				if(id != null) {
					stufftemp.find({ _id : id},function(err8,stuff1) {
						if(stuff1.length != 0) {
							var flag = true;
							var _g3 = 0;
							var _g12 = stuff1[0].fileList;
							while(_g3 < _g12.length) {
								var i = _g12[_g3];
								++_g3;
								if(path[path.length - 1] == i.fileName) {
									flag = false;
								}
							}
							if(flag == true) {
								var d1 = { isFolder : true, fileName : path[path.length - 1], version : [{ number : 0, contents : "", modified : new Date()}], fileList : [], metainformation : { fileType : "Folder", owner : req6.param("username"), permissions : [{ group : "a", permission : "read&write"}], created : new Date()}};
								stufftemp.create(d1,function(err9,NewData) {
									console.log(Std.string(req6.param("username")) + " create new folder callback err is " + err9 + " stuff is " + Std.string(NewData));
									stufftemp.find({ _id : id},function(err12,Folder) {
										console.log("finding parent folder find error:" + err12);
										Folder[0].fileList.push({ fileName : path[path.length - 1], id : Std.string(NewData._id), fileType : "Folder"});
										stufftemp.update({ "_id" : id},{ "fileList" : Folder[0].fileList},function(err21,id1) {
											console.log(err21);
											res6.send("success");
										});
									});
								});
							} else {
								res6.send("existed");
							}
						} else {
							res6.send("patherror");
						}
					});
				} else if(id == null) {
					res6.send("patherror");
				}
			});
		} else {
			var path1 = req6.param("folder").split("/");
			_gthis.findFileId(path1,stufftemp,function(err10,id2) {
				console.log("test2  err is " + err10);
				console.log("test2  id is " + id2);
				if(id2 != null) {
					stufftemp.find({ _id : id2},function(err13,parentFolder) {
						console.log(err13);
						var fileId = "";
						if(parentFolder.length != 0) {
							var _g4 = 0;
							var _g13 = parentFolder[0].fileList;
							while(_g4 < _g13.length) {
								var i1 = _g13[_g4];
								++_g4;
								if(i1.fileName == req6.param("fileName")) {
									fileId = i1.id;
								}
							}
							if(fileId == "") {
								var d2 = { isFolder : false, fileName : req6.param("fileName"), version : [{ number : 0, contents : _req4.body.circuit, modified : new Date()}], fileList : [], metainformation : { fileType : "Circuit", owner : req6.param("username"), permissions : [{ group : "a", permission : "read&write"}], created : new Date()}};
								stufftemp.create(d2,function(err14,NewData1) {
									console.log("inside callback err is " + err14 + " stuff is " + Std.string(NewData1));
									stufftemp.find({ _id : id2},function(err15,Folder1) {
										console.log(err15);
										Folder1[0].fileList.push({ fileName : req6.param("fileName"), id : Std.string(NewData1._id), fileType : "Circuit"});
										stufftemp.update({ "_id" : id2},{ "fileList" : Folder1[0].fileList},function(err16,updated) {
											console.log(err16);
											res6.send(Std.string(NewData1._id));
										});
									});
								});
							} else {
								stufftemp.find({ _id : fileId},function(err17,stuff2) {
									console.log(err17);
									if(stuff2.length != 0) {
										stuff2[0].version.push({ number : stuff2[0].version.length, contents : _req4.body.circuit, modified : new Date()});
										stufftemp.update({ "_id" : stuff2[0]._id},{ "version" : stuff2[0].version},function(err18,id3) {
											console.log("error is: " + err18 + "data is: " + Std.string(id3));
											res6.send("success");
										});
									} else {
										res6.send("fail");
									}
								});
							}
						} else {
							res6.send("fail");
						}
					});
				} else {
					res6.send("fail");
				}
			});
		}
	});
	app.post("/app/users/delete",function(req7,res7,next3) {
		stuffMan.find({ "fileList.id" : req7.param("id")},function(err19,data) {
			if(err19 == null) {
				if(data.length != 0) {
					var _g5 = 0;
					var _g14 = data[0].fileList;
					while(_g5 < _g14.length) {
						var i2 = _g14[_g5];
						++_g5;
						if(i2.id == req7.param("id")) {
							HxOverrides.remove(data[0].fileList,i2);
						}
					}
					stuffMan.update({ _id : data[0]._id},{ "fileList" : data[0].fileList},function(err110,updatedata) {
						if(err110 == null) {
							res7.send("success");
						} else {
							res7.send("fail");
						}
					});
				} else {
					res7.send("fail");
				}
			} else {
				res7.send("fail");
			}
		});
	});
	app.post("/app/users/download",function(req8,res8,next4) {
		var tmp2 = req8.param("id");
		stuffMan.find({ _id : tmp2},function(err22,data1) {
			if(err22 == null) {
				if(data1.length != 0) {
					var data11 = data1[0].version;
					var tmp3 = req8.param("version");
					res8.send(data11[tmp3].contents);
				} else {
					res8.send("fail");
				}
			} else {
				res8.send("fail");
			}
		});
	});
	app.post("/app/users/downloadSub",function(req9,res9,next5) {
		var tmp4 = req9.param("id");
		stuffMan.find({ _id : tmp4},function(err23,data12) {
			if(err23 == null) {
				if(data12.length != 0) {
					res9.send(data12[0].version[data12[0].version.length - 1].contents);
				} else {
					res9.send("fail");
				}
			} else {
				res9.send("fail");
			}
		});
	});
	app.post("/app/users/showfolder",function(req10,res10,next6) {
		var path2 = req10.param("folder").split("/");
		_gthis.findFileId(path2,stuffMan,function(err20,FolderId) {
			if(err20 != null) {
				console.log(err20);
				res10.send("fail");
			} else if(FolderId != null) {
				stuffMan.find({ _id : FolderId},function(err111,data2) {
					if(err20 != null) {
						console.log(err20);
						res10.send("fail");
					}
					if(data2.length != 0) {
						var tmp5 = JSON.stringify(data2[0].fileList);
						res10.send(tmp5);
					} else {
						res10.send("fail");
					}
				});
			} else {
				res10.send("fail");
			}
		});
	});
	app.post("/app/users/showversion",function(req11,res11,next7) {
		var id4 = req11.param("id");
		stuffMan.find({ _id : id4},function(err24,data3) {
			if(err24 == null) {
				if(data3.length != 0) {
					res11.send(Std.string(data3[0].version.length));
				} else {
					res11.send("fail");
				}
			} else {
				res11.send("fail");
			}
		});
	});
	app.get("/forgot",function(req12,res12) {
		res12.sendfile(__dirname + "/forgot.html");
	});
	app.post("/forgot/users",jsonParser,function(req13,res13,next8) {
		var _req5 = req13;
		var username1 = req13.param("username");
		accountMan.find({ "username" : username1},function(err25,account1) {
			if(err25 == null) {
				if(account1.length != 0) {
					var options = { from : "web.circuitdiagram@hotmail.com", to : account1[0].email, subject : "From web application", text : "From web application", html : "<h1>Hello, your password is:  </h1>" + "<h1 style=\"color:red\">" + account1[0].password + "</h1>", attachments : []};
					mailTransport.sendMail(options,function(err26,msg) {
						if(err26) {
							console.log(err26);
						} else {
							console.log("email sent to user: " + Std.string(username1));
						}
					});
					res13.send("y");
				} else {
					res13.send("n");
				}
			} else {
				res13.send("n");
			}
		});
	});
	app.get("/changepassword",function(req14,res14) {
		res14.sendfile(__dirname + "/changepassword.html");
	});
	app.post("/initial",function(req15,res15) {
		stuffMan.find({ "fileName" : "", "isFolder" : true},function(errpath,rootModel) {
			if(errpath != null) {
				console.log(errpath);
			} else if(rootModel.length == 0) {
				var d3 = { isFolder : true, fileName : "", version : [{ number : 0, contents : "", modified : new Date()}], fileList : [], metainformation : { fileType : "folder", owner : "", permissions : [{ group : "", permission : "read&write"}], created : new Date()}};
				stuffMan.create(d3,function(err27,stuff3) {
					console.log("inside callback err is " + err27 + " stuff is " + Std.string(stuff3));
				});
			}
		});
	});
	app.post("/changepassword/users",jsonParser,function(req16,res16,next9) {
		var _req6 = req16;
		var username2 = req16.param("username");
		accountMan.find({ "username" : username2, "password" : _req6.body.oldp},function(err28,account2) {
			if(err28 == null) {
				if(account2.length != 0) {
					accountMan.update({ "username" : username2, "password" : _req6.body.oldp},{ "password" : _req6.body.newp},function(err112,updated1) {
						if(err112 == null) {
							res16.send("y");
						} else {
							res16.send("n");
						}
					});
				} else {
					res16.send("n");
				}
			} else {
				res16.send("n");
			}
		});
	});
	app["use"](function(req17,res17,next10) {
		res17.status(404).send("404");
	});
	var tmp6 = app.get("port");
	app.listen(tmp6,function() {
		console.log("Express server listening on port " + Std.string(app.get("port")));
	});
};
Main.__name__ = true;
Main.__interfaces__ = [util_Async];
Main.main = function() {
	var main = new Main();
};
Main.prototype = {
	findFileId: function(path,manager,callback) {
		var _gthis = this;
		if(path[0] == "root") {
			manager.find({ "fileName" : "", "isFolder" : true},function(err,rootModel) {
				if(err != null) {
					console.log(err);
					callback(err,null);
				} else if(rootModel.length != 0) {
					var idOfFolder = Std.string(rootModel[0]._id);
					console.log("id of root is " + idOfFolder);
					_gthis.findFileIdHelper(1,idOfFolder,path,manager,callback);
				} else {
					callback(err,null);
				}
			});
		} else {
			callback(null,null);
		}
	}
	,findFileIdHelper: function(i,idOfCurrent,path,manager,callback) {
		var _gthis = this;
		if(i < path.length) {
			manager.find({ "_id" : idOfCurrent},function(err,results) {
				if(err != null) {
					console.log(err);
					callback(err,null);
				} else if(results.length != 0) {
					var flag = true;
					var _g = 0;
					var _g1 = results[0].fileList;
					while(_g < _g1.length) {
						var t = _g1[_g];
						++_g;
						if(t.fileName == path[i]) {
							idOfCurrent = t.id;
							flag = false;
						}
					}
					if(flag == false) {
						_gthis.findFileIdHelper(i + 1,idOfCurrent,path,manager,callback);
					} else {
						callback(null,null);
					}
				} else {
					callback(null,null);
				}
			});
		} else {
			callback(null,idOfCurrent);
		}
	}
	,__class__: Main
};
Math.__name__ = true;
var Reflect = function() { };
Reflect.__name__ = true;
Reflect.fields = function(o) {
	var a = [];
	if(o != null) {
		var hasOwnProperty = Object.prototype.hasOwnProperty;
		for( var f in o ) {
		if(f != "__id__" && f != "hx__closures__" && hasOwnProperty.call(o,f)) {
			a.push(f);
		}
		}
	}
	return a;
};
var Std = function() { };
Std.__name__ = true;
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
Std.random = function(x) {
	if(x <= 0) {
		return 0;
	} else {
		return Math.floor(Math.random() * x);
	}
};
var ValueType = { __ename__ : true, __constructs__ : ["TNull","TInt","TFloat","TBool","TObject","TFunction","TClass","TEnum","TUnknown"] };
ValueType.TNull = ["TNull",0];
ValueType.TNull.toString = $estr;
ValueType.TNull.__enum__ = ValueType;
ValueType.TInt = ["TInt",1];
ValueType.TInt.toString = $estr;
ValueType.TInt.__enum__ = ValueType;
ValueType.TFloat = ["TFloat",2];
ValueType.TFloat.toString = $estr;
ValueType.TFloat.__enum__ = ValueType;
ValueType.TBool = ["TBool",3];
ValueType.TBool.toString = $estr;
ValueType.TBool.__enum__ = ValueType;
ValueType.TObject = ["TObject",4];
ValueType.TObject.toString = $estr;
ValueType.TObject.__enum__ = ValueType;
ValueType.TFunction = ["TFunction",5];
ValueType.TFunction.toString = $estr;
ValueType.TFunction.__enum__ = ValueType;
ValueType.TClass = function(c) { var $x = ["TClass",6,c]; $x.__enum__ = ValueType; $x.toString = $estr; return $x; };
ValueType.TEnum = function(e) { var $x = ["TEnum",7,e]; $x.__enum__ = ValueType; $x.toString = $estr; return $x; };
ValueType.TUnknown = ["TUnknown",8];
ValueType.TUnknown.toString = $estr;
ValueType.TUnknown.__enum__ = ValueType;
var Type = function() { };
Type.__name__ = true;
Type["typeof"] = function(v) {
	var _g = typeof(v);
	switch(_g) {
	case "boolean":
		return ValueType.TBool;
	case "function":
		if(v.__name__ || v.__ename__) {
			return ValueType.TObject;
		}
		return ValueType.TFunction;
	case "number":
		if(Math.ceil(v) == v % 2147483648.0) {
			return ValueType.TInt;
		}
		return ValueType.TFloat;
	case "object":
		if(v == null) {
			return ValueType.TNull;
		}
		var e = v.__enum__;
		if(e != null) {
			return ValueType.TEnum(e);
		}
		var c = js_Boot.getClass(v);
		if(c != null) {
			return ValueType.TClass(c);
		}
		return ValueType.TObject;
	case "string":
		return ValueType.TClass(String);
	case "undefined":
		return ValueType.TNull;
	default:
		return ValueType.TUnknown;
	}
};
var com_mun_assertions_Assert = function() { };
com_mun_assertions_Assert.__name__ = true;
var com_mun_assertions_AssertionFailure = function(message,parts) {
	this.message = message;
	this.parts = parts;
};
com_mun_assertions_AssertionFailure.__name__ = true;
com_mun_assertions_AssertionFailure.prototype = {
	toString: function() {
		var buf_b = "";
		buf_b += Std.string("Assertion failure: " + this.message + ", where");
		var _g = 0;
		var _g1 = this.parts;
		while(_g < _g1.length) {
			var part = _g1[_g];
			++_g;
			buf_b += Std.string("\n\t" + part.expr + ": " + Std.string(part.value));
		}
		return buf_b;
	}
	,__class__: com_mun_assertions_AssertionFailure
};
var com_mun_controller_command_Command = function() { };
com_mun_controller_command_Command.__name__ = true;
com_mun_controller_command_Command.prototype = {
	__class__: com_mun_controller_command_Command
};
var com_mun_controller_command_CommandManager = function() {
	this.recordFlag = false;
	this.redoStack = [];
	this.undoStack = [];
	this.linkAndComponentAndEndpointAndPortArray = new com_mun_type_LinkAndComponentAndEndpointAndPortArray();
};
com_mun_controller_command_CommandManager.__name__ = true;
com_mun_controller_command_CommandManager.prototype = {
	execute: function(command) {
		command.execute();
		if(!this.recordFlag) {
			this.undoStack.push(command);
		}
		this.recordFlag = true;
		if(this.redoStack.length != 0) {
			var _g1 = 0;
			var _g = this.redoStack.length;
			while(_g1 < _g) {
				var i = _g1++;
				this.redoStack.pop();
			}
		}
	}
	,undo: function() {
		if(this.undoStack.length == 0) {
			return this.linkAndComponentAndEndpointAndPortArray;
		}
		var command = this.undoStack.pop();
		this.linkAndComponentAndEndpointAndPortArray = command.undo();
		this.redoStack.push(command);
		return this.linkAndComponentAndEndpointAndPortArray;
	}
	,redo: function() {
		if(this.redoStack.length == 0) {
			return this.linkAndComponentAndEndpointAndPortArray;
		}
		var command = this.redoStack.pop();
		this.linkAndComponentAndEndpointAndPortArray = command.redo();
		this.undoStack.push(command);
		return this.linkAndComponentAndEndpointAndPortArray;
	}
	,popUndoStack: function() {
		this.undoStack.pop();
	}
	,popRedoStack: function() {
		this.redoStack.pop();
	}
	,recordFlagRest: function() {
		this.recordFlag = false;
	}
	,recordFlagSetTrue: function() {
		this.recordFlag = true;
	}
	,getUndoStackSize: function() {
		return this.undoStack.length;
	}
	,getRedoStackSize: function() {
		return this.redoStack.length;
	}
	,__class__: com_mun_controller_command_CommandManager
};
var com_mun_controller_command_Stack = function() {
	this.linkArray = [];
	this.componentArray = [];
};
com_mun_controller_command_Stack.__name__ = true;
com_mun_controller_command_Stack.prototype = {
	getLinkArray: function() {
		return this.linkArray;
	}
	,getComponentArray: function() {
		return this.componentArray;
	}
	,pushLink: function(link) {
		this.linkArray.push(link);
	}
	,pushComponent: function(component) {
		this.componentArray.push(component);
	}
	,clearStack: function() {
		this.linkArray = [];
		this.componentArray = [];
	}
	,isStackEmpty: function() {
		if(this.linkArray.length == 0 && this.componentArray.length == 0) {
			return true;
		} else {
			return false;
		}
	}
	,__class__: com_mun_controller_command_Stack
};
var com_mun_global_Constant = function() {
};
com_mun_global_Constant.__name__ = true;
com_mun_global_Constant.prototype = {
	__class__: com_mun_global_Constant
};
var com_mun_model_attribute_AttrValue = function() { };
com_mun_model_attribute_AttrValue.__name__ = true;
com_mun_model_attribute_AttrValue.prototype = {
	__class__: com_mun_model_attribute_AttrValue
};
var com_mun_model_attribute_Attribute = function() { };
com_mun_model_attribute_Attribute.__name__ = true;
com_mun_model_attribute_Attribute.prototype = {
	__class__: com_mun_model_attribute_Attribute
};
var com_mun_model_attribute_Pair = function() { };
com_mun_model_attribute_Pair.__name__ = true;
com_mun_model_attribute_Pair.prototype = {
	__class__: com_mun_model_attribute_Pair
};
var com_mun_model_attribute_DelayPair = function(da,dv) {
	this.delayAttr = da;
	this.delayValue = js_Boot.__cast(dv , com_mun_model_attribute_IntValue);
};
com_mun_model_attribute_DelayPair.__name__ = true;
com_mun_model_attribute_DelayPair.__interfaces__ = [com_mun_model_attribute_Pair];
com_mun_model_attribute_DelayPair.prototype = {
	getAttr: function() {
		return this.delayAttr;
	}
	,getAttrValue: function() {
		return this.delayValue;
	}
	,canupdate: function(c,n) {
		if(!js_Boot.__instanceof(n,com_mun_model_attribute_IntValue)) {
			return false;
		}
		if(n.getvalue() < 0 || n.getvalue() == null) {
			return false;
		} else {
			return true;
		}
	}
	,update: function(c,n) {
		if(this.canupdate(c,n) == true) {
			this.delayValue = js_Boot.__cast(n , com_mun_model_attribute_IntValue);
			return true;
		}
		return false;
	}
	,__class__: com_mun_model_attribute_DelayPair
};
var com_mun_model_attribute_IntAttr = function(s) {
	this.defaultdelay = new com_mun_model_attribute_IntValue(0);
	this.name = "delay";
	this.name = s;
	this.attrType = com_mun_model_enumeration_AttrType.INT;
};
com_mun_model_attribute_IntAttr.__name__ = true;
com_mun_model_attribute_IntAttr.__interfaces__ = [com_mun_model_attribute_Attribute];
com_mun_model_attribute_IntAttr.prototype = {
	getName: function() {
		return this.name;
	}
	,getdefaultvalue: function() {
		return this.defaultdelay;
	}
	,getAttrType: function() {
		return this.attrType;
	}
	,__class__: com_mun_model_attribute_IntAttr
};
var com_mun_model_attribute_IntValue = function(d) {
	this.delay = d;
	this.attrType = com_mun_model_enumeration_AttrType.INT;
};
com_mun_model_attribute_IntValue.__name__ = true;
com_mun_model_attribute_IntValue.__interfaces__ = [com_mun_model_attribute_AttrValue];
com_mun_model_attribute_IntValue.prototype = {
	getvalue: function() {
		return this.delay;
	}
	,getType: function() {
		return this.attrType;
	}
	,__class__: com_mun_model_attribute_IntValue
};
var com_mun_model_attribute_NamePair = function(na,nv) {
	this.nameAttr = na;
	this.nameValue = js_Boot.__cast(nv , com_mun_model_attribute_StringValue);
};
com_mun_model_attribute_NamePair.__name__ = true;
com_mun_model_attribute_NamePair.__interfaces__ = [com_mun_model_attribute_Pair];
com_mun_model_attribute_NamePair.prototype = {
	getAttr: function() {
		return this.nameAttr;
	}
	,getAttrValue: function() {
		return this.nameValue;
	}
	,canupdate: function(c,n) {
		return true;
	}
	,update: function(c,n) {
		if(this.canupdate(c,n) == true) {
			this.nameValue = js_Boot.__cast(n , com_mun_model_attribute_StringValue);
			return true;
		}
		return false;
	}
	,__class__: com_mun_model_attribute_NamePair
};
var com_mun_model_attribute_OrientationAttr = function() {
	this.name = "orientation";
	this.attrType = com_mun_model_enumeration_AttrType.Orientation;
	this.defaultOrientation = new com_mun_model_attribute_OrientationValue(com_mun_model_enumeration_ORIENTATION.EAST);
};
com_mun_model_attribute_OrientationAttr.__name__ = true;
com_mun_model_attribute_OrientationAttr.__interfaces__ = [com_mun_model_attribute_Attribute];
com_mun_model_attribute_OrientationAttr.prototype = {
	getName: function() {
		return this.name;
	}
	,getdefaultvalue: function() {
		return this.defaultOrientation;
	}
	,getAttrType: function() {
		return this.attrType;
	}
	,__class__: com_mun_model_attribute_OrientationAttr
};
var com_mun_model_attribute_OrientationPair = function(na,nv) {
	this.orientationAttr = na;
	this.orientationValue = js_Boot.__cast(nv , com_mun_model_attribute_OrientationValue);
};
com_mun_model_attribute_OrientationPair.__name__ = true;
com_mun_model_attribute_OrientationPair.__interfaces__ = [com_mun_model_attribute_Pair];
com_mun_model_attribute_OrientationPair.prototype = {
	getAttr: function() {
		return this.orientationAttr;
	}
	,getAttrValue: function() {
		return this.orientationValue;
	}
	,canupdate: function(c,n) {
		if(!js_Boot.__instanceof(n,com_mun_model_attribute_OrientationValue)) {
			return false;
		}
		return true;
	}
	,update: function(c,n) {
		if(this.canupdate(c,n) == true) {
			this.orientationValue = js_Boot.__cast(n , com_mun_model_attribute_OrientationValue);
			return true;
		}
		return false;
	}
	,__class__: com_mun_model_attribute_OrientationPair
};
var com_mun_model_attribute_OrientationValue = function(or) {
	this.orientation = or;
	this.attrType = com_mun_model_enumeration_AttrType.Orientation;
};
com_mun_model_attribute_OrientationValue.__name__ = true;
com_mun_model_attribute_OrientationValue.__interfaces__ = [com_mun_model_attribute_AttrValue];
com_mun_model_attribute_OrientationValue.prototype = {
	getvalue: function() {
		return this.orientation;
	}
	,getType: function() {
		return this.attrType;
	}
	,__class__: com_mun_model_attribute_OrientationValue
};
var com_mun_model_attribute_StringAttr = function(s) {
	this.defaultname = new com_mun_model_attribute_StringValue("");
	this.name = "name";
	this.name = s;
	this.attrType = com_mun_model_enumeration_AttrType.STRING;
};
com_mun_model_attribute_StringAttr.__name__ = true;
com_mun_model_attribute_StringAttr.__interfaces__ = [com_mun_model_attribute_Attribute];
com_mun_model_attribute_StringAttr.prototype = {
	getName: function() {
		return this.name;
	}
	,getdefaultvalue: function() {
		return this.defaultname;
	}
	,getAttrType: function() {
		return this.attrType;
	}
	,__class__: com_mun_model_attribute_StringAttr
};
var com_mun_model_attribute_StringValue = function(s) {
	this.name = s;
};
com_mun_model_attribute_StringValue.__name__ = true;
com_mun_model_attribute_StringValue.__interfaces__ = [com_mun_model_attribute_AttrValue];
com_mun_model_attribute_StringValue.prototype = {
	getvalue: function() {
		return this.name;
	}
	,getType: function() {
		return com_mun_model_enumeration_AttrType.STRING;
	}
	,__class__: com_mun_model_attribute_StringValue
};
var com_mun_model_observe_Observer = function() {
};
com_mun_model_observe_Observer.__name__ = true;
com_mun_model_observe_Observer.prototype = {
	update: function(c,data) {
	}
	,__class__: com_mun_model_observe_Observer
};
var com_mun_model_component_CircuitDiagramI = function() { };
com_mun_model_component_CircuitDiagramI.__name__ = true;
com_mun_model_component_CircuitDiagramI.prototype = {
	__class__: com_mun_model_component_CircuitDiagramI
};
var com_mun_model_component_CircuitDiagram = function() {
	this.linkArrayReverseFlag = false;
	this.componentArrayReverseFlag = false;
	this.linkArray = [];
	this.componentArray = [];
	com_mun_model_observe_Observer.call(this);
	this.copyStack = new com_mun_controller_command_Stack();
	this.componentAndLinkCenter = new com_mun_type_Coordinate(0,0);
	this.margin = 50;
};
com_mun_model_component_CircuitDiagram.__name__ = true;
com_mun_model_component_CircuitDiagram.__interfaces__ = [com_mun_model_component_CircuitDiagramI];
com_mun_model_component_CircuitDiagram.__super__ = com_mun_model_observe_Observer;
com_mun_model_component_CircuitDiagram.prototype = $extend(com_mun_model_observe_Observer.prototype,{
	computeDiagramSize: function() {
		this.xMin = 99999999;
		this.yMin = 99999999;
		this.xMax = 0;
		this.yMax = 0;
		var _g = 0;
		var _g1 = this.componentArray;
		while(_g < _g1.length) {
			var i = _g1[_g];
			++_g;
			if(i.get_xPosition() - i.get_width() / 2 < this.xMin) {
				this.xMin = i.get_xPosition() - i.get_width() / 2;
			}
			if(i.get_xPosition() + i.get_width() / 2 > this.xMax) {
				this.xMax = i.get_xPosition() + i.get_width() / 2;
			}
			if(i.get_yPosition() - i.get_height() / 2 < this.yMin) {
				this.yMin = i.get_yPosition() - i.get_height() / 2;
			}
			if(i.get_yPosition() + i.get_height() / 2 > this.yMax) {
				this.yMax = i.get_yPosition() + i.get_height() / 2;
			}
		}
		var _g2 = 0;
		var _g11 = this.linkArray;
		while(_g2 < _g11.length) {
			var i1 = _g11[_g2];
			++_g2;
			if(i1.get_leftEndpoint().get_xPosition() < this.xMin) {
				this.xMin = i1.get_leftEndpoint().get_xPosition();
			}
			if(i1.get_leftEndpoint().get_xPosition() > this.xMax) {
				this.xMax = i1.get_leftEndpoint().get_xPosition();
			}
			if(i1.get_leftEndpoint().get_yPosition() < this.yMin) {
				this.yMin = i1.get_leftEndpoint().get_yPosition();
			}
			if(i1.get_leftEndpoint().get_yPosition() > this.yMax) {
				this.yMax = i1.get_leftEndpoint().get_yPosition();
			}
			if(i1.get_rightEndpoint().get_xPosition() < this.xMin) {
				this.xMin = i1.get_rightEndpoint().get_xPosition();
			}
			if(i1.get_rightEndpoint().get_xPosition() > this.xMax) {
				this.xMax = i1.get_rightEndpoint().get_xPosition();
			}
			if(i1.get_rightEndpoint().get_yPosition() < this.yMin) {
				this.yMin = i1.get_rightEndpoint().get_yPosition();
			}
			if(i1.get_rightEndpoint().get_yPosition() > this.yMax) {
				this.yMax = i1.get_rightEndpoint().get_yPosition();
			}
		}
		this.componentAndLinkCenter.set_xPosition((this.xMin + this.xMax) / 2);
		this.componentAndLinkCenter.set_yPosition((this.yMin + this.yMax) / 2);
		this.diagramWidth = this.xMax - this.xMin + this.margin;
		this.diagramHeight = this.yMax - this.yMin + this.margin;
		if(this.diagramHeight > this.diagramWidth) {
			this.diagramWidth = this.diagramHeight;
		} else {
			this.diagramHeight = this.diagramWidth;
		}
	}
	,getComponentAndLinkCenterCoordinate: function() {
		return this.componentAndLinkCenter;
	}
	,get_diagramWidth: function() {
		return this.diagramWidth;
	}
	,get_diagramHeight: function() {
		return this.diagramHeight;
	}
	,get_xMin: function() {
		return this.xMin;
	}
	,get_yMin: function() {
		return this.yMin;
	}
	,get_xMax: function() {
		return this.xMax;
	}
	,get_yMax: function() {
		return this.yMax;
	}
	,get_commandManager: function() {
		return this.commandManager;
	}
	,set_commandManager: function(value) {
		this.commandManager = value;
	}
	,get_componentIterator: function() {
		if(this.componentArrayReverseFlag) {
			this.componentArrayReverse();
		}
		return HxOverrides.iter(this.componentArray);
	}
	,get_componentReverseIterator: function() {
		if(!this.componentArrayReverseFlag) {
			this.componentArrayReverse();
		}
		return HxOverrides.iter(this.componentArray);
	}
	,componentArrayReverse: function() {
		this.componentArrayReverseFlag = !this.componentArrayReverseFlag;
		this.componentArray.reverse();
	}
	,get_linkIterator: function() {
		if(this.linkArrayReverseFlag) {
			this.linkArrayReverse();
		}
		return HxOverrides.iter(this.linkArray);
	}
	,get_linkReverseIterator: function() {
		if(!this.linkArrayReverseFlag) {
			this.linkArrayReverse();
		}
		return HxOverrides.iter(this.linkArray);
	}
	,linkArrayReverse: function() {
		this.linkArrayReverseFlag = !this.linkArrayReverseFlag;
		this.linkArray.reverse();
	}
	,get_name: function() {
		return this.name;
	}
	,set_name: function(value) {
		this.name = value;
	}
	,addLink: function(link) {
		this.linkArray.push(link);
	}
	,addComponent: function(component) {
		this.componentArray.push(component);
		component.addObserver(this);
	}
	,removeLink: function(link) {
		HxOverrides.remove(this.linkArray,link);
	}
	,removeComponent: function(component) {
		HxOverrides.remove(this.componentArray,component);
	}
	,getCopyStack: function() {
		return this.copyStack;
	}
	,setNewOirentation: function(component,newOrientation) {
		var _g1 = 0;
		var _g = this.componentArray.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(component == this.componentArray[i]) {
				this.componentArray[i].set_orientation(newOrientation);
				this.componentArray[i].updateMoveComponentPortPosition(this.componentArray[i].get_xPosition(),this.componentArray[i].get_yPosition());
				this.linkArraySelfUpdate();
				break;
			}
		}
	}
	,deleteLink: function(link) {
		HxOverrides.remove(this.linkArray,link);
	}
	,deleteComponent: function(component) {
		HxOverrides.remove(this.componentArray,component);
		var i = component.get_inportIterator();
		while(i.hasNext()) {
			var i1 = i.next();
			var _g1 = 0;
			var _g = this.linkArray.length;
			while(_g1 < _g) {
				var j = _g1++;
				if(i1 == this.linkArray[j].get_leftEndpoint().get_port()) {
					this.linkArray[j].get_leftEndpoint().set_port(null);
				}
				if(i1 == this.linkArray[j].get_rightEndpoint().get_port()) {
					this.linkArray[j].get_rightEndpoint().set_port(null);
				}
			}
		}
		var i2 = component.get_outportIterator();
		while(i2.hasNext()) {
			var i3 = i2.next();
			var _g11 = 0;
			var _g2 = this.linkArray.length;
			while(_g11 < _g2) {
				var j1 = _g11++;
				if(i3 == this.linkArray[j1].get_leftEndpoint().get_port()) {
					this.linkArray[j1].get_leftEndpoint().set_port(null);
				}
				if(i3 == this.linkArray[j1].get_rightEndpoint().get_port()) {
					this.linkArray[j1].get_rightEndpoint().set_port(null);
				}
			}
		}
	}
	,linkArraySelfUpdate: function() {
		var _g1 = 0;
		var _g = this.linkArray.length;
		while(_g1 < _g) {
			var i = _g1++;
			this.linkArray[i].get_leftEndpoint().updatePosition();
			this.linkArray[i].get_rightEndpoint().updatePosition();
		}
	}
	,componentSetName: function(component,name) {
		this.componentArray[this.componentArray.indexOf(component)].set_name(name);
	}
	,componentSetDelay: function(component,delay) {
		this.componentArray[this.componentArray.indexOf(component)].set_delay(delay);
	}
	,draw: function(drawingAdapter,linkAndComponentArray) {
		var drawFlag = false;
		var _g = 0;
		var _g1 = this.componentArray;
		while(_g < _g1.length) {
			var i = _g1[_g];
			++_g;
			if(linkAndComponentArray != null && linkAndComponentArray.getComponentIteratorLength() != 0) {
				var j = linkAndComponentArray.get_componentIterator();
				while(j.hasNext()) {
					var j1 = j.next();
					if(j1 == i) {
						i.drawComponent(drawingAdapter,true);
						drawFlag = true;
					}
				}
			}
			if(!drawFlag) {
				if(i.getNameOfTheComponentKind() != "CC") {
					i.drawComponent(drawingAdapter,false);
				} else {
					i.drawComponent(drawingAdapter,false,linkAndComponentArray);
				}
			}
			drawFlag = false;
		}
		drawFlag = false;
		var _g2 = 0;
		var _g11 = this.linkArray;
		while(_g2 < _g11.length) {
			var i1 = _g11[_g2];
			++_g2;
			if(linkAndComponentArray != null && linkAndComponentArray.getLinkIteratorLength() != 0) {
				var j2 = linkAndComponentArray.get_linkIterator();
				while(j2.hasNext()) {
					var j3 = j2.next();
					if(j3 == i1) {
						i1.drawLink(drawingAdapter,true);
						drawFlag = true;
					}
				}
			}
			if(!drawFlag) {
				i1.drawLink(drawingAdapter,false);
			}
			drawFlag = false;
		}
	}
	,findHitList: function(coordinate,mode) {
		var hitObjectArray = [];
		var hitLinkArray = [];
		var _g = 0;
		var _g1 = this.linkArray;
		while(_g < _g1.length) {
			var i = _g1[_g];
			++_g;
			hitLinkArray = i.findHitList(coordinate,mode);
			var _g2 = 0;
			while(_g2 < hitLinkArray.length) {
				var j = hitLinkArray[_g2];
				++_g2;
				j.set_circuitDiagram(this);
				hitObjectArray.push(j);
			}
		}
		var result = [];
		var _g3 = 0;
		var _g11 = this.componentArray;
		while(_g3 < _g11.length) {
			var i1 = _g11[_g3];
			++_g3;
			result = i1.findHitList(coordinate,mode);
			var _g21 = 0;
			while(_g21 < result.length) {
				var j1 = result[_g21];
				++_g21;
				if(j1.get_circuitDiagram() == null) {
					j1.set_circuitDiagram(this);
				}
				hitObjectArray.push(j1);
			}
		}
		return hitObjectArray;
	}
	,findWorldPoint: function(worldCoordinate,mode) {
		var worldPointArray = [];
		var _g = 0;
		var _g1 = this.componentArray;
		while(_g < _g1.length) {
			var i = _g1[_g];
			++_g;
			var tempWorldPointArray = i.findWorldPoint(worldCoordinate,mode);
			var _g2 = 0;
			while(_g2 < tempWorldPointArray.length) {
				var j = tempWorldPointArray[_g2];
				++_g2;
				worldPointArray.push(j);
			}
			if(worldPointArray.length != 0) {
				break;
			}
		}
		if(worldPointArray.length == 0 || mode == com_mun_model_enumeration_POINT_$MODE.PATH) {
			worldPointArray.push(new com_mun_type_WorldPoint(this,worldCoordinate));
		}
		return worldPointArray;
	}
	,isEmpty: function() {
		if(this.componentArray.length == 0 && this.linkArray.length == 0) {
			return true;
		} else {
			return false;
		}
	}
	,createJSon: function() {
		var jsonString = "{ \"name\": \"" + this.name + "\",";
		jsonString += "\"diagramWidth\": \"" + this.diagramWidth + "\",";
		jsonString += "\"diagramHeight\": \"" + this.diagramHeight + "\",";
		jsonString += "\"xMin\": \"" + this.xMin + "\",";
		jsonString += "\"yMin\": \"" + this.yMin + "\",";
		jsonString += "\"xMax\": \"" + this.xMax + "\",";
		jsonString += "\"yMax\": \"" + this.yMax + "\",";
		jsonString += "\"ComponentArray\":[";
		var _g1 = 0;
		var _g = this.componentArray.length;
		while(_g1 < _g) {
			var i = _g1++;
			jsonString += this.componentArray[i].createJSon();
			if(i != this.componentArray.length - 1) {
				jsonString += ",";
			}
		}
		jsonString += "],";
		jsonString += "\"LinkArray\":[";
		var _g11 = 0;
		var _g2 = this.linkArray.length;
		while(_g11 < _g2) {
			var i1 = _g11++;
			jsonString += this.linkArray[i1].createJSon();
			if(i1 != this.linkArray.length - 1) {
				jsonString += ",";
			}
		}
		jsonString += "]}";
		return jsonString;
	}
	,__class__: com_mun_model_component_CircuitDiagram
});
var com_mun_model_observe_Observable = function() {
	this.observers = [];
};
com_mun_model_observe_Observable.__name__ = true;
com_mun_model_observe_Observable.prototype = {
	addObserver: function(obs) {
		if(obs == null) {
			return false;
		} else {
			this.observers.push(obs);
			return true;
		}
	}
	,removeObserver: function(obs) {
		return HxOverrides.remove(this.observers,obs);
	}
	,notifyObservers: function(c,data) {
		var _g = 0;
		var _g1 = this.observers;
		while(_g < _g1.length) {
			var n = _g1[_g];
			++_g;
			n.update(c,data);
		}
	}
	,__class__: com_mun_model_observe_Observable
};
var com_mun_model_component_Component = function(xPosition,yPosition,height,width,orientation,componentKind,inportNum) {
	this.list = new haxe_ds_StringMap();
	this.outportArray = [];
	this.inportArray = [];
	com_mun_model_observe_Observable.call(this);
	this.xPosition = xPosition;
	this.yPosition = yPosition;
	this.height = height;
	this.width = width;
	this.componentKind = componentKind;
	this.componentKind.set_component(this);
	this.inportsNum = inportNum;
	this.boxType = com_mun_model_enumeration_BOX.WHITE_BOX;
	var portArray = [];
	portArray = this.componentKind.createPorts(xPosition,yPosition,width,height,orientation,inportNum);
	var _g1 = 0;
	var _g = portArray.length;
	while(_g1 < _g) {
		var o = _g1++;
		var port = portArray[o];
		if(port.get_portDescription() == com_mun_model_enumeration_IOTYPE.INPUT || port.get_portDescription() == com_mun_model_enumeration_IOTYPE.CLK || port.get_portDescription() == com_mun_model_enumeration_IOTYPE.D || port.get_portDescription() == com_mun_model_enumeration_IOTYPE.S) {
			this.inportArray.push(port);
		} else {
			this.outportArray.push(port);
		}
	}
	var _g2 = 0;
	var _g11 = componentKind.getAttr();
	while(_g2 < _g11.length) {
		var n = _g11[_g2];
		++_g2;
		if(n.getName() == "delay") {
			var this1 = this.list;
			var key = n.getName();
			var value = new com_mun_model_attribute_DelayPair(js_Boot.__cast(n , com_mun_model_attribute_IntAttr),(js_Boot.__cast(n , com_mun_model_attribute_IntAttr)).getdefaultvalue());
			var _this = this1;
			if(__map_reserved[key] != null) {
				_this.setReserved(key,value);
			} else {
				_this.h[key] = value;
			}
		} else if(n.getName() == "name") {
			var this2 = this.list;
			var key1 = n.getName();
			var value1 = new com_mun_model_attribute_NamePair(js_Boot.__cast(n , com_mun_model_attribute_StringAttr),(js_Boot.__cast(n , com_mun_model_attribute_StringAttr)).getdefaultvalue());
			var _this1 = this2;
			if(__map_reserved[key1] != null) {
				_this1.setReserved(key1,value1);
			} else {
				_this1.h[key1] = value1;
			}
		} else if(n.getName() == "orientation") {
			var this3 = this.list;
			var key2 = n.getName();
			var value2 = new com_mun_model_attribute_OrientationPair(js_Boot.__cast(n , com_mun_model_attribute_OrientationAttr),(js_Boot.__cast(n , com_mun_model_attribute_OrientationAttr)).getdefaultvalue());
			var _this2 = this3;
			if(__map_reserved[key2] != null) {
				_this2.setReserved(key2,value2);
			} else {
				_this2.h[key2] = value2;
			}
		}
	}
	var _this3 = this.list;
	(__map_reserved["orientation"] != null ? _this3.getReserved("orientation") : _this3.h["orientation"]).update(this,new com_mun_model_attribute_OrientationValue(orientation));
};
com_mun_model_component_Component.__name__ = true;
com_mun_model_component_Component.__super__ = com_mun_model_observe_Observable;
com_mun_model_component_Component.prototype = $extend(com_mun_model_observe_Observable.prototype,{
	getmap: function() {
		return this.list;
	}
	,hasAttr: function(s) {
		var _this = this.list;
		if(__map_reserved[s] != null) {
			return _this.existsReserved(s);
		} else {
			return _this.h.hasOwnProperty(s);
		}
	}
	,getAttr: function(s) {
		var _tmp0 = this.list;
		var _e = _tmp0;
		var _tmp1 = function(key) {
			if(__map_reserved[key] != null) {
				return _e.existsReserved(key);
			} else {
				return _e.h.hasOwnProperty(key);
			}
		};
		var _tmp2 = s;
		var _tmp3 = _tmp1(_tmp2);
		if(!_tmp3) {
			var e = new com_mun_assertions_AssertionFailure("list.exists(s)",[{ expr : "list", value : _tmp0},{ expr : "list.exists", value : _tmp1},{ expr : "s", value : _tmp2},{ expr : "list.exists(s)", value : _tmp3}]);
			console.log("Throwing exception " + Std.string(e));
			throw new js__$Boot_HaxeError(e);
		}
		var _this = this.list;
		return (__map_reserved[s] != null ? _this.getReserved(s) : _this.h[s]).getAttrValue();
	}
	,getAttrInt: function(s) {
		var _tmp0 = this.list;
		var _e = _tmp0;
		var _tmp1 = function(key) {
			if(__map_reserved[key] != null) {
				return _e.existsReserved(key);
			} else {
				return _e.h.hasOwnProperty(key);
			}
		};
		var _tmp2 = s;
		var _tmp3 = _tmp1(_tmp2);
		if(!_tmp3) {
			var e = new com_mun_assertions_AssertionFailure("list.exists(s)",[{ expr : "list", value : _tmp0},{ expr : "list.exists", value : _tmp1},{ expr : "s", value : _tmp2},{ expr : "list.exists(s)", value : _tmp3}]);
			console.log("Throwing exception " + Std.string(e));
			throw new js__$Boot_HaxeError(e);
		}
		var _this = this.list;
		return (__map_reserved[s] != null ? _this.getReserved(s) : _this.h[s]).getAttrValue().getvalue();
	}
	,canupdate: function(s,v) {
		var _tmp0 = this.list;
		var _e = _tmp0;
		var _tmp1 = function(key) {
			if(__map_reserved[key] != null) {
				return _e.existsReserved(key);
			} else {
				return _e.h.hasOwnProperty(key);
			}
		};
		var _tmp2 = s;
		var _tmp3 = _tmp1(_tmp2);
		if(!_tmp3) {
			var e = new com_mun_assertions_AssertionFailure("list.exists(s)",[{ expr : "list", value : _tmp0},{ expr : "list.exists", value : _tmp1},{ expr : "s", value : _tmp2},{ expr : "list.exists(s)", value : _tmp3}]);
			console.log("Throwing exception " + Std.string(e));
			throw new js__$Boot_HaxeError(e);
		}
		var _this = this.list;
		if(__map_reserved[s] != null ? _this.existsReserved(s) : _this.h.hasOwnProperty(s)) {
			var _this1 = this.list;
			return (__map_reserved[s] != null ? _this1.getReserved(s) : _this1.h[s]).canupdate(this,v);
		}
		return false;
	}
	,update: function(s,v) {
		var _tmp0 = this.list;
		var _e = _tmp0;
		var _tmp1 = function(key) {
			if(__map_reserved[key] != null) {
				return _e.existsReserved(key);
			} else {
				return _e.h.hasOwnProperty(key);
			}
		};
		var _tmp2 = s;
		var _tmp3 = _tmp1(_tmp2);
		if(!_tmp3) {
			var e = new com_mun_assertions_AssertionFailure("list.exists(s)",[{ expr : "list", value : _tmp0},{ expr : "list.exists", value : _tmp1},{ expr : "s", value : _tmp2},{ expr : "list.exists(s)", value : _tmp3}]);
			console.log("Throwing exception " + Std.string(e));
			throw new js__$Boot_HaxeError(e);
		}
		var _this = this.list;
		if(__map_reserved[s] != null ? _this.existsReserved(s) : _this.h.hasOwnProperty(s)) {
			var _this1 = this.list;
			if((__map_reserved[s] != null ? _this1.getReserved(s) : _this1.h[s]).canupdate(this,v)) {
				var _this2 = this.list;
				return (__map_reserved[s] != null ? _this2.getReserved(s) : _this2.h[s]).update(this,v);
			}
		}
		return false;
	}
	,get_CircuitDiagram: function() {
		return this.cd;
	}
	,get_xPosition: function() {
		return this.xPosition;
	}
	,set_xPosition: function(value) {
		return this.xPosition = value;
	}
	,get_yPosition: function() {
		return this.yPosition;
	}
	,set_yPosition: function(value) {
		return this.yPosition = value;
	}
	,get_orientation: function() {
		var _this = this.list;
		return (__map_reserved["orientation"] != null ? _this.getReserved("orientation") : _this.h["orientation"]).getAttrValue().getvalue();
	}
	,set_orientation: function(value) {
		var _this = this.list;
		(__map_reserved["orientation"] != null ? _this.getReserved("orientation") : _this.h["orientation"]).update(this,new com_mun_model_attribute_OrientationValue(value));
	}
	,get_componentKind: function() {
		return this.componentKind;
	}
	,set_componentKind: function(value) {
		return this.componentKind = value;
	}
	,get_boxType: function() {
		return this.boxType;
	}
	,set_boxType: function(value) {
		this.boxType = value;
	}
	,get_inportIterator: function() {
		return HxOverrides.iter(this.inportArray);
	}
	,get_inportIteratorLength: function() {
		return this.inportArray.length;
	}
	,get_outportIteratorLength: function() {
		return this.outportArray.length;
	}
	,get_outportIterator: function() {
		return HxOverrides.iter(this.outportArray);
	}
	,get_name: function() {
		var _this = this.list;
		return (__map_reserved["name"] != null ? _this.getReserved("name") : _this.h["name"]).getAttrValue().getvalue();
	}
	,set_name: function(value) {
		var _this = this.list;
		(__map_reserved["name"] != null ? _this.getReserved("name") : _this.h["name"]).update(this,new com_mun_model_attribute_StringValue(value));
	}
	,get_height: function() {
		return this.height;
	}
	,set_height: function(value) {
		return this.height = value;
	}
	,get_width: function() {
		return this.width;
	}
	,set_width: function(value) {
		return this.width = value;
	}
	,get_delay: function() {
		var _this = this.list;
		return (__map_reserved["delay"] != null ? _this.getReserved("delay") : _this.h["delay"]).getAttrValue().getvalue();
	}
	,set_delay: function(value) {
		var _this = this.list;
		return (__map_reserved["delay"] != null ? _this.getReserved("delay") : _this.h["delay"]).update(this,new com_mun_model_attribute_IntValue(value));
	}
	,get_inportsNum: function() {
		return this.inportsNum;
	}
	,setNameOfTheComponentKind: function(name) {
	}
	,getNameOfTheComponentKind: function() {
		return this.componentKind.getname();
	}
	,set_inportsNum: function(value) {
		if(value <= this.componentKind.getLeastInportNumber()) {
			return false;
		}
		this.inportsNum = value;
		while(this.inportArray.length < value) {
			var port = this.componentKind.addInPort();
			if(port != null) {
				this.inportArray.push(port);
			} else {
				return false;
			}
		}
		var _this = this.list;
		this.inportArray = this.componentKind.updateInPortPosition(this.inportArray,this.xPosition,this.yPosition,this.height,this.width,(__map_reserved["orientation"] != null ? _this.getReserved("orientation") : _this.h["orientation"]).getAttrValue().getvalue());
		return true;
	}
	,removeInport: function(inport) {
		return HxOverrides.remove(this.inportArray,inport);
	}
	,updateMoveComponentPortPosition: function(xPosition,yPosition) {
		var _this = this.list;
		this.inportArray = this.componentKind.updateInPortPosition(this.inportArray,xPosition,yPosition,this.height,this.width,(__map_reserved["orientation"] != null ? _this.getReserved("orientation") : _this.h["orientation"]).getAttrValue().getvalue());
		var _this1 = this.list;
		this.outportArray = this.componentKind.updateOutPortPosition(this.outportArray,xPosition,yPosition,this.height,this.width,(__map_reserved["orientation"] != null ? _this1.getReserved("orientation") : _this1.h["orientation"]).getAttrValue().getvalue());
		return this;
	}
	,drawComponent: function(drawingAdpater,highLight,linkAndComponentArray) {
		if(this.componentKind.checkInnerCircuitDiagramPortsChange()) {
			var i = this.componentKind.getInnerCircuitDiagram().get_componentIterator();
			while(i.hasNext()) {
				var i1 = i.next();
				var inputFlag = false;
				var outputFlag = false;
				var _g = 0;
				var _g1 = this.inportArray;
				while(_g < _g1.length) {
					var j = _g1[_g];
					++_g;
					if(i1.getNameOfTheComponentKind() == "Input") {
						if(i1.get_componentKind().get_sequence() == j.get_sequence()) {
							inputFlag = true;
						}
					}
				}
				var _g2 = 0;
				var _g11 = this.outportArray;
				while(_g2 < _g11.length) {
					var j1 = _g11[_g2];
					++_g2;
					if(i1.getNameOfTheComponentKind() == "Output") {
						if(i1.get_componentKind().get_sequence() == j1.get_sequence()) {
							outputFlag = true;
						}
					}
				}
				if(!inputFlag && !outputFlag) {
					if(i1.getNameOfTheComponentKind() == "Input") {
						var port = this.componentKind.addInPort();
						port.set_sequence(i1.get_componentKind().get_sequence());
						this.inportArray.push(port);
					} else {
						var port1 = this.componentKind.addOutPort();
						port1.set_sequence(i1.get_componentKind().get_sequence());
						this.outportArray.push(port1);
					}
				}
			}
			var _g3 = 0;
			var _g12 = this.inportArray;
			while(_g3 < _g12.length) {
				var i2 = _g12[_g3];
				++_g3;
				var flag_delete = true;
				var j2 = this.componentKind.getInnerCircuitDiagram().get_componentIterator();
				while(j2.hasNext()) {
					var j3 = j2.next();
					if(i2.get_sequence() == j3.get_componentKind().get_sequence() && j3.getNameOfTheComponentKind() == "Input") {
						flag_delete = false;
					}
				}
				if(flag_delete) {
					HxOverrides.remove(this.inportArray,i2);
				}
			}
			var _g4 = 0;
			var _g13 = this.outportArray;
			while(_g4 < _g13.length) {
				var i3 = _g13[_g4];
				++_g4;
				var flag_delete1 = true;
				var j4 = this.componentKind.getInnerCircuitDiagram().get_componentIterator();
				while(j4.hasNext()) {
					var j5 = j4.next();
					if(i3.get_sequence() == j5.get_componentKind().get_sequence() && j5.getNameOfTheComponentKind() == "Output") {
						flag_delete1 = false;
					}
				}
				if(flag_delete1) {
					HxOverrides.remove(this.outportArray,i3);
				}
			}
			var _this = this.list;
			this.componentKind.updateInPortPosition(this.inportArray,this.xPosition,this.yPosition,this.height,this.width,(__map_reserved["orientation"] != null ? _this.getReserved("orientation") : _this.h["orientation"]).getAttrValue().getvalue());
			var _this1 = this.list;
			this.componentKind.updateOutPortPosition(this.outportArray,this.xPosition,this.yPosition,this.height,this.width,(__map_reserved["orientation"] != null ? _this1.getReserved("orientation") : _this1.h["orientation"]).getAttrValue().getvalue());
		}
		if(this.componentKind.getname() != "CC") {
			this.componentKind.drawComponent(drawingAdpater,highLight);
		} else {
			this.componentKind.drawComponent(drawingAdpater,highLight,linkAndComponentArray);
		}
	}
	,findHitList: function(coordinate,mode) {
		return this.componentKind.findHitList(coordinate,mode);
	}
	,findWorldPoint: function(coordinate,mode) {
		return this.componentKind.findWorldPoint(coordinate,mode);
	}
	,createJSon: function() {
		var _this = this.list;
		var jsonString = "{ \"name\": \"" + Std.string((__map_reserved["name"] != null ? _this.getReserved("name") : _this.h["name"]).getAttrValue().getvalue()) + "\",";
		jsonString += " \"xPosition\": \"" + this.xPosition + "\",";
		jsonString += " \"yPosition\": \"" + this.yPosition + "\",";
		jsonString += " \"height\": \"" + this.height + "\",";
		jsonString += " \"width\": \"" + this.width + "\",";
		var _this1 = this.list;
		jsonString += " \"orientation\": \"" + Std.string((__map_reserved["orientation"] != null ? _this1.getReserved("orientation") : _this1.h["orientation"]).getAttrValue().getvalue()) + "\",";
		var _this2 = this.list;
		jsonString += " \"delay\": \"" + Std.string((__map_reserved["delay"] != null ? _this2.getReserved("delay") : _this2.h["delay"]).getAttrValue().getvalue()) + "\",";
		jsonString += " \"inportsNum\": \"" + this.inportsNum + "\",";
		jsonString += " \"nameOfTheComponentKind\": \"" + this.componentKind.getname() + "\",";
		jsonString += "\"componentKind\":";
		jsonString += this.componentKind.createJSon();
		jsonString += ",";
		jsonString += "\"inportArray\":[";
		var _g1 = 0;
		var _g = this.inportArray.length;
		while(_g1 < _g) {
			var i = _g1++;
			jsonString += this.inportArray[i].createJSon();
			if(i != this.inportArray.length - 1) {
				jsonString += ",";
			}
		}
		jsonString += "],";
		jsonString += "\"outportArray\":[";
		var _g11 = 0;
		var _g2 = this.outportArray.length;
		while(_g11 < _g2) {
			var i1 = _g11++;
			jsonString += this.outportArray[i1].createJSon();
			if(i1 != this.outportArray.length - 1) {
				jsonString += ",";
			}
		}
		jsonString += "]}";
		return jsonString;
	}
	,__class__: com_mun_model_component_Component
});
var com_mun_model_component_Endpoint = function(xPosition,yPosition) {
	this.xPosition = xPosition;
	this.yPosition = yPosition;
};
com_mun_model_component_Endpoint.__name__ = true;
com_mun_model_component_Endpoint.prototype = {
	get_xPosition: function() {
		return this.xPosition;
	}
	,get_yPosition: function() {
		return this.yPosition;
	}
	,get_port: function() {
		return this.port;
	}
	,set_xPosition: function(value) {
		return this.xPosition = value;
	}
	,set_yPosition: function(value) {
		return this.yPosition = value;
	}
	,set_port: function(value) {
		return this.port = value;
	}
	,updatePosition: function() {
		if(this.port != null) {
			this.xPosition = this.port.get_xPosition();
			this.yPosition = this.port.get_yPosition();
		}
	}
	,createJSon: function() {
		var jsonString = "{ \"xPosition\": \"" + this.xPosition + "\",";
		jsonString += "\"yPosition\": \"" + this.yPosition + "\"";
		jsonString += "}";
		return jsonString;
	}
	,__class__: com_mun_model_component_Endpoint
};
var com_mun_model_component_Port = function() { };
com_mun_model_component_Port.__name__ = true;
com_mun_model_component_Port.prototype = {
	__class__: com_mun_model_component_Port
};
var com_mun_model_component_Inport = function(xPosition,yPosition) {
	this.sequence = -1;
	this.xPosition = xPosition;
	this.yPosition = yPosition;
	this.portDescription = com_mun_model_enumeration_IOTYPE.INPUT;
};
com_mun_model_component_Inport.__name__ = true;
com_mun_model_component_Inport.__interfaces__ = [com_mun_model_component_Port];
com_mun_model_component_Inport.prototype = {
	get_xPosition: function() {
		return this.xPosition;
	}
	,get_yPosition: function() {
		return this.yPosition;
	}
	,set_xPosition: function(xPosition) {
		this.xPosition = xPosition;
	}
	,set_yPosition: function(yPosition) {
		this.yPosition = yPosition;
	}
	,get_value: function() {
		return this.value;
	}
	,set_value: function(value) {
		this.value = value;
	}
	,get_portDescription: function() {
		return this.portDescription;
	}
	,set_portDescription: function(value) {
		this.portDescription = value;
	}
	,get_sequence: function() {
		return this.sequence;
	}
	,set_sequence: function(sequence) {
		this.sequence = sequence;
	}
	,createJSon: function() {
		var jsonString = "{ \"xPosition\": \"" + this.xPosition + "\",";
		jsonString += "\"yPosition\": \"" + this.yPosition + "\",";
		jsonString += "\"portDescription\": \"" + Std.string(this.portDescription) + "\",";
		jsonString += "\"value\": \"" + Std.string(this.value) + "\",";
		jsonString += "\"sequence\": \"" + this.sequence + "\"";
		jsonString += "}";
		return jsonString;
	}
	,__class__: com_mun_model_component_Inport
};
var com_mun_model_component_Link = function(leftEndpoint,rightEndpoint) {
	this.leftEndpoint = leftEndpoint;
	this.rightEndpoint = rightEndpoint;
};
com_mun_model_component_Link.__name__ = true;
com_mun_model_component_Link.prototype = {
	getLinkLength: function() {
		return Math.sqrt(Math.pow(Math.abs(this.leftEndpoint.get_xPosition() - this.rightEndpoint.get_xPosition()),2) + Math.pow(Math.abs(this.leftEndpoint.get_yPosition() - this.rightEndpoint.get_yPosition()),2));
	}
	,get_leftEndpoint: function() {
		return this.leftEndpoint;
	}
	,set_leftEndpoint: function(value) {
		return this.leftEndpoint = value;
	}
	,get_rightEndpoint: function() {
		return this.rightEndpoint;
	}
	,set_rightEndpoint: function(value) {
		return this.rightEndpoint = value;
	}
	,drawLink: function(drawingAdapter,highLight) {
		var drawComponent = new com_mun_view_drawComponents_DrawLink(this,drawingAdapter);
		if(highLight) {
			drawComponent.drawCorrespondingComponent("red");
		} else {
			drawComponent.drawCorrespondingComponent("black");
		}
	}
	,findHitList: function(coordinate,mode) {
		var hitObjectArray = [];
		var link = this.isOnLink(coordinate);
		if(link != null) {
			var hitObject = new com_mun_type_HitObject();
			hitObject.set_link(link);
			hitObjectArray.push(hitObject);
		}
		var endpoint = this.pointOnEndpoint(coordinate);
		if(endpoint != null) {
			var hitObject1 = new com_mun_type_HitObject();
			hitObject1.set_endpoint(endpoint);
			hitObjectArray.push(hitObject1);
		}
		return hitObjectArray;
	}
	,pointOnEndpoint: function(coordinate) {
		if(this.pointsDistance(this.leftEndpoint.get_xPosition(),this.leftEndpoint.get_yPosition(),coordinate.get_xPosition(),coordinate.get_yPosition()) <= com_mun_global_Constant.pointToEndpointDistance) {
			return this.leftEndpoint;
		}
		if(this.pointsDistance(this.rightEndpoint.get_xPosition(),this.rightEndpoint.get_yPosition(),coordinate.get_xPosition(),coordinate.get_yPosition()) <= com_mun_global_Constant.pointToEndpointDistance) {
			return this.rightEndpoint;
		}
		return null;
	}
	,isOnLink: function(coordinate) {
		if(this.pointToLine(this.leftEndpoint.get_xPosition(),this.leftEndpoint.get_yPosition(),this.rightEndpoint.get_xPosition(),this.rightEndpoint.get_yPosition(),coordinate.get_xPosition(),coordinate.get_yPosition()) <= com_mun_global_Constant.pointToLineDistance) {
			var theDistanaceToLeftEndpoint = Math.sqrt(Math.pow(Math.abs(coordinate.get_xPosition() - this.leftEndpoint.get_xPosition()),2) + Math.pow(Math.abs(coordinate.get_yPosition() - this.leftEndpoint.get_yPosition()),2));
			var theDistanceToRightEndpoint = Math.sqrt(Math.pow(Math.abs(coordinate.get_xPosition() - this.rightEndpoint.get_xPosition()),2) + Math.pow(Math.abs(coordinate.get_yPosition() - this.rightEndpoint.get_yPosition()),2));
			if(theDistanaceToLeftEndpoint >= theDistanceToRightEndpoint) {
				if(theDistanceToRightEndpoint >= com_mun_global_Constant.pointToEndpointDistance) {
					return this;
				}
			} else if(theDistanaceToLeftEndpoint >= com_mun_global_Constant.pointToEndpointDistance) {
				return this;
			}
		}
		return null;
	}
	,pointToLine: function(x1,y1,x2,y2,x0,y0) {
		var space = 0;
		var a;
		var b;
		var c;
		a = this.pointsDistance(x1,y1,x2,y2);
		b = this.pointsDistance(x1,y1,x0,y0);
		c = this.pointsDistance(x2,y2,x0,y0);
		if(c + b == a) {
			space = 0;
			return space;
		}
		if(a <= 0.00001) {
			space = b;
			return space;
		}
		if(c * c > a * a + b * b) {
			space = b;
			return space;
		}
		if(b * b >= a * a + c * c) {
			space = c;
			return space;
		}
		var p = (a + b + c) / 2;
		var s = Math.sqrt(p * (p - a) * (p - b) * (p - c));
		space = 2 * s / a;
		return space;
	}
	,pointsDistance: function(x1,y1,x2,y2) {
		var lineLength = 0;
		lineLength = Math.sqrt((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2));
		return lineLength;
	}
	,createJSon: function() {
		var jsonString = "{ \"leftEndpoint\": " + this.leftEndpoint.createJSon() + ",";
		jsonString += "\"rightEndpoint\": " + this.rightEndpoint.createJSon();
		jsonString += "}";
		return jsonString;
	}
	,__class__: com_mun_model_component_Link
};
var com_mun_model_drawingInterface_DrawingAdapterI = function() { };
com_mun_model_drawingInterface_DrawingAdapterI.__name__ = true;
com_mun_model_drawingInterface_DrawingAdapterI.prototype = {
	__class__: com_mun_model_drawingInterface_DrawingAdapterI
};
var com_mun_model_enumeration_AttrType = { __ename__ : true, __constructs__ : ["INT","STRING","Orientation"] };
com_mun_model_enumeration_AttrType.INT = ["INT",0];
com_mun_model_enumeration_AttrType.INT.toString = $estr;
com_mun_model_enumeration_AttrType.INT.__enum__ = com_mun_model_enumeration_AttrType;
com_mun_model_enumeration_AttrType.STRING = ["STRING",1];
com_mun_model_enumeration_AttrType.STRING.toString = $estr;
com_mun_model_enumeration_AttrType.STRING.__enum__ = com_mun_model_enumeration_AttrType;
com_mun_model_enumeration_AttrType.Orientation = ["Orientation",2];
com_mun_model_enumeration_AttrType.Orientation.toString = $estr;
com_mun_model_enumeration_AttrType.Orientation.__enum__ = com_mun_model_enumeration_AttrType;
var com_mun_model_enumeration_BOX = { __ename__ : true, __constructs__ : ["WHITE_BOX","BLACK_BOX"] };
com_mun_model_enumeration_BOX.WHITE_BOX = ["WHITE_BOX",0];
com_mun_model_enumeration_BOX.WHITE_BOX.toString = $estr;
com_mun_model_enumeration_BOX.WHITE_BOX.__enum__ = com_mun_model_enumeration_BOX;
com_mun_model_enumeration_BOX.BLACK_BOX = ["BLACK_BOX",1];
com_mun_model_enumeration_BOX.BLACK_BOX.toString = $estr;
com_mun_model_enumeration_BOX.BLACK_BOX.__enum__ = com_mun_model_enumeration_BOX;
var com_mun_model_enumeration_IOTYPE = { __ename__ : true, __constructs__ : ["INPUT","S","D","CLK","OUTPUT","Q","QN"] };
com_mun_model_enumeration_IOTYPE.INPUT = ["INPUT",0];
com_mun_model_enumeration_IOTYPE.INPUT.toString = $estr;
com_mun_model_enumeration_IOTYPE.INPUT.__enum__ = com_mun_model_enumeration_IOTYPE;
com_mun_model_enumeration_IOTYPE.S = ["S",1];
com_mun_model_enumeration_IOTYPE.S.toString = $estr;
com_mun_model_enumeration_IOTYPE.S.__enum__ = com_mun_model_enumeration_IOTYPE;
com_mun_model_enumeration_IOTYPE.D = ["D",2];
com_mun_model_enumeration_IOTYPE.D.toString = $estr;
com_mun_model_enumeration_IOTYPE.D.__enum__ = com_mun_model_enumeration_IOTYPE;
com_mun_model_enumeration_IOTYPE.CLK = ["CLK",3];
com_mun_model_enumeration_IOTYPE.CLK.toString = $estr;
com_mun_model_enumeration_IOTYPE.CLK.__enum__ = com_mun_model_enumeration_IOTYPE;
com_mun_model_enumeration_IOTYPE.OUTPUT = ["OUTPUT",4];
com_mun_model_enumeration_IOTYPE.OUTPUT.toString = $estr;
com_mun_model_enumeration_IOTYPE.OUTPUT.__enum__ = com_mun_model_enumeration_IOTYPE;
com_mun_model_enumeration_IOTYPE.Q = ["Q",5];
com_mun_model_enumeration_IOTYPE.Q.toString = $estr;
com_mun_model_enumeration_IOTYPE.Q.__enum__ = com_mun_model_enumeration_IOTYPE;
com_mun_model_enumeration_IOTYPE.QN = ["QN",6];
com_mun_model_enumeration_IOTYPE.QN.toString = $estr;
com_mun_model_enumeration_IOTYPE.QN.__enum__ = com_mun_model_enumeration_IOTYPE;
var com_mun_model_enumeration_MODE = { __ename__ : true, __constructs__ : ["EXCLUDE_PARENTS","INCLUDE_PARENTS"] };
com_mun_model_enumeration_MODE.EXCLUDE_PARENTS = ["EXCLUDE_PARENTS",0];
com_mun_model_enumeration_MODE.EXCLUDE_PARENTS.toString = $estr;
com_mun_model_enumeration_MODE.EXCLUDE_PARENTS.__enum__ = com_mun_model_enumeration_MODE;
com_mun_model_enumeration_MODE.INCLUDE_PARENTS = ["INCLUDE_PARENTS",1];
com_mun_model_enumeration_MODE.INCLUDE_PARENTS.toString = $estr;
com_mun_model_enumeration_MODE.INCLUDE_PARENTS.__enum__ = com_mun_model_enumeration_MODE;
var com_mun_model_enumeration_ORIENTATION = { __ename__ : true, __constructs__ : ["NORTH","SOUTH","WEST","EAST","UNKNOW"] };
com_mun_model_enumeration_ORIENTATION.NORTH = ["NORTH",0];
com_mun_model_enumeration_ORIENTATION.NORTH.toString = $estr;
com_mun_model_enumeration_ORIENTATION.NORTH.__enum__ = com_mun_model_enumeration_ORIENTATION;
com_mun_model_enumeration_ORIENTATION.SOUTH = ["SOUTH",1];
com_mun_model_enumeration_ORIENTATION.SOUTH.toString = $estr;
com_mun_model_enumeration_ORIENTATION.SOUTH.__enum__ = com_mun_model_enumeration_ORIENTATION;
com_mun_model_enumeration_ORIENTATION.WEST = ["WEST",2];
com_mun_model_enumeration_ORIENTATION.WEST.toString = $estr;
com_mun_model_enumeration_ORIENTATION.WEST.__enum__ = com_mun_model_enumeration_ORIENTATION;
com_mun_model_enumeration_ORIENTATION.EAST = ["EAST",3];
com_mun_model_enumeration_ORIENTATION.EAST.toString = $estr;
com_mun_model_enumeration_ORIENTATION.EAST.__enum__ = com_mun_model_enumeration_ORIENTATION;
com_mun_model_enumeration_ORIENTATION.UNKNOW = ["UNKNOW",4];
com_mun_model_enumeration_ORIENTATION.UNKNOW.toString = $estr;
com_mun_model_enumeration_ORIENTATION.UNKNOW.__enum__ = com_mun_model_enumeration_ORIENTATION;
var com_mun_model_enumeration_POINT_$MODE = { __ename__ : true, __constructs__ : ["ONE","PATH"] };
com_mun_model_enumeration_POINT_$MODE.ONE = ["ONE",0];
com_mun_model_enumeration_POINT_$MODE.ONE.toString = $estr;
com_mun_model_enumeration_POINT_$MODE.ONE.__enum__ = com_mun_model_enumeration_POINT_$MODE;
com_mun_model_enumeration_POINT_$MODE.PATH = ["PATH",1];
com_mun_model_enumeration_POINT_$MODE.PATH.toString = $estr;
com_mun_model_enumeration_POINT_$MODE.PATH.__enum__ = com_mun_model_enumeration_POINT_$MODE;
var com_mun_model_enumeration_VALUE_$LOGIC = { __ename__ : true, __constructs__ : ["FALSE","TRUE","UNDEFINED","RISING_EDGE","DOWN_EDGE"] };
com_mun_model_enumeration_VALUE_$LOGIC.FALSE = ["FALSE",0];
com_mun_model_enumeration_VALUE_$LOGIC.FALSE.toString = $estr;
com_mun_model_enumeration_VALUE_$LOGIC.FALSE.__enum__ = com_mun_model_enumeration_VALUE_$LOGIC;
com_mun_model_enumeration_VALUE_$LOGIC.TRUE = ["TRUE",1];
com_mun_model_enumeration_VALUE_$LOGIC.TRUE.toString = $estr;
com_mun_model_enumeration_VALUE_$LOGIC.TRUE.__enum__ = com_mun_model_enumeration_VALUE_$LOGIC;
com_mun_model_enumeration_VALUE_$LOGIC.UNDEFINED = ["UNDEFINED",2];
com_mun_model_enumeration_VALUE_$LOGIC.UNDEFINED.toString = $estr;
com_mun_model_enumeration_VALUE_$LOGIC.UNDEFINED.__enum__ = com_mun_model_enumeration_VALUE_$LOGIC;
com_mun_model_enumeration_VALUE_$LOGIC.RISING_EDGE = ["RISING_EDGE",3];
com_mun_model_enumeration_VALUE_$LOGIC.RISING_EDGE.toString = $estr;
com_mun_model_enumeration_VALUE_$LOGIC.RISING_EDGE.__enum__ = com_mun_model_enumeration_VALUE_$LOGIC;
com_mun_model_enumeration_VALUE_$LOGIC.DOWN_EDGE = ["DOWN_EDGE",4];
com_mun_model_enumeration_VALUE_$LOGIC.DOWN_EDGE.toString = $estr;
com_mun_model_enumeration_VALUE_$LOGIC.DOWN_EDGE.__enum__ = com_mun_model_enumeration_VALUE_$LOGIC;
var com_mun_model_gates_ComponentKind = function() { };
com_mun_model_gates_ComponentKind.__name__ = true;
com_mun_model_gates_ComponentKind.prototype = {
	__class__: com_mun_model_gates_ComponentKind
};
var com_mun_type_Coordinate = function(xPosition,yPosition) {
	this.set_xPosition(xPosition);
	this.set_yPosition(yPosition);
};
com_mun_type_Coordinate.__name__ = true;
com_mun_type_Coordinate.prototype = {
	get_xPosition: function() {
		return this.xPosition;
	}
	,set_xPosition: function(value) {
		return this.xPosition = value;
	}
	,get_yPosition: function() {
		return this.yPosition;
	}
	,set_yPosition: function(value) {
		return this.yPosition = value;
	}
	,__class__: com_mun_type_Coordinate
};
var com_mun_type_HitObject = function() {
};
com_mun_type_HitObject.__name__ = true;
com_mun_type_HitObject.prototype = {
	hitNothing: function() {
		if(this.component == null && this.link == null && this.port == null && this.endpoint == null) {
			return true;
		} else {
			return false;
		}
	}
	,get_circuitDiagram: function() {
		return this.circuitDiagram;
	}
	,set_circuitDiagram: function(value) {
		return this.circuitDiagram = value;
	}
	,get_component: function() {
		return this.component;
	}
	,set_component: function(value) {
		return this.component = value;
	}
	,get_link: function() {
		return this.link;
	}
	,set_link: function(value) {
		return this.link = value;
	}
	,get_port: function() {
		return this.port;
	}
	,set_port: function(value) {
		return this.port = value;
	}
	,get_endpoint: function() {
		return this.endpoint;
	}
	,set_endpoint: function(value) {
		return this.endpoint = value;
	}
	,__class__: com_mun_type_HitObject
};
var com_mun_type_LinkAndComponentAndEndpointAndPortArray = function() {
	this.linkArray = [];
	this.componentArray = [];
	this.endponentArray = [];
	this.portArray = [];
};
com_mun_type_LinkAndComponentAndEndpointAndPortArray.__name__ = true;
com_mun_type_LinkAndComponentAndEndpointAndPortArray.prototype = {
	addLink: function(link) {
		if(this.linkArray.indexOf(link) == -1 && link != null) {
			this.linkArray.push(link);
		}
	}
	,addComponent: function(component) {
		if(this.componentArray.indexOf(component) == -1 && component != null) {
			this.componentArray.push(component);
		}
	}
	,addEndpoint: function(endpoint) {
		if(this.endponentArray.indexOf(endpoint) == -1 && endpoint != null) {
			this.endponentArray.push(endpoint);
		}
	}
	,addPort: function(port) {
		if(this.portArray.indexOf(port) == -1 && port != null) {
			this.portArray.push(port);
		}
	}
	,removeLink: function(link) {
		if(this.linkArray.indexOf(link) != -1 && link != null) {
			HxOverrides.remove(this.linkArray,link);
		}
	}
	,removeComponent: function(component) {
		if(this.componentArray.indexOf(component) != -1 && component != null) {
			HxOverrides.remove(this.componentArray,component);
		}
	}
	,removeEndpoint: function(endpoint) {
		if(this.endponentArray.indexOf(endpoint) != -1 && endpoint != null) {
			HxOverrides.remove(this.endponentArray,endpoint);
		}
	}
	,removePort: function(port) {
		if(this.portArray.indexOf(port) != -1 && port != null) {
			HxOverrides.remove(this.portArray,port);
		}
	}
	,get_linkIterator: function() {
		return HxOverrides.iter(this.linkArray);
	}
	,get_componentIterator: function() {
		return HxOverrides.iter(this.componentArray);
	}
	,get_endpointIterator: function() {
		return HxOverrides.iter(this.endponentArray);
	}
	,get_portIterator: function() {
		return HxOverrides.iter(this.portArray);
	}
	,getLinkIteratorLength: function() {
		return this.linkArray.length;
	}
	,getEndppointIteratorLength: function() {
		return this.endponentArray.length;
	}
	,getComponentIteratorLength: function() {
		return this.componentArray.length;
	}
	,getPortIteratorLength: function() {
		return this.portArray.length;
	}
	,getComponentFromIndex: function(index) {
		return this.componentArray[index];
	}
	,getLinkFromIndex: function(index) {
		return this.linkArray[index];
	}
	,getEndpointFromIndex: function(index) {
		return this.endponentArray[index];
	}
	,getPortFromIndex: function(index) {
		return this.portArray[index];
	}
	,setArray: function(array) {
		this.clean();
		var i = array.get_linkIterator();
		while(i.hasNext()) {
			var i1 = i.next();
			this.addLink(i1);
		}
		var i2 = array.get_componentIterator();
		while(i2.hasNext()) {
			var i3 = i2.next();
			this.addComponent(i3);
		}
		var i4 = array.get_portIterator();
		while(i4.hasNext()) {
			var i5 = i4.next();
			this.addPort(i5);
		}
		var i6 = array.get_endpointIterator();
		while(i6.hasNext()) {
			var i7 = i6.next();
			this.addEndpoint(i7);
		}
	}
	,clean: function() {
		this.linkArray.splice(0,this.linkArray.length);
		this.componentArray.splice(0,this.componentArray.length);
		this.endponentArray.splice(0,this.endponentArray.length);
		this.portArray.splice(0,this.portArray.length);
	}
	,isEmpty: function() {
		if(this.linkArray.length == 0 && this.componentArray.length == 0 && this.endponentArray.length == 0 && this.portArray.length == 0) {
			return true;
		} else {
			return false;
		}
	}
	,__class__: com_mun_type_LinkAndComponentAndEndpointAndPortArray
};
var com_mun_type_WorldPoint = function(circuitDiagram,coordinate) {
	this.circuitDiagram = circuitDiagram;
	this.coordinate = coordinate;
};
com_mun_type_WorldPoint.__name__ = true;
com_mun_type_WorldPoint.prototype = {
	get_circuitDiagram: function() {
		return this.circuitDiagram;
	}
	,set_circuitDiagram: function(value) {
		return this.circuitDiagram = value;
	}
	,get_coordinate: function() {
		return this.coordinate;
	}
	,set_coordinate: function(value) {
		return this.coordinate = value;
	}
	,__class__: com_mun_type_WorldPoint
};
var com_mun_view_drawComponents_DrawComponent = function() { };
com_mun_view_drawComponents_DrawComponent.__name__ = true;
com_mun_view_drawComponents_DrawComponent.prototype = {
	__class__: com_mun_view_drawComponents_DrawComponent
};
var com_mun_view_drawComponents_DrawLink = function(link,drawingAdapter) {
	this.link = link;
	this.drawingAdapter = drawingAdapter;
};
com_mun_view_drawComponents_DrawLink.__name__ = true;
com_mun_view_drawComponents_DrawLink.__interfaces__ = [com_mun_view_drawComponents_DrawComponent];
com_mun_view_drawComponents_DrawLink.prototype = {
	drawCorrespondingComponent: function(strokeColor) {
		if(strokeColor == null || strokeColor == "") {
			strokeColor = "black";
		}
		this.drawingAdapter.setStrokeColor(strokeColor);
		this.drawingAdapter.drawLine(this.link.get_leftEndpoint().get_xPosition(),this.link.get_leftEndpoint().get_yPosition(),this.link.get_rightEndpoint().get_xPosition(),this.link.get_rightEndpoint().get_yPosition());
	}
	,__class__: com_mun_view_drawComponents_DrawLink
};
var com_mun_view_drawingImpl_RectangleI = function() { };
com_mun_view_drawingImpl_RectangleI.__name__ = true;
com_mun_view_drawingImpl_RectangleI.prototype = {
	__class__: com_mun_view_drawingImpl_RectangleI
};
var com_mun_view_drawingImpl_Rectangle = function(corner0,corner1) {
	this.minCoordinate = new com_mun_type_Coordinate(Math.min(corner0.get_xPosition(),corner1.get_xPosition()),Math.min(corner0.get_yPosition(),corner1.get_yPosition()));
	this.maxCoordinate = new com_mun_type_Coordinate(Math.max(corner0.get_xPosition(),corner1.get_xPosition()),Math.max(corner0.get_yPosition(),corner1.get_yPosition()));
	this.updateWidthAndHeight();
};
com_mun_view_drawingImpl_Rectangle.__name__ = true;
com_mun_view_drawingImpl_Rectangle.__interfaces__ = [com_mun_view_drawingImpl_RectangleI];
com_mun_view_drawingImpl_Rectangle.prototype = {
	min: function() {
		return this.minCoordinate;
	}
	,max: function() {
		return this.maxCoordinate;
	}
	,width: function() {
		return this.width_;
	}
	,height: function() {
		return this.height_;
	}
	,set_minCoordinate: function(value) {
		this.minCoordinate = value;
		this.updateWidthAndHeight();
	}
	,set_maxCoordinate: function(value) {
		this.maxCoordinate = value;
		this.updateWidthAndHeight();
	}
	,updateWidthAndHeight: function() {
		this.width_ = this.maxCoordinate.get_xPosition() - this.minCoordinate.get_xPosition();
		this.height_ = this.maxCoordinate.get_yPosition() - this.minCoordinate.get_yPosition();
	}
	,__class__: com_mun_view_drawingImpl_Rectangle
};
var com_mun_view_drawingImpl_Transform = function(m,im) {
	this.convertMatrix = m;
	this.invertMatrix = im;
};
com_mun_view_drawingImpl_Transform.__name__ = true;
com_mun_view_drawingImpl_Transform.identity = function() {
	return new com_mun_view_drawingImpl_Transform([1,0,0,0,1,0,0,0,1],[1,0,0,0,1,0,0,0,1]);
};
com_mun_view_drawingImpl_Transform.prototype = {
	pointConvert: function(c) {
		return new com_mun_type_Coordinate(this.convertMatrix[0] * c.get_xPosition() + this.convertMatrix[1] * c.get_yPosition() + this.convertMatrix[2],this.convertMatrix[3] * c.get_xPosition() + this.convertMatrix[4] * c.get_yPosition() + this.convertMatrix[5]);
	}
	,pointInvert: function(c) {
		return new com_mun_type_Coordinate(this.invertMatrix[0] * c.get_xPosition() + this.invertMatrix[1] * c.get_yPosition() + this.invertMatrix[2],this.invertMatrix[3] * c.get_xPosition() + this.invertMatrix[4] * c.get_yPosition() + this.invertMatrix[5]);
	}
	,rectConvert: function(c) {
		var maxCoordinate = this.pointConvert(c.max());
		var minCoordinate = this.pointConvert(c.min());
		return new com_mun_view_drawingImpl_Rectangle(maxCoordinate,minCoordinate);
	}
	,rectInvert: function(c) {
		var maxCoordinate = this.pointInvert(c.max());
		var minCoordinate = this.pointInvert(c.min());
		return new com_mun_view_drawingImpl_Rectangle(maxCoordinate,minCoordinate);
	}
	,scale: function(xRatio,yRatio) {
		var scaleArray = [xRatio,0,0,0,yRatio,0,0,0,1];
		var invScaleArray = [1 / xRatio,0,0,0,1 / yRatio,0,0,0,1];
		return new com_mun_view_drawingImpl_Transform(this.multiply(scaleArray,this.convertMatrix),this.multiply(this.invertMatrix,invScaleArray));
	}
	,translate: function(xDelta,yDelta) {
		var translateArray = [1,0,xDelta,0,1,yDelta,0,0,1];
		var invTranslateArray = [1,0,-xDelta,0,1,-yDelta,0,0,1];
		return new com_mun_view_drawingImpl_Transform(this.multiply(translateArray,this.convertMatrix),this.multiply(this.invertMatrix,invTranslateArray));
	}
	,quadrantRotate: function(n) {
		return null;
	}
	,compose: function(other) {
		return new com_mun_view_drawingImpl_Transform(this.multiply(other.convertMatrix,this.convertMatrix),this.multiply(this.invertMatrix,other.invertMatrix));
	}
	,multiply: function(matrix1,matrix2) {
		var n = Math.sqrt(matrix1.length);
		var tempArray = [];
		var _g1 = 0;
		var _g = n;
		while(_g1 < _g) {
			var i = _g1++;
			var _g3 = 0;
			var _g2 = n;
			while(_g3 < _g2) {
				var j = _g3++;
				tempArray[n * i + j] = 0;
			}
		}
		var _g11 = 0;
		var _g4 = n;
		while(_g11 < _g4) {
			var i1 = _g11++;
			var _g31 = 0;
			var _g21 = n;
			while(_g31 < _g21) {
				var j1 = _g31++;
				var _g5 = 0;
				var _g41 = n;
				while(_g5 < _g41) {
					var k = _g5++;
					tempArray[n * i1 + j1] += matrix1[n * i1 + k] * matrix2[n * k + j1];
				}
			}
		}
		return tempArray;
	}
	,__class__: com_mun_view_drawingImpl_Transform
};
var haxe_IMap = function() { };
haxe_IMap.__name__ = true;
var haxe_ds_StringMap = function() {
	this.h = { };
};
haxe_ds_StringMap.__name__ = true;
haxe_ds_StringMap.__interfaces__ = [haxe_IMap];
haxe_ds_StringMap.prototype = {
	setReserved: function(key,value) {
		if(this.rh == null) {
			this.rh = { };
		}
		this.rh["$" + key] = value;
	}
	,getReserved: function(key) {
		if(this.rh == null) {
			return null;
		} else {
			return this.rh["$" + key];
		}
	}
	,existsReserved: function(key) {
		if(this.rh == null) {
			return false;
		}
		return this.rh.hasOwnProperty("$" + key);
	}
	,__class__: haxe_ds_StringMap
};
var haxe_io_Bytes = function(data) {
	this.length = data.byteLength;
	this.b = new Uint8Array(data);
	this.b.bufferValue = data;
	data.hxBytes = this;
	data.bytes = this.b;
};
haxe_io_Bytes.__name__ = true;
haxe_io_Bytes.ofString = function(s) {
	var a = [];
	var i = 0;
	while(i < s.length) {
		var c = s.charCodeAt(i++);
		if(55296 <= c && c <= 56319) {
			c = c - 55232 << 10 | s.charCodeAt(i++) & 1023;
		}
		if(c <= 127) {
			a.push(c);
		} else if(c <= 2047) {
			a.push(192 | c >> 6);
			a.push(128 | c & 63);
		} else if(c <= 65535) {
			a.push(224 | c >> 12);
			a.push(128 | c >> 6 & 63);
			a.push(128 | c & 63);
		} else {
			a.push(240 | c >> 18);
			a.push(128 | c >> 12 & 63);
			a.push(128 | c >> 6 & 63);
			a.push(128 | c & 63);
		}
	}
	return new haxe_io_Bytes(new Uint8Array(a).buffer);
};
haxe_io_Bytes.prototype = {
	toHex: function() {
		var s_b = "";
		var chars = [];
		var str = "0123456789abcdef";
		var _g1 = 0;
		var _g = str.length;
		while(_g1 < _g) {
			var i = _g1++;
			chars.push(HxOverrides.cca(str,i));
		}
		var _g11 = 0;
		var _g2 = this.length;
		while(_g11 < _g2) {
			var i1 = _g11++;
			var c = this.b[i1];
			s_b += String.fromCharCode(chars[c >> 4]);
			s_b += String.fromCharCode(chars[c & 15]);
		}
		return s_b;
	}
	,__class__: haxe_io_Bytes
};
var haxe_io_BytesBuffer = function() {
	this.b = [];
};
haxe_io_BytesBuffer.__name__ = true;
haxe_io_BytesBuffer.prototype = {
	getBytes: function() {
		var bytes = new haxe_io_Bytes(new Uint8Array(this.b).buffer);
		this.b = null;
		return bytes;
	}
	,__class__: haxe_io_BytesBuffer
};
var haxe_io_Output = function() { };
haxe_io_Output.__name__ = true;
haxe_io_Output.prototype = {
	writeByte: function(c) {
		throw new js__$Boot_HaxeError("Not implemented");
	}
	,writeUInt16: function(x) {
		if(x < 0 || x >= 65536) {
			throw new js__$Boot_HaxeError(haxe_io_Error.Overflow);
		}
		if(this.bigEndian) {
			this.writeByte(x >> 8);
			this.writeByte(x & 255);
		} else {
			this.writeByte(x & 255);
			this.writeByte(x >> 8);
		}
	}
	,writeUInt24: function(x) {
		if(x < 0 || x >= 16777216) {
			throw new js__$Boot_HaxeError(haxe_io_Error.Overflow);
		}
		if(this.bigEndian) {
			this.writeByte(x >> 16);
			this.writeByte(x >> 8 & 255);
			this.writeByte(x & 255);
		} else {
			this.writeByte(x & 255);
			this.writeByte(x >> 8 & 255);
			this.writeByte(x >> 16);
		}
	}
	,writeInt32: function(x) {
		if(this.bigEndian) {
			this.writeByte(x >>> 24);
			this.writeByte(x >> 16 & 255);
			this.writeByte(x >> 8 & 255);
			this.writeByte(x & 255);
		} else {
			this.writeByte(x & 255);
			this.writeByte(x >> 8 & 255);
			this.writeByte(x >> 16 & 255);
			this.writeByte(x >>> 24);
		}
	}
	,__class__: haxe_io_Output
};
var haxe_io_BytesOutput = function() {
	this.b = new haxe_io_BytesBuffer();
};
haxe_io_BytesOutput.__name__ = true;
haxe_io_BytesOutput.__super__ = haxe_io_Output;
haxe_io_BytesOutput.prototype = $extend(haxe_io_Output.prototype,{
	writeByte: function(c) {
		this.b.b.push(c);
	}
	,writeBytes: function(buf,pos,len) {
		var _this = this.b;
		if(pos < 0 || len < 0 || pos + len > buf.length) {
			throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		}
		var b1 = _this.b;
		var b2 = buf.b;
		var _g1 = pos;
		var _g = pos + len;
		while(_g1 < _g) {
			var i = _g1++;
			_this.b.push(b2[i]);
		}
		return len;
	}
	,getBytes: function() {
		return this.b.getBytes();
	}
	,__class__: haxe_io_BytesOutput
});
var haxe_io_Eof = function() { };
haxe_io_Eof.__name__ = true;
haxe_io_Eof.prototype = {
	toString: function() {
		return "Eof";
	}
	,__class__: haxe_io_Eof
};
var haxe_io_Error = { __ename__ : true, __constructs__ : ["Blocked","Overflow","OutsideBounds","Custom"] };
haxe_io_Error.Blocked = ["Blocked",0];
haxe_io_Error.Blocked.toString = $estr;
haxe_io_Error.Blocked.__enum__ = haxe_io_Error;
haxe_io_Error.Overflow = ["Overflow",1];
haxe_io_Error.Overflow.toString = $estr;
haxe_io_Error.Overflow.__enum__ = haxe_io_Error;
haxe_io_Error.OutsideBounds = ["OutsideBounds",2];
haxe_io_Error.OutsideBounds.toString = $estr;
haxe_io_Error.OutsideBounds.__enum__ = haxe_io_Error;
haxe_io_Error.Custom = function(e) { var $x = ["Custom",3,e]; $x.__enum__ = haxe_io_Error; $x.toString = $estr; return $x; };
var haxe_io_Input = function() { };
haxe_io_Input.__name__ = true;
haxe_io_Input.prototype = {
	readByte: function() {
		throw new js__$Boot_HaxeError("Not implemented");
	}
	,readBytes: function(s,pos,len) {
		var k = len;
		var b = s.b;
		if(pos < 0 || len < 0 || pos + len > s.length) {
			throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		}
		try {
			while(k > 0) {
				b[pos] = this.readByte();
				++pos;
				--k;
			}
		} catch( eof ) {
			if (eof instanceof js__$Boot_HaxeError) eof = eof.val;
			if( js_Boot.__instanceof(eof,haxe_io_Eof) ) {
			} else throw(eof);
		}
		return len - k;
	}
	,__class__: haxe_io_Input
};
var js__$Boot_HaxeError = function(val) {
	Error.call(this);
	this.val = val;
	this.message = String(val);
	if(Error.captureStackTrace) {
		Error.captureStackTrace(this,js__$Boot_HaxeError);
	}
};
js__$Boot_HaxeError.__name__ = true;
js__$Boot_HaxeError.wrap = function(val) {
	if((val instanceof Error)) {
		return val;
	} else {
		return new js__$Boot_HaxeError(val);
	}
};
js__$Boot_HaxeError.__super__ = Error;
js__$Boot_HaxeError.prototype = $extend(Error.prototype,{
	__class__: js__$Boot_HaxeError
});
var js_Boot = function() { };
js_Boot.__name__ = true;
js_Boot.getClass = function(o) {
	if((o instanceof Array) && o.__enum__ == null) {
		return Array;
	} else {
		var cl = o.__class__;
		if(cl != null) {
			return cl;
		}
		var name = js_Boot.__nativeClassName(o);
		if(name != null) {
			return js_Boot.__resolveNativeClass(name);
		}
		return null;
	}
};
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(o instanceof Array) {
			if(o.__enum__) {
				if(o.length == 2) {
					return o[0];
				}
				var str = o[0] + "(";
				s += "\t";
				var _g1 = 2;
				var _g = o.length;
				while(_g1 < _g) {
					var i = _g1++;
					if(i != 2) {
						str += "," + js_Boot.__string_rec(o[i],s);
					} else {
						str += js_Boot.__string_rec(o[i],s);
					}
				}
				return str + ")";
			}
			var l = o.length;
			var i1;
			var str1 = "[";
			s += "\t";
			var _g11 = 0;
			var _g2 = l;
			while(_g11 < _g2) {
				var i2 = _g11++;
				str1 += (i2 > 0 ? "," : "") + js_Boot.__string_rec(o[i2],s);
			}
			str1 += "]";
			return str1;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( e ) {
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var k = null;
		var str2 = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		for( var k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str2.length != 2) {
			str2 += ", \n";
		}
		str2 += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str2 += "\n" + s + "}";
		return str2;
	case "string":
		return o;
	default:
		return String(o);
	}
};
js_Boot.__interfLoop = function(cc,cl) {
	if(cc == null) {
		return false;
	}
	if(cc == cl) {
		return true;
	}
	var intf = cc.__interfaces__;
	if(intf != null) {
		var _g1 = 0;
		var _g = intf.length;
		while(_g1 < _g) {
			var i = _g1++;
			var i1 = intf[i];
			if(i1 == cl || js_Boot.__interfLoop(i1,cl)) {
				return true;
			}
		}
	}
	return js_Boot.__interfLoop(cc.__super__,cl);
};
js_Boot.__instanceof = function(o,cl) {
	if(cl == null) {
		return false;
	}
	switch(cl) {
	case Array:
		if((o instanceof Array)) {
			return o.__enum__ == null;
		} else {
			return false;
		}
		break;
	case Bool:
		return typeof(o) == "boolean";
	case Dynamic:
		return true;
	case Float:
		return typeof(o) == "number";
	case Int:
		if(typeof(o) == "number") {
			return (o|0) === o;
		} else {
			return false;
		}
		break;
	case String:
		return typeof(o) == "string";
	default:
		if(o != null) {
			if(typeof(cl) == "function") {
				if(o instanceof cl) {
					return true;
				}
				if(js_Boot.__interfLoop(js_Boot.getClass(o),cl)) {
					return true;
				}
			} else if(typeof(cl) == "object" && js_Boot.__isNativeObj(cl)) {
				if(o instanceof cl) {
					return true;
				}
			}
		} else {
			return false;
		}
		if(cl == Class ? o.__name__ != null : false) {
			return true;
		}
		if(cl == Enum ? o.__ename__ != null : false) {
			return true;
		}
		return o.__enum__ == cl;
	}
};
js_Boot.__cast = function(o,t) {
	if(js_Boot.__instanceof(o,t)) {
		return o;
	} else {
		throw new js__$Boot_HaxeError("Cannot cast " + Std.string(o) + " to " + Std.string(t));
	}
};
js_Boot.__nativeClassName = function(o) {
	var name = js_Boot.__toStr.call(o).slice(8,-1);
	if(name == "Object" || name == "Function" || name == "Math" || name == "JSON") {
		return null;
	}
	return name;
};
js_Boot.__isNativeObj = function(o) {
	return js_Boot.__nativeClassName(o) != null;
};
js_Boot.__resolveNativeClass = function(name) {
	return $global[name];
};
var js_node_Path = require("path");
var js_node_buffer_Buffer = require("buffer").Buffer;
var js_npm_Express = require("express");
var js_npm_Nodemailer = require("nodemailer");
var js_npm_express_BodyParser = require("body-parser");
var js_npm_express__$Route_Route_$Impl_$ = {};
js_npm_express__$Route_Route_$Impl_$.__name__ = true;
js_npm_express__$Route_Route_$Impl_$.fromEReg = function(e) {
	return e.r;
};
var js_npm_express_Static = require("express").static;
var js_npm_mongoose_Mongoose = require("mongoose").Mongoose;
var js_npm_mongoose_Schema = require("mongoose").Schema;
var org_bsonspec_ObjectID = function(input) {
	if(input == null) {
		var out = new haxe_io_BytesOutput();
		out.writeInt32(Math.floor(new Date().getTime() / 1000));
		out.writeBytes(org_bsonspec_ObjectID.machine,0,3);
		out.writeUInt16(org_bsonspec_ObjectID.pid);
		out.writeUInt24(org_bsonspec_ObjectID.sequence++);
		if(org_bsonspec_ObjectID.sequence > 16777215) {
			org_bsonspec_ObjectID.sequence = 0;
		}
		this.bytes = out.getBytes();
	} else {
		this.bytes = new haxe_io_Bytes(new ArrayBuffer(12));
		input.readBytes(this.bytes,0,12);
	}
};
org_bsonspec_ObjectID.__name__ = true;
org_bsonspec_ObjectID.prototype = {
	toString: function() {
		return "ObjectID(\"" + this.bytes.toHex() + "\")";
	}
	,__class__: org_bsonspec_ObjectID
};
var util_AsyncBuilder = function() { };
util_AsyncBuilder.__name__ = true;
String.prototype.__class__ = String;
String.__name__ = true;
Array.__name__ = true;
Date.prototype.__class__ = Date;
Date.__name__ = ["Date"];
var Int = { __name__ : ["Int"]};
var Dynamic = { __name__ : ["Dynamic"]};
var Float = Number;
Float.__name__ = ["Float"];
var Bool = Boolean;
Bool.__ename__ = ["Bool"];
var Class = { __name__ : ["Class"]};
var Enum = { };
var __map_reserved = {};
com_mun_global_Constant.portRadius = 3;
com_mun_global_Constant.pointToLineDistance = 5;
com_mun_global_Constant.pointToEndpointDistance = 6;
com_mun_global_Constant.PIXELRATIO = 1;
com_mun_global_Constant.TRANSFORM_X_DELTA = 40;
com_mun_global_Constant.TRANSFORM_Y_DELTA = 40;
com_mun_global_Constant.TRANSFORM_ZOOM_IN_RATE = 1.5;
com_mun_global_Constant.TRANSFORM_ZOOM_OUT_RATE = 0.5;
js_Boot.__toStr = ({ }).toString;
org_bsonspec_ObjectID.sequence = 0;
org_bsonspec_ObjectID.machine = haxe_io_Bytes.ofString("flash");
org_bsonspec_ObjectID.pid = Std.random(65536);
Main.main();
})(typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this);
